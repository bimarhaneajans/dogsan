{"version":3,"file":"ej2-pdf-export.min.js","sources":["../../src/implementation/collections/utils.js","../../src/implementation/collections/dictionary.js","../../src/implementation/primitives/pdf-name.js","../../src/implementation/input-output/pdf-operators.js","../../src/implementation/input-output/pdf-dictionary-properties.js","../../src/implementation/primitives/pdf-dictionary.js","../../src/implementation/primitives/pdf-number.js","../../src/implementation/primitives/pdf-array.js","../../src/implementation/primitives/pdf-stream.js","../../src/implementation/primitives/pdf-string.js","../../src/implementation/primitives/pdf-reference.js","../../src/implementation/actions/action.js","../../src/implementation/actions/uri-action.js","../../src/implementation/graphics/enum.js","../../src/implementation/graphics/pdf-color.js","../../src/implementation/drawing/pdf-drawing.js","../../src/implementation/graphics/brushes/pdf-brush.js","../../src/implementation/graphics/brushes/pdf-solid-brush.js","../../src/implementation/graphics/fonts/enum.js","../../src/implementation/graphics/fonts/pdf-string-format.js","../../src/implementation/graphics/fonts/string-tokenizer.js","../../src/implementation/graphics/fonts/string-layouter.js","../../src/implementation/graphics/fonts/pdf-font.js","../../src/implementation/input-output/pdf-writer.js","../../src/implementation/input-output/enum.js","../../src/implementation/input-output/pdf-main-object-collection.js","../../src/implementation/document/pdf-document-base.js","../../src/implementation/input-output/cross-table.js","../../src/implementation/document/pdf-catalog.js","../../src/implementation/input-output/pdf-cross-table.js","../../src/implementation/pages/pdf-page-size.js","../../src/implementation/pages/enum.js","../../src/implementation/graphics/pdf-margins.js","../../src/implementation/pages/pdf-page-settings.js","../../src/implementation/input-output/pdf-stream-writer.js","../../src/implementation/graphics/pdf-pen.js","../../src/implementation/graphics/pdf-transformation-matrix.js","../../src/implementation/graphics/constants.js","../../src/implementation/collections/object-object-pair/dictionary.js","../../src/implementation/graphics/pdf-transparency.js","../../src/implementation/document/automatic-fields/automatic-field-info-collection.js","../../src/implementation/graphics/figures/base/graphics-element.js","../../src/implementation/document/automatic-fields/automatic-field.js","../../src/implementation/document/automatic-fields/automatic-field-info.js","../../src/implementation/graphics/images/byte-array.js","../../src/implementation/primitives/pdf-boolean.js","../../src/implementation/graphics/images/image-decoder.js","../../src/implementation/graphics/unit-convertor.js","../../src/implementation/graphics/images/pdf-image.js","../../src/implementation/graphics/images/pdf-bitmap.js","../../src/implementation/graphics/fonts/ttf-table-info.js","../../src/implementation/graphics/fonts/ttf-name-table.js","../../src/implementation/graphics/fonts/ttf-name-record.js","../../src/implementation/graphics/fonts/ttf-head-table.js","../../src/implementation/graphics/fonts/ttf-metrics.js","../../src/implementation/graphics/fonts/ttf-horizontal-header-table.js","../../src/implementation/graphics/fonts/ttf-OS2-Table.js","../../src/implementation/graphics/fonts/ttf-post-table.js","../../src/implementation/graphics/fonts/ttf-long-hor-metric.js","../../src/implementation/graphics/fonts/ttf-cmap-sub-table.js","../../src/implementation/graphics/fonts/ttf-cmap-table.js","../../src/implementation/graphics/fonts/ttf-glyph-info.js","../../src/implementation/graphics/fonts/ttf-loca-table.js","../../src/implementation/graphics/fonts/ttf-apple-cmap-sub-table.js","../../src/implementation/graphics/fonts/ttf-microsoft-cmap-sub-table.js","../../src/implementation/graphics/fonts/ttf-trimmed-cmap-sub-table.js","../../src/implementation/graphics/fonts/ttf-glyph-header.js","../../src/implementation/input-output/big-endian-writer.js","../../src/implementation/graphics/fonts/ttf-reader.js","../../src/implementation/graphics/fonts/pdf-font-metrics.js","../../src/implementation/graphics/fonts/unicode-true-type-font.js","../../src/implementation/graphics/fonts/rtl/rtl-text-shape.js","../../src/implementation/graphics/fonts/rtl/rtl-bidirectional.js","../../src/implementation/graphics/fonts/rtl-renderer.js","../../src/implementation/graphics/figures/enum.js","../../src/implementation/graphics/brushes/pdf-gradient-brush.js","../../src/implementation/graphics/figures/pdf-template.js","../../src/implementation/graphics/pdf-resources.js","../../src/implementation/graphics/brushes/pdf-tiling-brush.js","../../src/implementation/graphics/pdf-graphics.js","../../src/implementation/pages/pdf-page-layer.js","../../src/implementation/general/pdf-collection.js","../../src/implementation/pages/pdf-page-layer-collection.js","../../src/implementation/pages/pdf-page-base.js","../../src/implementation/annotations/annotation-collection.js","../../src/implementation/pages/pdf-page.js","../../src/implementation/pages/page-added-event-arguments.js","../../src/implementation/pages/pdf-section-page-collection.js","../../src/implementation/document/pdf-document-template.js","../../src/implementation/pages/pdf-section-templates.js","../../src/implementation/pages/pdf-section.js","../../src/implementation/pages/pdf-section-collection.js","../../src/implementation/pages/pdf-document-page-collection.js","../../src/implementation/general/pdf-cache-collection.js","../../src/implementation/document/pdf-document.js","../../src/implementation/graphics/fonts/pdf-standard-font-metrics-factory.js","../../src/implementation/graphics/fonts/pdf-standard-font.js","../../src/implementation/annotations/annotation.js","../../src/implementation/annotations/link-annotation.js","../../src/implementation/annotations/action-link-annotation.js","../../src/implementation/annotations/document-link-annotation.js","../../src/implementation/graphics/figures/base/element-layouter.js","../../src/implementation/structured-elements/grid/styles/pdf-borders.js","../../src/implementation/graphics/figures/layout-element.js","../../src/implementation/graphics/figures/base/text-layouter.js","../../src/implementation/graphics/figures/text-element.js","../../src/implementation/annotations/uri-annotation.js","../../src/implementation/annotations/pdf-text-web-link.js","../../src/implementation/document/automatic-fields/pdf-numbers-convertor.js","../../src/implementation/document/automatic-fields/pdf-template-value-pair.js","../../src/implementation/document/automatic-fields/multiple-value-field.js","../../src/implementation/document/automatic-fields/pdf-page-number-field.js","../../src/implementation/document/automatic-fields/composite-field.js","../../src/implementation/document/automatic-fields/single-value-field.js","../../src/implementation/document/automatic-fields/page-count-field.js","../../src/implementation/general/enum.js","../../src/implementation/general/pdf-destination.js","../../src/implementation/graphics/brushes/enum.js","../../src/implementation/general/functions/pdf-function.js","../../src/implementation/general/functions/pdf-sampled-function.js","../../src/implementation/graphics/brushes/pdf-brushes.js","../../src/implementation/graphics/brushes/pdf-blend.js","../../src/implementation/graphics/brushes/pdf-color-blend.js","../../src/implementation/graphics/brushes/pdf-linear-gradient-brush.js","../../src/implementation/graphics/brushes/pdf-radial-gradient-brush.js","../../src/implementation/structured-elements/tables/light-tables/enum.js","../../src/implementation/structured-elements/grid/styles/style.js","../../src/implementation/structured-elements/grid/pdf-grid-cell.js","../../src/implementation/structured-elements/grid/pdf-grid-column.js","../../src/implementation/structured-elements/grid/pdf-grid-row.js","../../src/implementation/structured-elements/grid/pdf-grid.js","../../src/implementation/structured-elements/grid/layout/grid-layouter.js","../../src/implementation/graphics/figures/base/shape-layouter.js","../../src/implementation/graphics/figures/base/pdf-shape-element.js","../../src/implementation/graphics/figures/base/draw-element.js","../../src/implementation/graphics/figures/base/fill-element.js","../../src/implementation/graphics/figures/path.js","../../src/implementation/graphics/figures/rectangle-area.js","../../src/implementation/graphics/figures/ellipse-part.js","../../src/implementation/graphics/figures/arc.js","../../src/implementation/graphics/fonts/pdf-true-type-font.js","../../src/implementation/pages/pdf-page-template-element.js"],"sourcesContent":["/**\n * @private\n * @hidden\n */\nexport function defaultToString(item) {\n    // if (item === null) {\n    //     return 'COLLECTION_NULL';\n    // } else if (typeof item === 'undefined') {\n    //     return 'COLLECTION_UNDEFINED';\n    // } else if (Object.prototype.toString.call(item) === '[object String]') {\n    if (Object.prototype.toString.call(item) === '[object String]') {\n        return '$s' + item;\n    }\n    else {\n        return '$o' + item.toString();\n    }\n}\n","/**\n * Dictionary.ts class for EJ2-PDF\n * @private\n * @hidden\n */\nimport { defaultToString } from './utils';\n/**\n * @private\n * @hidden\n */\nvar Dictionary = /** @class */ (function () {\n    /**\n     * @private\n     * @hidden\n     */\n    function Dictionary(toStringFunction) {\n        this.table = {};\n        this.nElements = 0;\n        this.toStr = toStringFunction || defaultToString;\n    }\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.getValue = function (key) {\n        var pair = this.table['$' + this.toStr(key)];\n        if (typeof pair === 'undefined') {\n            return undefined;\n        }\n        return pair.value;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.setValue = function (key, value) {\n        // if (typeof key === 'undefined' || typeof value === 'undefined') {\n        //     return undefined;\n        // }\n        var ret;\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        // if (typeof previousElement === 'undefined') {\n        this.nElements++;\n        ret = undefined;\n        // }\n        this.table[k] = {\n            key: key,\n            value: value\n        };\n        return ret;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.remove = function (key) {\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        // if (typeof previousElement !== 'undefined') {\n        delete this.table[k];\n        this.nElements--;\n        return previousElement.value;\n        // }\n        // return undefined;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.keys = function () {\n        var keysArray = [];\n        var namesOfKeys = Object.keys(this.table);\n        for (var index1 = 0; index1 < namesOfKeys.length; index1++) {\n            // if (Object.prototype.hasOwnProperty.call(this.table, namesOfKeys[index1])) {\n            var pair1 = this.table[namesOfKeys[index1]];\n            keysArray.push(pair1.key);\n            // }\n        }\n        return keysArray;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.values = function () {\n        var valuesArray = [];\n        var namesOfValues = Object.keys(this.table);\n        for (var index2 = 0; index2 < namesOfValues.length; index2++) {\n            // if (Object.prototype.hasOwnProperty.call(this.table, namesOfValues[index2])) {\n            var pair2 = this.table[namesOfValues[index2]];\n            valuesArray.push(pair2.value);\n            // }\n        }\n        return valuesArray;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.containsKey = function (key) {\n        var retutnValue = true;\n        if (typeof this.getValue(key) === 'undefined') {\n            retutnValue = true;\n        }\n        else {\n            retutnValue = false;\n        }\n        return !retutnValue;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.clear = function () {\n        this.table = {};\n        this.nElements = 0;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.size = function () {\n        return this.nElements;\n    };\n    return Dictionary;\n}()); // End of dictionary\nexport { Dictionary };\n","/**\n * `PdfName` class is used to perform name (element names) related primitive operations.\n * @private\n */\nvar PdfName = /** @class */ (function () {\n    function PdfName(value) {\n        /**\n         * `Start symbol` of the name object.\n         * @default /\n         * @private\n         */\n        this.stringStartMark = '/';\n        /**\n         * `Value` of the element.\n         * @private\n         */\n        this.internalValue = '';\n        /**\n         * Indicates if the object is currently in `saving state or not`.\n         * @default false\n         * @private\n         */\n        this.isSaving6 = false;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position6 = -1;\n        this.internalValue = this.normalizeValue(value);\n    }\n    Object.defineProperty(PdfName.prototype, \"status\", {\n        //property\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status6;\n        },\n        set: function (value) {\n            this.status6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving6;\n        },\n        set: function (value) {\n            this.isSaving6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index6;\n        },\n        set: function (value) {\n            this.index6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position6;\n        },\n        set: function (value) {\n            this.position6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"value\", {\n        /**\n         * Gets or sets the `value` of the object.\n         * @private\n         */\n        get: function () {\n            return this.internalValue;\n        },\n        set: function (value) {\n            // if (value !== this.value) {\n            var val = value;\n            if (value !== null && value.length > 0) {\n                // val = (value.substring(0, 1) === this.stringStartMark) ? value.substring(1) : value;\n                val = value;\n                this.internalValue = this.normalizeValue(val);\n            }\n            else {\n                this.internalValue = val;\n            }\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //public methods\n    /**\n     * `Saves` the name using the specified writer.\n     * @private\n     */\n    PdfName.prototype.save = function (writer) {\n        // if (writer === null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        writer.write(this.toString());\n    };\n    /**\n     * Gets `string` representation of the primitive.\n     * @private\n     */\n    PdfName.prototype.toString = function () {\n        return (this.stringStartMark + this.escapeString(this.value));\n    };\n    /**\n     * Creates a `copy of PdfName`.\n     * @private\n     */\n    PdfName.prototype.clone = function (crossTable) {\n        var newName = new PdfName();\n        newName.value = this.internalValue;\n        return newName;\n    };\n    /**\n     * Replace some characters with its `escape sequences`.\n     * @private\n     */\n    PdfName.prototype.escapeString = function (stringValue) {\n        // if (str === null) {\n        //     throw new Error('ArgumentNullException : str');\n        // }\n        // if (str === '') {\n        //     return str;\n        // }\n        var result = '';\n        var len = 0;\n        for (var i = 0, len_1 = stringValue.length; i < len_1; i++) {\n            var ch = stringValue[i];\n            var index = PdfName.delimiters.indexOf(ch);\n            // switch (ch) {\n            //     case '\\r' :\n            //         result = result + '\\\\r';\n            //         break;\n            //     case '\\n' :\n            //         result = result + '\\n';\n            //         break;\n            //     case '(' :\n            //     case ')' :\n            //     case '\\\\' :\n            //         //result.Append( '\\\\' ).Append( ch );\n            //         result = result + ch;\n            //         break;\n            //     default :\n            //         result = result + ch;\n            //         break;\n            // }\n            result = result + ch;\n        }\n        return result;\n    };\n    //methiods\n    /**\n     * Replace a symbol with its code with the precedence of the `sharp sign`.\n     * @private\n     */\n    PdfName.prototype.normalizeValue = function (value, c) {\n        // if (typeof c === undefined) {\n        //     let str : string = value;\n        //     for (let i : number = 0; i < PdfName.replacements.length; i++) {\n        //         str = this.normalizeValue(str, c);\n        //     }\n        //     return str;\n        // } else {\n        var strFormat = '#{0:X}';\n        //return value.replace(c.toString(),String.format(strFormat,c));\n        return value;\n        // }\n    };\n    /**\n     * PDF `special characters`.\n     * @private\n     */\n    PdfName.delimiters = '()<>[]{}/%}';\n    /**\n     * The symbols that are not allowed in PDF names and `should be replaced`.\n     * @private\n     */\n    PdfName.replacements = [' ', '\\t', '\\n', '\\r'];\n    return PdfName;\n}());\nexport { PdfName };\n","/**\n * PdfOperators.ts class for EJ2-PDF\n * Class of string PDF common operators.\n * @private\n */\nvar Operators = /** @class */ (function () {\n    /**\n     * Create an instance of `PdfOperator` class.\n     * @private\n     */\n    function Operators() {\n        /**\n         * Specifies the value of `test`.\n         * @private\n         */\n        this.forTest = 'test';\n        this.forTest = Operators.obj;\n    }\n    /**\n     * Specifies the value of `obj`.\n     * @private\n     */\n    Operators.obj = 'obj';\n    /**\n     * Specifies the value of `endObj`.\n     * @private\n     */\n    Operators.endObj = 'endobj';\n    /**\n     * Specifies the value of `R`.\n     * @private\n     */\n    Operators.r = 'R';\n    /**\n     * Specifies the value of ` `.\n     * @private\n     */\n    Operators.whiteSpace = ' ';\n    /**\n     * Specifies the value of `/`.\n     * @private\n     */\n    Operators.slash = '/';\n    /**\n     * Specifies the value of `\\r\\n`.\n     * @private\n     */\n    Operators.newLine = '\\r\\n';\n    /**\n     * Specifies the value of `stream`.\n     * @private\n     */\n    Operators.stream = 'stream';\n    /**\n     * Specifies the value of `endStream`.\n     * @private\n     */\n    Operators.endStream = 'endstream';\n    /**\n     * Specifies the value of `xref`.\n     * @private\n     */\n    Operators.xref = 'xref';\n    /**\n     * Specifies the value of `f`.\n     * @private\n     */\n    Operators.f = 'f';\n    /**\n     * Specifies the value of `n`.\n     * @private\n     */\n    Operators.n = 'n';\n    /**\n     * Specifies the value of `trailer`.\n     * @private\n     */\n    Operators.trailer = 'trailer';\n    /**\n     * Specifies the value of `startxref`.\n     * @private\n     */\n    Operators.startxref = 'startxref';\n    /**\n     * Specifies the value of `eof`.\n     * @private\n     */\n    Operators.eof = '%%EOF';\n    /**\n     * Specifies the value of `header`.\n     * @private\n     */\n    Operators.header = '%PDF-1.5';\n    /**\n     * Specifies the value of `beginText`.\n     * @private\n     */\n    Operators.beginText = 'BT';\n    /**\n     * Specifies the value of `endText`.\n     * @private\n     */\n    Operators.endText = 'ET';\n    /**\n     * Specifies the value of `m`.\n     * @private\n     */\n    Operators.beginPath = 'm';\n    /**\n     * Specifies the value of `l`.\n     * @private\n     */\n    Operators.appendLineSegment = 'l';\n    /**\n     * Specifies the value of `S`.\n     * @private\n     */\n    Operators.stroke = 'S';\n    /**\n     * Specifies the value of `f`.\n     * @private\n     */\n    Operators.fill = 'f';\n    /**\n     * Specifies the value of `f*`.\n     * @private\n     */\n    Operators.fillEvenOdd = 'f*';\n    /**\n     * Specifies the value of `B`.\n     * @private\n     */\n    Operators.fillStroke = 'B';\n    /**\n     * Specifies the value of `B*`.\n     * @private\n     */\n    Operators.fillStrokeEvenOdd = 'B*';\n    /**\n     * Specifies the value of `c`.\n     * @private\n     */\n    Operators.appendbeziercurve = 'c';\n    /**\n     * Specifies the value of `re`.\n     * @private\n     */\n    Operators.appendRectangle = 're';\n    /**\n     * Specifies the value of `q`.\n     * @private\n     */\n    Operators.saveState = 'q';\n    /**\n     * Specifies the value of `Q`.\n     * @private\n     */\n    Operators.restoreState = 'Q';\n    /**\n     * Specifies the value of `Do`.\n     * @private\n     */\n    Operators.paintXObject = 'Do';\n    /**\n     * Specifies the value of `cm`.\n     * @private\n     */\n    Operators.modifyCtm = 'cm';\n    /**\n     * Specifies the value of `Tm`.\n     * @private\n     */\n    Operators.modifyTM = 'Tm';\n    /**\n     * Specifies the value of `w`.\n     * @private\n     */\n    Operators.setLineWidth = 'w';\n    /**\n     * Specifies the value of `J`.\n     * @private\n     */\n    Operators.setLineCapStyle = 'J';\n    /**\n     * Specifies the value of `j`.\n     * @private\n     */\n    Operators.setLineJoinStyle = 'j';\n    /**\n     * Specifies the value of `d`.\n     * @private\n     */\n    Operators.setDashPattern = 'd';\n    /**\n     * Specifies the value of `i`.\n     * @private\n     */\n    Operators.setFlatnessTolerance = 'i';\n    /**\n     * Specifies the value of `h`.\n     * @private\n     */\n    Operators.closePath = 'h';\n    /**\n     * Specifies the value of `s`.\n     * @private\n     */\n    Operators.closeStrokePath = 's';\n    /**\n     * Specifies the value of `b`.\n     * @private\n     */\n    Operators.closeFillStrokePath = 'b';\n    /**\n     * Specifies the value of `setCharacterSpace`.\n     * @private\n     */\n    Operators.setCharacterSpace = 'Tc';\n    /**\n     * Specifies the value of `setWordSpace`.\n     * @private\n     */\n    Operators.setWordSpace = 'Tw';\n    /**\n     * Specifies the value of `setHorizontalScaling`.\n     * @private\n     */\n    Operators.setHorizontalScaling = 'Tz';\n    /**\n     * Specifies the value of `setTextLeading`.\n     * @private\n     */\n    Operators.setTextLeading = 'TL';\n    /**\n     * Specifies the value of `setFont`.\n     * @private\n     */\n    Operators.setFont = 'Tf';\n    /**\n     * Specifies the value of `setRenderingMode`.\n     * @private\n     */\n    Operators.setRenderingMode = 'Tr';\n    /**\n     * Specifies the value of `setTextRise`.\n     * @private\n     */\n    Operators.setTextRise = 'Ts';\n    /**\n     * Specifies the value of `setTextScaling`.\n     * @private\n     */\n    Operators.setTextScaling = 'Tz';\n    /**\n     * Specifies the value of `setCoords`.\n     * @private\n     */\n    Operators.setCoords = 'Td';\n    /**\n     * Specifies the value of `goToNextLine`.\n     * @private\n     */\n    Operators.goToNextLine = 'T*';\n    /**\n     * Specifies the value of `setText`.\n     * @private\n     */\n    Operators.setText = 'Tj';\n    /**\n     * Specifies the value of `setTextWithFormatting`.\n     * @private\n     */\n    Operators.setTextWithFormatting = 'TJ';\n    /**\n     * Specifies the value of `setTextOnNewLine`.\n     * @private\n     */\n    Operators.setTextOnNewLine = '\\'';\n    /**\n     * Specifies the value of `selectcolorspaceforstroking`.\n     * @private\n     */\n    Operators.selectcolorspaceforstroking = 'CS';\n    /**\n     * Specifies the value of `selectcolorspacefornonstroking`.\n     * @private\n     */\n    Operators.selectcolorspacefornonstroking = 'cs';\n    /**\n     * Specifies the value of `setrbgcolorforstroking`.\n     * @private\n     */\n    Operators.setrbgcolorforstroking = 'RG';\n    /**\n     * Specifies the value of `setrbgcolorfornonstroking`.\n     * @private\n     */\n    Operators.setrbgcolorfornonstroking = 'rg';\n    /**\n     * Specifies the value of `K`.\n     * @private\n     */\n    Operators.setcmykcolorforstroking = 'K';\n    /**\n     * Specifies the value of `k`.\n     * @private\n     */\n    Operators.setcmykcolorfornonstroking = 'k';\n    /**\n     * Specifies the value of `G`.\n     * @private\n     */\n    Operators.setgraycolorforstroking = 'G';\n    /**\n     * Specifies the value of `g`.\n     * @private\n     */\n    Operators.setgraycolorfornonstroking = 'g';\n    /**\n     * Specifies the value of `W`.\n     * @private\n     */\n    Operators.clipPath = 'W';\n    /**\n     * Specifies the value of `clipPathEvenOdd`.\n     * @private\n     */\n    Operators.clipPathEvenOdd = 'W*';\n    /**\n     * Specifies the value of `n`.\n     * @private\n     */\n    Operators.endPath = 'n';\n    /**\n     * Specifies the value of `setGraphicsState`.\n     * @private\n     */\n    Operators.setGraphicsState = 'gs';\n    /**\n     * Specifies the value of `%`.\n     * @private\n     */\n    Operators.comment = '%';\n    /**\n     * Specifies the value of `*`.\n     * @private\n     */\n    Operators.evenOdd = '*';\n    /**\n     * Specifies the value of `M`.\n     * @private\n     */\n    Operators.setMiterLimit = 'M';\n    /**\n     * Same as SC, but also supports Pattern, Separation, DeviceN, and ICCBased color spaces. For non-stroking operations.\n     * @public\n     */\n    Operators.setColorAndPattern = 'scn';\n    /**\n     * Same as SC, but also supports Pattern, Separation, DeviceN, and ICCBased color spaces. For stroking.\n     */\n    Operators.setColorAndPatternStroking = 'SCN';\n    return Operators;\n}());\nexport { Operators };\n","/**\n * dictionaryProperties.ts class for EJ2-PDF\n * PDF dictionary properties.\n * @private\n */\nvar DictionaryProperties = /** @class */ (function () {\n    /**\n     * Initialize an instance for `PdfDictionaryProperties` class.\n     * @private\n     */\n    function DictionaryProperties() {\n        /**\n         * Specifies the value of `Pages`.\n         * @private\n         */\n        this.pages = 'Pages';\n        /**\n         * Specifies the value of `Kids`.\n         * @private\n         */\n        this.kids = 'Kids';\n        /**\n         * Specifies the value of `Count`.\n         * @private\n         */\n        this.count = 'Count';\n        /**\n         * Specifies the value of `Resources`.\n         * @private\n         */\n        this.resources = 'Resources';\n        /**\n         * Specifies the value of `Type`.\n         * @private\n         */\n        this.type = 'Type';\n        /**\n         * Specifies the value of `Size`.\n         * @private\n         */\n        this.size = 'Size';\n        /**\n         * Specifies the value of `MediaBox`.\n         * @private\n         */\n        this.mediaBox = 'MediaBox';\n        /**\n         * Specifies the value of `Parent`.\n         * @private\n         */\n        this.parent = 'Parent';\n        /**\n         * Specifies the value of `Root`.\n         * @private\n         */\n        this.root = 'Root';\n        /**\n         * Specifies the value of `DecodeParms`.\n         * @private\n         */\n        this.decodeParms = 'DecodeParms';\n        /**\n         * Specifies the value of `Filter`.\n         * @private\n         */\n        this.filter = 'Filter';\n        /**\n         * Specifies the value of `Font`.\n         * @private\n         */\n        this.font = 'Font';\n        /**\n         * Specifies the value of `Type1`.\n         * @private\n         */\n        this.type1 = 'Type1';\n        /**\n         * Specifies the value of `BaseFont`.\n         * @private\n         */\n        this.baseFont = 'BaseFont';\n        /**\n         * Specifies the value of `Encoding`.\n         * @private\n         */\n        this.encoding = 'Encoding';\n        /**\n         * Specifies the value of `Subtype`.\n         * @private\n         */\n        this.subtype = 'Subtype';\n        /**\n         * Specifies the value of `Contents`.\n         * @private\n         */\n        this.contents = 'Contents';\n        /**\n         * Specifies the value of `ProcSet`.\n         * @private\n         */\n        this.procset = 'ProcSet';\n        /**\n         * Specifies the value of `ColorSpace`.\n         * @private\n         */\n        this.colorSpace = 'ColorSpace';\n        /**\n         * Specifies the value of `ExtGState`.\n         * @private\n         */\n        this.extGState = 'ExtGState';\n        /**\n         * Specifies the value of `Pattern`.\n         * @private\n         */\n        this.pattern = 'Pattern';\n        /**\n         * Specifies the value of `XObject`.\n         * @private\n         */\n        this.xObject = 'XObject';\n        /**\n         * Specifies the value of `Length`.\n         * @private\n         */\n        this.length = 'Length';\n        /**\n         * Specifies the value of `Width`.\n         * @private\n         */\n        this.width = 'Width';\n        /**\n         * Specifies the value of `Height`.\n         * @private\n         */\n        this.height = 'Height';\n        /**\n         * Specifies the value of `BitsPerComponent`.\n         * @private\n         */\n        this.bitsPerComponent = 'BitsPerComponent';\n        /**\n         * Specifies the value of `Image`.\n         * @private\n         */\n        this.image = 'Image';\n        /**\n         * Specifies the value of `dctdecode`.\n         * @private\n         */\n        this.dctdecode = 'DCTDecode';\n        /**\n         * Specifies the value of `Columns`.\n         * @private\n         */\n        this.columns = 'Columns';\n        /**\n         * Specifies the value of `BlackIs1`.\n         * @private\n         */\n        this.blackIs1 = 'BlackIs1';\n        /**\n         * Specifies the value of `K`.\n         * @private\n         */\n        this.k = 'K';\n        /**\n         * Specifies the value of `S`.\n         * @private\n         */\n        this.s = 'S';\n        /**\n         * Specifies the value of `Predictor`.\n         * @private\n         */\n        this.predictor = 'Predictor';\n        /**\n         * Specifies the value of `DeviceRGB`.\n         * @private\n         */\n        this.deviceRgb = 'DeviceRGB';\n        /**\n         * Specifies the value of `Next`.\n         * @private\n         */\n        this.next = 'Next';\n        /**\n         * Specifies the value of `Action`.\n         * @private\n         */\n        this.action = 'Action';\n        /**\n         * Specifies the value of `Link`.\n         * @private\n         */\n        this.link = 'Link';\n        /**\n         *\n         * Specifies the value of `A`.\n         * @private\n         */\n        this.a = 'A';\n        /**\n         * Specifies the value of `Annot`.\n         * @private\n         */\n        this.annot = 'Annot';\n        /**\n         * Specifies the value of `P`.\n         * @private\n         */\n        this.p = 'P';\n        /**\n         * Specifies the value of `C`.\n         * @private\n         */\n        this.c = 'C';\n        /**\n         * Specifies the value of `Rect`.\n         * @private\n         */\n        this.rect = 'Rect';\n        /**\n         * Specifies the value of `URI`.\n         * @private\n         */\n        this.uri = 'URI';\n        /**\n         * Specifies the value of `Annots`.\n         * @private\n         */\n        this.annots = 'Annots';\n        /**\n         * Specifies the value of `ca`.\n         * @private\n         */\n        this.ca = 'ca';\n        /**\n         * Specifies the value of `CA`.\n         * @private\n         */\n        this.CA = 'CA';\n        /**\n         * Specifies the value of `XYZ`.\n         * @private\n         */\n        this.xyz = 'XYZ';\n        /**\n         * Specifies the value of `Fit`.\n         * @private\n         */\n        this.fit = 'Fit';\n        /**\n         * Specifies the value of `Dest`.\n         * @private\n         */\n        this.dest = 'Dest';\n        /**\n         * Specifies the value of `BM`.\n         * @private\n         */\n        this.BM = 'BM';\n        /**\n         * Specifies the value of `flatedecode`.\n         * @private\n         */\n        this.flatedecode = 'FlateDecode';\n        /**\n         * Specifies the value of `Rotate`.\n         * @private\n         */\n        this.rotate = 'Rotate';\n        /**\n         * Specifies the value of 'bBox'.\n         * @private\n         */\n        this.bBox = 'BBox';\n        /**\n         * Specifies the value of 'form'.\n         * @private\n         */\n        this.form = 'Form';\n        /**\n         * Specifies the value of 'w'.\n         * @private\n         */\n        this.w = 'W';\n        /**\n         * Specifies the value of 'cIDFontType2'.\n         * @private\n         */\n        this.cIDFontType2 = 'CIDFontType2';\n        /**\n         * Specifies the value of 'cIDToGIDMap'.\n         * @private\n         */\n        this.cIDToGIDMap = 'CIDToGIDMap';\n        /**\n         * Specifies the value of 'identity'.\n         * @private\n         */\n        this.identity = 'Identity';\n        /**\n         * Specifies the value of 'dw'.\n         * @private\n         */\n        this.dw = 'DW';\n        /**\n         * Specifies the value of 'fontDescriptor'.\n         * @private\n         */\n        this.fontDescriptor = 'FontDescriptor';\n        /**\n         * Specifies the value of 'cIDSystemInfo'.\n         * @private\n         */\n        this.cIDSystemInfo = 'CIDSystemInfo';\n        /**\n         * Specifies the value of 'fontName'.\n         * @private\n         */\n        this.fontName = 'FontName';\n        /**\n         * Specifies the value of 'flags'.\n         * @private\n         */\n        this.flags = 'Flags';\n        /**\n         * Specifies the value of 'fontBBox'.\n         * @private\n         */\n        this.fontBBox = 'FontBBox';\n        /**\n         * Specifies the value of 'missingWidth'.\n         * @private\n         */\n        this.missingWidth = 'MissingWidth';\n        /**\n         * Specifies the value of 'stemV'.\n         * @private\n         */\n        this.stemV = 'StemV';\n        /**\n         * Specifies the value of 'italicAngle'.\n         * @private\n         */\n        this.italicAngle = 'ItalicAngle';\n        /**\n         * Specifies the value of 'capHeight'.\n         * @private\n         */\n        this.capHeight = 'CapHeight';\n        /**\n         * Specifies the value of 'ascent'.\n         * @private\n         */\n        this.ascent = 'Ascent';\n        /**\n         * Specifies the value of 'descent'.\n         * @private\n         */\n        this.descent = 'Descent';\n        /**\n         * Specifies the value of 'leading'.\n         * @private\n         */\n        this.leading = 'Leading';\n        /**\n         * Specifies the value of 'avgWidth'.\n         * @private\n         */\n        this.avgWidth = 'AvgWidth';\n        /**\n         * Specifies the value of 'fontFile2'.\n         * @private\n         */\n        this.fontFile2 = 'FontFile2';\n        /**\n         * Specifies the value of 'maxWidth'.\n         * @private\n         */\n        this.maxWidth = 'MaxWidth';\n        /**\n         * Specifies the value of 'xHeight'.\n         * @private\n         */\n        this.xHeight = 'XHeight';\n        /**\n         * Specifies the value of 'stemH'.\n         * @private\n         */\n        this.stemH = 'StemH';\n        /**\n         * Specifies the value of 'registry'.\n         * @private\n         */\n        this.registry = 'Registry';\n        /**\n         * Specifies the value of 'ordering'.\n         * @private\n         */\n        this.ordering = 'Ordering';\n        /**\n         * Specifies the value of 'supplement'.\n         * @private\n         */\n        this.supplement = 'Supplement';\n        /**\n         * Specifies the value of 'type0'.\n         * @private\n         */\n        this.type0 = 'Type0';\n        /**\n         * Specifies the value of 'identityH'.\n         * @private\n         */\n        this.identityH = 'Identity-H';\n        /**\n         * Specifies the value of 'toUnicode'.\n         * @private\n         */\n        this.toUnicode = 'ToUnicode';\n        /**\n         * Specifies the value of 'descendantFonts'.\n         * @private\n         */\n        this.descendantFonts = 'DescendantFonts';\n        /**\n         * Specifies the value of 'background'.\n         * @private\n         */\n        this.background = 'Background';\n        /**\n         * Specifies the value of 'shading'.\n         * @private\n         */\n        this.shading = 'Shading';\n        /**\n         * Specifies the value of 'matrix'.\n         * @private\n         */\n        this.matrix = 'Matrix';\n        /**\n         * Specifies the value of 'antiAlias'.\n         * @private\n         */\n        this.antiAlias = 'AntiAlias';\n        /**\n         * Specifies the value of 'function'.\n         * @private\n         */\n        this.function = 'Function';\n        /**\n         * Specifies the value of 'extend'.\n         * @private\n         */\n        this.extend = 'Extend';\n        /**\n         * Specifies the value of 'shadingType'.\n         * @private\n         */\n        this.shadingType = 'ShadingType';\n        /**\n         * Specifies the value of 'coords'.\n         * @private\n         */\n        this.coords = 'Coords';\n        /**\n         * Specifies the value of 'domain'.\n         * @private\n         */\n        this.domain = 'Domain';\n        /**\n         * Specifies the value of 'range'.\n         * @private\n         */\n        this.range = 'Range';\n        /**\n         * Specifies the value of 'functionType'.\n         * @private\n         */\n        this.functionType = 'FunctionType';\n        /**\n         * Specifies the value of 'bitsPerSample'.\n         * @private\n         */\n        this.bitsPerSample = 'BitsPerSample';\n        /**\n         * Specifies the value of 'patternType'.\n         * @private\n         */\n        this.patternType = 'PatternType';\n        /**\n         * Specifies the value of 'paintType'.\n         * @private\n         */\n        this.paintType = 'PaintType';\n        /**\n         * Specifies the value of 'tilingType'.\n         * @private\n         */\n        this.tilingType = 'TilingType';\n        /**\n         * Specifies the value of 'xStep'.\n         * @private\n         */\n        this.xStep = 'XStep';\n        /**\n         * Specifies the value of 'yStep'.\n         * @private\n         */\n        this.yStep = 'YStep';\n        //\n    }\n    return DictionaryProperties;\n}());\nexport { DictionaryProperties };\n","import { Dictionary } from './../collections/dictionary';\nimport { PdfName } from './pdf-name';\nimport { Operators } from './../input-output/pdf-operators';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfDictionary` class is used to perform primitive operations.\n * @private\n */\nvar PdfDictionary = /** @class */ (function () {\n    function PdfDictionary(dictionary) {\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position7 = -1;\n        /**\n         * The `IPdfSavable` with the specified key.\n         * @private\n         */\n        this.primitiveItems = new Dictionary();\n        /**\n         * `Start marker` for dictionary.\n         * @private\n         */\n        this.prefix = '<<';\n        /**\n         * `End marker` for dictionary.\n         * @private\n         */\n        this.suffix = '>>';\n        /**\n         * @hidden\n         * @private\n         */\n        this.resources = [];\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.object = null;\n        /**\n         * Flag for PDF file formar 1.5 is dictionary `archiving` needed.\n         * @default true\n         * @private\n         */\n        this.archive = true;\n        /**\n         * Represents the Font dictionary.\n         * @hidden\n         * @private\n         */\n        this.isFont = false;\n        if (typeof dictionary === 'undefined') {\n            this.primitiveItems = new Dictionary();\n            this.encrypt = true;\n            this.dictionaryProperties = new DictionaryProperties();\n        }\n        else {\n            this.primitiveItems = new Dictionary();\n            var keys = dictionary.items.keys();\n            var values = dictionary.items.values();\n            for (var index = 0; index < dictionary.items.size(); index++) {\n                this.primitiveItems.setValue(keys[index], values[index]);\n            }\n            this.status = dictionary.status;\n            this.freezeChanges(this);\n            this.encrypt = true;\n            this.dictionaryProperties = new DictionaryProperties();\n        }\n    }\n    Object.defineProperty(PdfDictionary.prototype, \"items\", {\n        //Properties\n        /**\n         * Gets or sets the `IPdfSavable` with the specified key.\n         * @private\n         */\n        get: function () {\n            return this.primitiveItems;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status7;\n        },\n        set: function (value) {\n            this.status7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving7;\n        },\n        set: function (value) {\n            this.isSaving7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index7;\n        },\n        set: function (value) {\n            this.index7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.object;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position7;\n        },\n        set: function (value) {\n            this.position7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"Count\", {\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.primitiveItems.size();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"Dictionary\", {\n        /**\n         * Collection of `items` in the object.\n         * @private\n         */\n        get: function () {\n            return this;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get flag if need to `archive` dictionary.\n     * @private\n     */\n    PdfDictionary.prototype.getArchive = function () {\n        return this.archive;\n    };\n    /**\n     * Set flag if need to `archive` dictionary.\n     * @private\n     */\n    PdfDictionary.prototype.setArchive = function (value) {\n        this.archive = value;\n    };\n    /**\n     * Sets flag if `encryption` is needed.\n     * @private\n     */\n    PdfDictionary.prototype.setEncrypt = function (value) {\n        this.encrypt = value;\n        this.modify();\n    };\n    /**\n     * Gets flag if `encryption` is needed.\n     * @private\n     */\n    PdfDictionary.prototype.getEncrypt = function () {\n        return this.encrypt;\n    };\n    /**\n     * `Freezes` the changes.\n     * @private\n     */\n    PdfDictionary.prototype.freezeChanges = function (freezer) {\n        this.bChanged = false;\n    };\n    /**\n     * Creates a `copy of PdfDictionary`.\n     * @private\n     */\n    PdfDictionary.prototype.clone = function (crossTable) {\n        //Need to add more codings\n        var newDict = new PdfDictionary();\n        return newDict;\n    };\n    /**\n     * `Mark` this instance modified.\n     * @private\n     */\n    PdfDictionary.prototype.modify = function () {\n        this.bChanged = true;\n    };\n    /**\n     * `Removes` the specified key.\n     * @private\n     */\n    PdfDictionary.prototype.remove = function (key) {\n        if (typeof key !== 'string') {\n            this.primitiveItems.remove(key.value);\n            this.modify();\n        }\n        else {\n            this.remove(new PdfName(key));\n        }\n    };\n    /**\n     * `Determines` whether the dictionary contains the key.\n     * @private\n     */\n    PdfDictionary.prototype.containsKey = function (key) {\n        var returnValue = false;\n        returnValue = this.primitiveItems.containsKey(key.toString());\n        return returnValue;\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onBeginSave = function () {\n        this.beginSave.sender.beginSave();\n    };\n    /**\n     * Raises event `Font Dictionary BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onFontDictionaryBeginSave = function () {\n        this.fontDictionaryBeginSave.sender.fontDictionaryBeginSave();\n    };\n    /**\n     * Raises event `Descendant Font BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onDescendantFontBeginSave = function () {\n        this.descendantFontBeginSave.sender.descendantFontBeginSave();\n    };\n    /**\n     * Raises event 'BeginSave'.\n     * @private\n     */\n    PdfDictionary.prototype.onTemplateBeginSave = function () {\n        this.pageBeginDrawTemplate.sender.pageBeginSave();\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onBeginAnnotationSave = function () {\n        this.annotationBeginSave.sender.beginSave();\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onSectionBeginSave = function (writer) {\n        var saveEvent = this.sectionBeginSave;\n        saveEvent.sender.beginSave(saveEvent.state, writer);\n    };\n    PdfDictionary.prototype.save = function (writer, bRaiseEvent) {\n        if (typeof bRaiseEvent === 'undefined') {\n            this.save(writer, true);\n        }\n        else {\n            writer.write(this.prefix);\n            if (typeof this.beginSave !== 'undefined') {\n                this.onBeginSave();\n            }\n            if (typeof this.descendantFontBeginSave !== 'undefined') {\n                this.onDescendantFontBeginSave();\n            }\n            if (typeof this.fontDictionaryBeginSave !== 'undefined') {\n                this.onFontDictionaryBeginSave();\n            }\n            if (typeof this.annotationBeginSave !== 'undefined') {\n                this.onBeginAnnotationSave();\n            }\n            if (typeof this.sectionBeginSave !== 'undefined') {\n                this.onSectionBeginSave(writer);\n            }\n            if (typeof this.pageBeginDrawTemplate !== 'undefined') {\n                this.onTemplateBeginSave();\n            }\n            // }\n            if (this.Count > 0) {\n                this.saveItems(writer);\n            }\n            writer.write(this.suffix);\n            writer.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Save dictionary items`.\n     * @private\n     */\n    PdfDictionary.prototype.saveItems = function (writer) {\n        writer.write(Operators.newLine);\n        var keys = this.primitiveItems.keys();\n        var values = this.primitiveItems.values();\n        for (var index = 0; index < keys.length; index++) {\n            var key = keys[index];\n            var name_1 = new PdfName(key);\n            name_1.save(writer);\n            writer.write(Operators.whiteSpace);\n            var resources = values[index];\n            resources.save(writer);\n            writer.write(Operators.newLine);\n        }\n    };\n    return PdfDictionary;\n}());\nexport { PdfDictionary };\nvar SaveSectionCollectionEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveSectionCollectionEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveSectionCollectionEventHandler;\n}());\nexport { SaveSectionCollectionEventHandler };\nvar SaveDescendantFontEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveDescendantFontEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveDescendantFontEventHandler;\n}());\nexport { SaveDescendantFontEventHandler };\nvar SaveFontDictionaryEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveFontDictionaryEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveFontDictionaryEventHandler;\n}());\nexport { SaveFontDictionaryEventHandler };\nvar SaveAnnotationEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save annotation event handler` class.\n     * @private\n     */\n    function SaveAnnotationEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveAnnotationEventHandler;\n}());\nexport { SaveAnnotationEventHandler };\nvar SaveSectionEventHandler = /** @class */ (function () {\n    // constructors\n    /**\n     * New instance for `save section event handler` class.\n     * @private\n     */\n    function SaveSectionEventHandler(sender, state) {\n        this.sender = sender;\n        this.state = state;\n    }\n    return SaveSectionEventHandler;\n}());\nexport { SaveSectionEventHandler };\n/**\n * SaveTemplateEventHandler class used to store information about template elements.\n * @private\n * @hidden\n */\nvar SaveTemplateEventHandler = /** @class */ (function () {\n    /**\n     * New instance for save section collection event handler class.\n     * @public\n     */\n    function SaveTemplateEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveTemplateEventHandler;\n}());\nexport { SaveTemplateEventHandler };\n","/**\n * `PdfNumber` class is used to perform number related primitive operations.\n * @private\n */\nvar PdfNumber = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfNumber` class.\n     * @private\n     */\n    function PdfNumber(value) {\n        /**\n         * Sotres the `position`.\n         * @default -1\n         * @private\n         */\n        this.position5 = -1;\n        this.value = value;\n    }\n    Object.defineProperty(PdfNumber.prototype, \"intValue\", {\n        /**\n         * Gets or sets the `integer` value.\n         * @private\n         */\n        get: function () {\n            return this.value;\n        },\n        set: function (value) {\n            this.value = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"isInteger\", {\n        /**\n         * Gets or sets a value indicating whether this instance `is integer`.\n         * @private\n         */\n        get: function () {\n            return this.integer;\n        },\n        set: function (value) {\n            this.integer = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status5;\n        },\n        set: function (value) {\n            this.status5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving5;\n        },\n        set: function (value) {\n            this.isSaving5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index5;\n        },\n        set: function (value) {\n            this.index5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position5;\n        },\n        set: function (value) {\n            this.position5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var rValue = null;\n            return rValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Saves the object`.\n     * @private\n     */\n    PdfNumber.prototype.save = function (writer) {\n        writer.write(this.intValue.toString()); //tostring(CultureInfo.InletiantCulture)\n    };\n    /**\n     * Creates a `copy of PdfNumber`.\n     * @private\n     */\n    PdfNumber.prototype.clone = function (crossTable) {\n        var newNumber = new PdfNumber(this.value);\n        return newNumber;\n    };\n    /**\n     * Converts a `float value to a string` using Adobe PDF rules.\n     * @private\n     */\n    PdfNumber.floatToString = function (number) {\n        // let tempString1 : string = number.toString();\n        // let tempString2 : string = tempString1.indexOf('.') != -1 ? tempString1.substring(0, tempString1.indexOf('.')) : tempString1;\n        var returnString = number.toFixed(2);\n        if (returnString === '0.00') {\n            returnString = '.00';\n        }\n        // let prefixLength : number = (22 - tempString2.length) >= 0 ? (22 - tempString2.length) : 0;\n        // for (let index : number = 0; index < prefixLength; index++) {\n        //     returnString += '0';\n        // }\n        // returnString += tempString2 + '.00';\n        // returnString += (tempString3.length > 6) ? tempString3.substring(0,6) : tempString3;\n        // let suffixLength : number = (6 - tempString3.length) >= 0 ? (6 - tempString3.length) : 0;\n        // for (let index : number = 0; index < suffixLength; index++) {\n        //     returnString += '0';\n        // }\n        return returnString;\n    };\n    /**\n     * Determines the `minimum of the three values`.\n     * @private\n     */\n    PdfNumber.min = function (x, y, z) {\n        var r = Math.min(x, y);\n        return Math.min(z, r);\n    };\n    return PdfNumber;\n}());\nexport { PdfNumber };\n","import { PdfNumber } from './pdf-number';\nimport { Operators } from './../input-output/pdf-operators';\n/**\n * `PdfArray` class is used to perform array related primitive operations.\n * @private\n */\nvar PdfArray = /** @class */ (function () {\n    function PdfArray(array) {\n        //Fields\n        /**\n         * `startMark` - '['\n         * @private\n         */\n        this.startMark = '[';\n        /**\n         * `endMark` - ']'.\n         * @private\n         */\n        this.endMark = ']';\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position9 = -1;\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.clonedObject9 = null;\n        /**\n         * Represents the Font dictionary.\n         * @hidden\n         * @private\n         */\n        this.isFont = false;\n        if (typeof array === 'undefined') {\n            this.internalElements = [];\n        }\n        else {\n            if (typeof array !== 'undefined' && !(array instanceof PdfArray)) {\n                var tempNumberArray = array;\n                for (var index = 0; index < tempNumberArray.length; index++) {\n                    var pdfNumber = new PdfNumber(tempNumberArray[index]);\n                    this.add(pdfNumber);\n                }\n                // } else if (typeof array !== 'undefined' && (array instanceof PdfArray)) {\n            }\n            else {\n                var tempArray = array;\n                // if (tempArray.Elements.length > 0) {\n                this.internalElements = [];\n                for (var index = 0; index < tempArray.elements.length; index++) {\n                    this.internalElements.push(tempArray.elements[index]);\n                }\n                // }\n            }\n        }\n    }\n    //property\n    /**\n     * Gets the `IPdfSavable` at the specified index.\n     * @private\n     */\n    PdfArray.prototype.items = function (index) {\n        // if (index < 0 || index >= this.Count) {\n        //     throw new Error('ArgumentOutOfRangeException : index, The index can\"t be less then zero or greater then Count.');\n        // }\n        return this.internalElements[index];\n    };\n    Object.defineProperty(PdfArray.prototype, \"count\", {\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.internalElements.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status9;\n        },\n        set: function (value) {\n            this.status9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving9;\n        },\n        set: function (value) {\n            this.isSaving9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.clonedObject9;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position9;\n        },\n        set: function (value) {\n            this.position9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index9;\n        },\n        set: function (value) {\n            this.index9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"CrossTable\", {\n        /**\n         * Returns `PdfCrossTable` associated with the object.\n         * @private\n         */\n        get: function () {\n            return this.pdfCrossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"elements\", {\n        /**\n         * Gets the `elements` of the Pdf Array.\n         * @private\n         */\n        get: function () {\n            return this.internalElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Adds` the specified element to the PDF array.\n     * @private\n     */\n    PdfArray.prototype.add = function (element) {\n        // if (element === null) {\n        //     throw new Error('ArgumentNullException : obj');\n        // }\n        if (typeof this.internalElements === 'undefined') {\n            this.internalElements = [];\n        }\n        this.internalElements.push(element);\n        this.markedChange();\n    };\n    /**\n     * `Marks` the object changed.\n     * @private\n     */\n    PdfArray.prototype.markedChange = function () {\n        this.bChanged = true;\n    };\n    /**\n     * `Determines` whether the specified element is within the array.\n     * @private\n     */\n    PdfArray.prototype.contains = function (element) {\n        var returnValue = false;\n        for (var index = 0; index < this.internalElements.length; index++) {\n            var tempElement = this.internalElements[index];\n            var inputElement = element;\n            if (tempElement != null && typeof tempElement !== 'undefined' && inputElement != null && typeof inputElement !== 'undefined') {\n                if (tempElement.value === inputElement.value) {\n                    return true;\n                }\n            }\n            // if (this.internalElements[index] === element) {\n            //     returnValue = true;\n            // }\n        }\n        return returnValue;\n    };\n    /**\n     * Returns the `primitive object` of input index.\n     * @private\n     */\n    PdfArray.prototype.getItems = function (index) {\n        // if (index < 0 || index >= this.Count) {\n        //     throw new Error('ArgumentOutOfRangeException : index , The index can\"t be less then zero or greater then Count.');\n        // }\n        return this.internalElements[index];\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfArray.prototype.save = function (writer) {\n        // if (writer === null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        writer.write(this.startMark);\n        for (var i = 0, len = this.count; i < len; i++) {\n            this.getItems(i).save(writer);\n            if (i + 1 !== len) {\n                writer.write(Operators.whiteSpace);\n            }\n        }\n        writer.write(this.endMark);\n    };\n    /**\n     * Creates a `copy of PdfArray`.\n     * @private\n     */\n    PdfArray.prototype.clone = function (crossTable) {\n        // if (this.clonedObject9 !== null && this.clonedObject9.CrossTable === crossTable) {\n        //     return this.clonedObject9;\n        // } else {\n        this.clonedObject9 = null;\n        // Else clone the object.\n        var newArray = new PdfArray();\n        for (var index = 0; index < this.internalElements.length; index++) {\n            var obj = this.internalElements[index];\n            newArray.add(obj.clone(crossTable));\n        }\n        newArray.pdfCrossTable = crossTable;\n        this.clonedObject9 = newArray;\n        return newArray;\n    };\n    /**\n     * Creates filled PDF array `from the rectangle`.\n     * @private\n     */\n    PdfArray.fromRectangle = function (bounds) {\n        var values = [bounds.x, bounds.y, bounds.width, bounds.height];\n        var array = new PdfArray(values);\n        return array;\n    };\n    // /**\n    //  * Creates the rectangle from filled PDF array.\n    //  * @private\n    //  */\n    // public ToRectangle() : RectangleF {\n    //     if (this.Count < 4) {\n    //         throw Error('InvalidOperationException-Can not convert to rectangle.');\n    //     }\n    //     let x1 : number;\n    //     let x2 : number;\n    //     let y1 : number;\n    //     let y2 : number;\n    //     let num : PdfNumber = this.getItems(0) as PdfNumber;\n    //     x1 = num.IntValue;\n    //     num = this.getItems(1) as PdfNumber;\n    //     y1 = num.IntValue;\n    //     num = this.getItems(2) as PdfNumber;\n    //     x2 = num.IntValue;\n    //     num = this.getItems(3) as PdfNumber;\n    //     y2 = num.IntValue;\n    //     let x : number = Math.min(x1, x2);\n    //     let y : number = Math.min(y1, y2);\n    //     let width : number = Math.abs(x1 - x2);\n    //     let height : number = Math.abs(y1 - y2);\n    //     let rect : RectangleF = new RectangleF(new PointF(x, y), new SizeF(width, height));\n    //     return rect;\n    // }\n    /**\n     * `Inserts` the element into the array.\n     * @private\n     */\n    PdfArray.prototype.insert = function (index, element) {\n        if (index < this.internalElements.length && index > 0) {\n            var tempElements = [];\n            for (var i = 0; i < index; i++) {\n                tempElements.push(this.internalElements[i]);\n            }\n            tempElements.push(element);\n            for (var i = index; i < this.internalElements.length; i++) {\n                tempElements.push(this.internalElements[i]);\n            }\n            this.internalElements = tempElements;\n        }\n        else {\n            this.internalElements.push(element);\n        }\n        this.markChanged();\n    };\n    /**\n     * `Checks whether array contains the element`.\n     * @private\n     */\n    PdfArray.prototype.indexOf = function (element) {\n        return this.internalElements.indexOf(element);\n    };\n    /**\n     * `Removes` element from the array.\n     * @private\n     */\n    PdfArray.prototype.remove = function (element) {\n        // if (element === null) {\n        //     throw new Error('ArgumentNullException : element');\n        // }\n        var index = this.internalElements.indexOf(element);\n        // if (index >= 0 && index < this.internalElements.length) {\n        this.internalElements[index] = null;\n        // }\n        this.markChanged();\n    };\n    /**\n     * `Remove` the element from the array by its index.\n     * @private\n     */\n    PdfArray.prototype.removeAt = function (index) {\n        // this.internalElements.RemoveAt(index);\n        if (this.internalElements.length > index) {\n            var tempArray = [];\n            for (var i = 0; i < index; i++) {\n                tempArray.push(this.internalElements[i]);\n            }\n            for (var i = index + 1; i < this.internalElements.length; i++) {\n                tempArray.push(this.internalElements[i]);\n            }\n            this.internalElements = tempArray;\n        }\n        this.markChanged();\n    };\n    /**\n     * `Clear` the array.\n     * @private\n     */\n    PdfArray.prototype.clear = function () {\n        this.internalElements = [];\n        this.markChanged();\n    };\n    /**\n     * `Marks` the object changed.\n     * @private\n     */\n    PdfArray.prototype.markChanged = function () {\n        this.bChanged = true;\n    };\n    return PdfArray;\n}());\nexport { PdfArray };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDictionary } from './pdf-dictionary';\nimport { PdfNumber } from './pdf-number';\nimport { Operators } from './../input-output/pdf-operators';\nimport { PdfName } from './pdf-name';\nimport { PdfArray } from './pdf-array';\nimport { PdfReferenceHolder } from './pdf-reference';\nimport { CompressedStreamWriter } from '@syncfusion/ej2-compression';\n/**\n * `PdfStream` class is used to perform stream related primitive operations.\n * @private\n */\nvar PdfStream = /** @class */ (function (_super) {\n    __extends(PdfStream, _super);\n    function PdfStream(dictionary, data) {\n        var _this = _super.call(this, dictionary) || this;\n        //Constants\n        /**\n         * @hidden\n         * @private\n         */\n        _this.dicPrefix = 'stream';\n        /**\n         * @hidden\n         * @private\n         */\n        _this.dicSuffix = 'endstream';\n        /**\n         * Internal variable to hold `cloned object`.\n         * @private\n         */\n        _this.clonedObject2 = null;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.bCompress = true;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isImageStream = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isFontStream = false;\n        if (typeof dictionary !== 'undefined' || typeof data !== 'undefined') {\n            _this.dataStream2 = [];\n            _this.dataStream2 = data;\n            _this.bCompress2 = false;\n        }\n        else {\n            _this.dataStream2 = [];\n            _this.bCompress2 = true;\n            //Pending\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfStream.prototype, \"internalStream\", {\n        /**\n         * Gets the `internal` stream.\n         * @private\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"isImage\", {\n        /**\n         * Gets or sets 'is image' flag.\n         * @private\n         */\n        get: function () {\n            return this.isImageStream;\n        },\n        set: function (value) {\n            this.isImageStream = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"isFont\", {\n        /**\n         * Gets or sets 'is font' flag.\n         * @private\n         */\n        get: function () {\n            return this.isFontStream;\n        },\n        set: function (value) {\n            this.isFontStream = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"compress\", {\n        /**\n         * Gets or sets `compression` flag.\n         * @private\n         */\n        get: function () {\n            return this.bCompress;\n        },\n        set: function (value) {\n            this.bCompress = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"data\", {\n        /**\n         * Gets or sets the `data`.\n         * @private\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Clear` the internal stream.\n     * @private\n     */\n    PdfStream.prototype.clearStream = function () {\n        this.internalStream = [];\n        if (this.items.containsKey(this.dictionaryProperties.filter)) {\n            this.remove(this.dictionaryProperties.filter);\n        }\n        this.bCompress = true;\n        this.modify();\n    };\n    /**\n     * `Writes` the specified string.\n     * @private\n     */\n    PdfStream.prototype.write = function (text) {\n        if (text == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        if (text.length <= 0) {\n            throw new Error('ArgumentException: Can not write an empty string, text');\n        }\n        this.dataStream2.push(text);\n        this.modify();\n    };\n    /**\n     * `Writes` the specified bytes.\n     * @private\n     */\n    PdfStream.prototype.writeBytes = function (data) {\n        if (data === null) {\n            throw new Error('ArgumentNullException:data');\n        }\n        if (data.length <= 0) {\n            throw new Error('ArgumentException: Can not write an empty bytes, data');\n        }\n        var text = '';\n        for (var i = 0; i < data.length; i++) {\n            text += String.fromCharCode(data[i]);\n        }\n        this.dataStream2.push(text);\n        this.modify();\n    };\n    /**\n     * Raises event `Cmap BeginSave`.\n     * @private\n     */\n    PdfStream.prototype.onCmapBeginSave = function () {\n        this.cmapBeginSave.sender.cmapBeginSave();\n    };\n    /**\n     * Raises event `Font Program BeginSave`.\n     * @private\n     */\n    PdfStream.prototype.onFontProgramBeginSave = function () {\n        this.fontProgramBeginSave.sender.fontProgramBeginSave();\n    };\n    /**\n     * `Compresses the content` if it's required.\n     * @private\n     */\n    PdfStream.prototype.compressContent = function (data, writer) {\n        if (this.bCompress) {\n            var byteArray = [];\n            for (var i = 0; i < data.length; i++) {\n                byteArray.push(data.charCodeAt(i));\n            }\n            var dataArray = new Uint8Array(byteArray);\n            var sw = new CompressedStreamWriter();\n            // data = 'Hello World!!!';\n            sw.write(dataArray, 0, dataArray.length);\n            sw.close();\n            data = sw.getCompressedString;\n            this.addFilter(this.dictionaryProperties.flatedecode);\n        }\n        return data;\n    };\n    /**\n     * `Adds a filter` to the filter array.\n     * @private\n     */\n    PdfStream.prototype.addFilter = function (filterName) {\n        var obj = this.items.getValue(this.dictionaryProperties.filter);\n        if (obj instanceof PdfReferenceHolder) {\n            var rh = obj;\n            obj = rh.object;\n        }\n        var array = obj;\n        var name = obj;\n        if (name != null) {\n            array = new PdfArray();\n            array.insert(0, name);\n            this.items.setValue(this.dictionaryProperties.filter, array);\n        }\n        name = new PdfName(filterName);\n        if (array == null) {\n            this.items.setValue(this.dictionaryProperties.filter, name);\n        }\n        else {\n            array.insert(0, name);\n        }\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfStream.prototype.save = function (writer) {\n        if (typeof this.cmapBeginSave !== 'undefined') {\n            this.onCmapBeginSave();\n        }\n        if (typeof this.fontProgramBeginSave !== 'undefined') {\n            this.onFontProgramBeginSave();\n        }\n        var data = '';\n        for (var i = 0; i < this.data.length; i++) {\n            data = data + this.data[i];\n        }\n        if (data.length > 1 && !this.isImage && !this.isFont) {\n            data = 'q\\r\\n' + data + 'Q\\r\\n';\n        }\n        data = this.compressContent(data, writer);\n        var length = data.length;\n        this.items.setValue(this.dictionaryProperties.length, new PdfNumber(length));\n        _super.prototype.save.call(this, writer, false);\n        writer.write(this.dicPrefix);\n        writer.write(Operators.newLine);\n        if (data.length > 0) {\n            writer.write(data);\n        }\n        writer.write(Operators.newLine);\n        writer.write(this.dicSuffix);\n        writer.write(Operators.newLine);\n    };\n    /**\n     * Converts `bytes to string`.\n     * @private\n     */\n    PdfStream.bytesToString = function (byteArray) {\n        var output = '';\n        for (var i = 0; i < byteArray.length; i++) {\n            output = output + String.fromCharCode(byteArray[i]);\n        }\n        return output;\n    };\n    return PdfStream;\n}(PdfDictionary));\nexport { PdfStream };\nvar SaveCmapEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveCmapEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveCmapEventHandler;\n}());\nexport { SaveCmapEventHandler };\nvar SaveFontProgramEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveFontProgramEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveFontProgramEventHandler;\n}());\nexport { SaveFontProgramEventHandler };\n","/**\n * `PdfString` class is used to perform string related primitive operations.\n * @private\n */\nexport var InternalEnum;\n(function (InternalEnum) {\n    //Internals\n    /**\n     * public Enum for `ForceEncoding`.\n     * @private\n     */\n    var ForceEncoding;\n    (function (ForceEncoding) {\n        /**\n         * Specifies the type of `None`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"None\"] = 0] = \"None\";\n        /**\n         * Specifies the type of `Ascii`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"Ascii\"] = 1] = \"Ascii\";\n        /**\n         * Specifies the type of `Unicode`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"Unicode\"] = 2] = \"Unicode\";\n    })(ForceEncoding = InternalEnum.ForceEncoding || (InternalEnum.ForceEncoding = {}));\n    /**\n     * public Enum for `SourceType`.\n     * @private\n     */\n    var SourceType;\n    (function (SourceType) {\n        /**\n         * Specifies the type of `StringValue`.\n         * @private\n         */\n        SourceType[SourceType[\"StringValue\"] = 0] = \"StringValue\";\n        /**\n         * Specifies the type of `ByteBuffer`.\n         * @private\n         */\n        SourceType[SourceType[\"ByteBuffer\"] = 1] = \"ByteBuffer\";\n    })(SourceType || (SourceType = {}));\n})(InternalEnum || (InternalEnum = {}));\nvar PdfString = /** @class */ (function () {\n    function PdfString(value) {\n        /**\n         * Value indicating whether the string was converted to hex.\n         * @default false\n         * @private\n         */\n        this.bHex = false;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position1 = -1;\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.clonedObject1 = null;\n        /**\n         * `Shows` if the data of the stream was decrypted.\n         * @default false\n         * @private\n         */\n        this.bDecrypted = false;\n        /**\n         * Shows if the data of the stream `was decrypted`.\n         * @default false\n         * @private\n         */\n        this.isParentDecrypted = false;\n        /**\n         * Gets a value indicating whether the object is `packed or not`.\n         * @default false\n         * @private\n         */\n        this.isPacked = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isFormField = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isColorSpace = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isHexString = true;\n        if (typeof value === 'undefined') {\n            this.bHex = false;\n        }\n        else {\n            if (!(value.length > 0 && value[0] === '0xfeff')) {\n                this.stringValue = value;\n                this.data = [];\n                for (var i = 0; i < value.length; ++i) {\n                    this.data.push(value.charCodeAt(i));\n                }\n            }\n        }\n    }\n    Object.defineProperty(PdfString.prototype, \"hex\", {\n        //Property\n        /**\n         * Gets a value indicating whether string is in `hex`.\n         * @private\n         */\n        get: function () {\n            return this.bHex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"value\", {\n        /**\n         * Gets or sets string `value` of the object.\n         * @private\n         */\n        get: function () {\n            return this.stringValue;\n        },\n        set: function (value) {\n            this.stringValue = value;\n            this.data = null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status1;\n        },\n        set: function (value) {\n            this.status1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving1;\n        },\n        set: function (value) {\n            this.isSaving1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index1;\n        },\n        set: function (value) {\n            this.index1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.clonedObject1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position1;\n        },\n        set: function (value) {\n            this.position1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"CrossTable\", {\n        /**\n         * Returns `PdfCrossTable` associated with the object.\n         * @private\n         */\n        get: function () {\n            return this.crossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"converted\", {\n        /**\n         * Gets a value indicating whether to check if the value has unicode characters.\n         * @private\n         */\n        get: function () {\n            return this.bConverted;\n        },\n        /**\n         * sets a value indicating whether to check if the value has unicode characters.\n         * @private\n         */\n        set: function (value) {\n            this.bConverted = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"encode\", {\n        /**\n         * Gets value indicating whether we should convert data to Unicode.\n         */\n        get: function () {\n            return this.bForceEncoding;\n        },\n        set: function (value) {\n            this.bForceEncoding = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * Converts `bytes to string using hex format` for representing string.\n     * @private\n     */\n    PdfString.bytesToHex = function (bytes) {\n        if (bytes == null) {\n            return '';\n        }\n        var builder = '';\n        return builder;\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfString.prototype.save = function (writer) {\n        if (writer === null) {\n            throw new Error('ArgumentNullException : writer');\n        }\n        if (this.encode !== undefined && this.encode === InternalEnum.ForceEncoding.Ascii) {\n            writer.write(this.pdfEncode());\n        }\n        else {\n            writer.write(PdfString.stringMark[0] + this.value + PdfString.stringMark[1]);\n        }\n    };\n    PdfString.prototype.pdfEncode = function () {\n        var result = '';\n        if (this.encode !== undefined && this.encode === InternalEnum.ForceEncoding.Ascii) {\n            var data = this.escapeSymbols(this.value);\n            for (var i = 0; i < data.length; i++) {\n                result += String.fromCharCode(data[i]);\n            }\n            result = PdfString.stringMark[0] + result + PdfString.stringMark[1];\n        }\n        else {\n            result = this.value;\n        }\n        return result;\n    };\n    PdfString.prototype.escapeSymbols = function (value) {\n        var data = [];\n        for (var i = 0; i < value.length; i++) {\n            var currentData = value.charCodeAt(i);\n            switch (currentData) {\n                case 40:\n                case 41:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                case 13:\n                    data.push(92);\n                    data.push(114);\n                    break;\n                case 92:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                default:\n                    data.push(currentData);\n                    break;\n            }\n        }\n        return data;\n    };\n    /**\n     * Creates a `copy of PdfString`.\n     * @private\n     */\n    PdfString.prototype.clone = function (crossTable) {\n        if (this.clonedObject1 !== null && this.clonedObject1.CrossTable === crossTable) {\n            return this.clonedObject1;\n        }\n        else {\n            this.clonedObject1 = null;\n        }\n        var newString = new PdfString(this.stringValue);\n        newString.bHex = this.bHex;\n        newString.crossTable = crossTable;\n        newString.isColorSpace = this.isColorSpace;\n        this.clonedObject1 = newString;\n        return newString;\n    };\n    /**\n     * Converts string to array of unicode symbols.\n     */\n    PdfString.toUnicodeArray = function (value, bAddPrefix) {\n        if (value == null) {\n            throw new Error('Argument Null Exception : value');\n        }\n        var startIndex = 0;\n        var output = [];\n        for (var i = 0; i < value.length; i++) {\n            var code = value.charCodeAt(i);\n            output.push(code / 256 >>> 0);\n            output.push(code & 0xff);\n        }\n        return output;\n    };\n    /**\n     * Converts byte data to string.\n     */\n    PdfString.byteToString = function (data) {\n        if (data == null) {\n            throw new Error('Argument Null Exception : stream');\n        }\n        var result = '';\n        for (var i = 0; i < data.length; ++i) {\n            result += String.fromCharCode(data[i]);\n        }\n        return result;\n    };\n    //constants = ;\n    /**\n     * `General markers` for string.\n     * @private\n     */\n    PdfString.stringMark = '()';\n    /**\n     * `Hex markers` for string.\n     * @private\n     */\n    PdfString.hexStringMark = '<>';\n    /**\n     * Format of password data.\n     * @private\n     */\n    PdfString.hexFormatPattern = '{0:X2}';\n    return PdfString;\n}());\nexport { PdfString };\n","import { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfStream } from './../primitives/pdf-stream';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfString } from './../primitives/pdf-string';\n/**\n * `PdfReference` class is used to perform reference related primitive operations.\n * @private\n */\nvar PdfReference = /** @class */ (function () {\n    function PdfReference(objNumber, genNumber) {\n        /**\n         * Holds the `index` number of the object.\n         * @default -1\n         * @private\n         */\n        this.index3 = -1;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position3 = -1;\n        /**\n         * Holds the `object number`.\n         * @default 0\n         * @private\n         */\n        this.objNumber = 0;\n        /**\n         * Holds the `generation number` of the object.\n         * @default 0\n         * @private\n         */\n        this.genNumber = 0;\n        if (typeof objNumber === 'number' && typeof genNumber === 'number') {\n            this.objNumber = objNumber;\n            this.genNumber = genNumber;\n            // } else if (typeof objNum === 'string' && typeof genNum === 'string') {\n        }\n        else {\n            this.objNumber = Number(objNumber);\n            this.genNumber = Number(genNumber);\n        }\n    }\n    Object.defineProperty(PdfReference.prototype, \"status\", {\n        //Property\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status3;\n        },\n        set: function (value) {\n            this.status3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving3;\n        },\n        set: function (value) {\n            this.isSaving3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index3;\n        },\n        set: function (value) {\n            this.index3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position3;\n        },\n        set: function (value) {\n            this.position3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var returnObject3 = null;\n            return returnObject3;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //IPdfPrimitives methods\n    /**\n     * `Saves` the object.\n     * @private\n     */\n    PdfReference.prototype.save = function (writer) {\n        writer.write(this.toString());\n    };\n    /**\n     * Returns a `string` representing the object.\n     * @private\n     */\n    PdfReference.prototype.toString = function () {\n        return this.objNumber.toString() + ' ' + this.genNumber.toString() + ' R';\n    };\n    /**\n     * Creates a `deep copy` of the IPdfPrimitive object.\n     * @private\n     */\n    PdfReference.prototype.clone = function (crossTable) {\n        return null;\n    };\n    return PdfReference;\n}());\nexport { PdfReference };\n/**\n * `PdfReferenceHolder` class is used to perform reference holder related primitive operations.\n * @private\n */\nvar PdfReferenceHolder = /** @class */ (function () {\n    function PdfReferenceHolder(obj1, obj2) {\n        /**\n         * Holds the `index` number of the object.\n         * @default -1\n         * @private\n         */\n        this.index4 = -1;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position4 = -1;\n        /**\n         * The `index` of the object within the object collection.\n         * @default -1\n         * @private\n         */\n        this.objectIndex = -1;\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // if (typeof obj2 === 'undefined') {\n        this.initialize(obj1);\n        // }\n        // else {\n        //     if (obj2 === null) {\n        //         throw new Error('ArgumentNullException : crossTable');\n        //     }\n        //     if (obj1 === null) {\n        //         throw new Error('ArgumentNullException : reference');\n        //     }\n        //     this.crossTable = obj2;\n        //     let tempObj1 : PdfReference = <PdfReference>obj1;\n        //     this.reference = tempObj1;\n        // }\n    }\n    Object.defineProperty(PdfReferenceHolder.prototype, \"status\", {\n        //Properties\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status4;\n        },\n        set: function (value) {\n            this.status4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving4;\n        },\n        set: function (value) {\n            this.isSaving4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index4;\n        },\n        set: function (value) {\n            this.index4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position4;\n        },\n        set: function (value) {\n            this.position4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"object\", {\n        /**\n         * Gets the `object` the reference is of.\n         * @private\n         */\n        get: function () {\n            // if ((this.reference != null) || (this.object == null)) {\n            //     this.object = this.GetterObject();\n            // }\n            return this.primitiveObject;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"reference\", {\n        /**\n         * Gets the `reference`.\n         * @private\n         */\n        get: function () {\n            return this.pdfReference;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"index\", {\n        /**\n         * Gets the `index` of the object.\n         * @private\n         */\n        get: function () {\n            // let items : PdfMainObjectCollection = this.crossTable.PdfObjects;\n            // this.objectIndex = items.GetObjectIndex(this.reference);\n            // if (this.objectIndex < 0) {\n            //     let obj : IPdfPrimitive = this.crossTable.GetObject(this.reference);\n            //     this.objectIndex = items.Count - 1;\n            // }\n            return this.objectIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"element\", {\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.primitiveObject;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfReferenceHolder.prototype.initialize = function (obj1) {\n        if (obj1 instanceof PdfArray\n            || obj1 instanceof PdfDictionary\n            || obj1 instanceof PdfName\n            || obj1 instanceof PdfNumber\n            || obj1 instanceof PdfStream\n            || obj1 instanceof PdfReference\n            || obj1 instanceof PdfString) {\n            this.primitiveObject = obj1;\n        }\n        else {\n            var tempObj = obj1;\n            this.initialize(tempObj.element);\n        }\n    };\n    /**\n     * `Writes` a reference into a PDF document.\n     * @private\n     */\n    PdfReferenceHolder.prototype.save = function (writer) {\n        // if (writer == null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        var position = writer.position;\n        var cTable = writer.document.crossTable;\n        // if (cTable.Document instanceof PdfDocument) {\n        this.object.isSaving = true;\n        // }\n        var reference = null;\n        // if (writer.Document.FileStructure.IncrementalUpdate === true && writer.Document.isStreamCopied === true) {\n        //     if (this.reference === null) {\n        //         reference = cTable.GetReference(this.Object);\n        //     } else {\n        //         reference = this.reference;\n        //     }\n        // } else {\n        //     reference = cTable.GetReference(this.Object);\n        // }\n        // if (!(writer.Document.FileStructure.IncrementalUpdate === true && writer.Document.isStreamCopied === true)) {\n        reference = cTable.getReference(this.object);\n        // }\n        // if (writer.Position !== position) {\n        //     writer.Position = position;\n        // }\n        reference.save(writer);\n    };\n    /**\n     * Creates a `copy of PdfReferenceHolder`.\n     * @private\n     */\n    PdfReferenceHolder.prototype.clone = function (crossTable) {\n        var refHolder = null;\n        var temp = null;\n        var refNum = '';\n        var reference = null;\n        // Restricts addition of same object multiple time.\n        /* if (this.Reference != null && this.crossTable != null && this.crossTable.PageCorrespondance.containsKey(this.Reference)) {\n            refHolder = new PdfReferenceHolder(this.crossTable.PageCorrespondance.getValue(this.Reference) as PdfReference, crossTable);\n            return refHolder;\n        }\n        if (Object instanceof PdfNumber) {\n            return new PdfNumber((Object as PdfNumber).IntValue);\n        }\n        */\n        // if (Object instanceof PdfDictionary) {\n        //     // Meaning the referenced page is not available for import.\n        //     let type : PdfName = new PdfName(this.dictionaryProperties.type);\n        //     let dict : PdfDictionary = Object as PdfDictionary;\n        //     if (dict.ContainsKey(type)) {\n        //         let pageName : PdfName = dict.Items.getValue(type.Value) as PdfName;\n        //         if (pageName !== null) {\n        //             if (pageName.Value === 'Page') {\n        //                 return new PdfNull();\n        //             }\n        //         }\n        //     }\n        // }\n        /* if (Object instanceof PdfName) {\n            return new PdfName ((Object as PdfName ).Value);\n        }\n        */\n        // Resolves circular references.\n        // if (crossTable.PrevReference !== null && (crossTable.PrevReference.indexOf(this.Reference) !== -1)) {\n        //     let obj : IPdfPrimitive = this.crossTable.GetObject(this.Reference).ClonedObject;\n        //     if (obj !== null) {\n        //         reference = crossTable.GetReference(obj);\n        //         return new PdfReferenceHolder(reference, crossTable);\n        //     } else {\n        //         return new PdfNull();\n        //     }\n        // }\n        /*if (this.Reference !== null) {\n            crossTable.PrevReference.push(this.Reference);\n        }\n        reference = crossTable.GetReference(temp);\n        refHolder = new PdfReferenceHolder(reference, crossTable);\n        return refHolder;\n        */\n        return null;\n    };\n    return PdfReferenceHolder;\n}());\nexport { PdfReferenceHolder };\n","import { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfName } from './../primitives/pdf-name';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfAction` class represents base class for all action types.\n * @private\n */\nvar PdfAction = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initialize instance for `Action` class.\n     * @private\n     */\n    function PdfAction() {\n        /**\n         * Specifies the Next `action` to perform.\n         * @private\n         */\n        this.action = null;\n        /**\n         * Specifies the Internal variable to store `dictionary properties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // super(); -> Object()\n        this.initialize();\n    }\n    Object.defineProperty(PdfAction.prototype, \"next\", {\n        // Properties\n        /**\n         * Gets and Sets the `Next` action to perform.\n         * @private\n         */\n        get: function () {\n            return this.action;\n        },\n        set: function (value) {\n            // if (this.action !== value) {\n            this.action = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.next, new PdfReferenceHolder(this.action));\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAction.prototype, \"dictionary\", {\n        /**\n         * Gets and Sets the instance of PdfDictionary class for `Dictionary`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfDictionary === 'undefined') {\n                this.pdfDictionary = new PdfDictionary();\n            }\n            return this.pdfDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the action type.\n     * @private\n     */\n    PdfAction.prototype.initialize = function () {\n        this.dictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.action));\n    };\n    Object.defineProperty(PdfAction.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the `Element` as IPdfPrimitive class.\n         * @private\n         */\n        get: function () {\n            return this.dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAction;\n}());\nexport { PdfAction };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfAction } from './action';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * `PdfUriAction` class for initialize the uri related internals.\n * @private\n */\nvar PdfUriAction = /** @class */ (function (_super) {\n    __extends(PdfUriAction, _super);\n    function PdfUriAction(uri) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Specifies the `uri` string.\n         * @default ''.\n         * @private\n         */\n        _this.uniformResourceIdentifier = '';\n        return _this;\n    }\n    Object.defineProperty(PdfUriAction.prototype, \"uri\", {\n        // Properties\n        /**\n         * Gets and Sets the value of `Uri`.\n         * @private\n         */\n        get: function () {\n            return this.uniformResourceIdentifier;\n        },\n        set: function (value) {\n            this.uniformResourceIdentifier = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.uri, new PdfString(this.uniformResourceIdentifier));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the internals.\n     * @private\n     */\n    PdfUriAction.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.s, new PdfName(this.dictionaryProperties.uri));\n    };\n    return PdfUriAction;\n}(PdfAction));\nexport { PdfUriAction };\n","/**\n * public Enum for `PdfHorizontalAlignment`.\n * @private\n */\nexport var PdfHorizontalAlignment;\n(function (PdfHorizontalAlignment) {\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Left\"] = 0] = \"Left\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Right\"] = 2] = \"Right\";\n})(PdfHorizontalAlignment || (PdfHorizontalAlignment = {}));\n/**\n * public Enum for `PdfVerticalAlignment`.\n * @private\n */\nexport var PdfVerticalAlignment;\n(function (PdfVerticalAlignment) {\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Top\"] = 0] = \"Top\";\n    /**\n     * Specifies the type of `Middle`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Middle\"] = 1] = \"Middle\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Bottom\"] = 2] = \"Bottom\";\n})(PdfVerticalAlignment || (PdfVerticalAlignment = {}));\n/**\n * public Enum for `public`.\n * @private\n */\nexport var PdfTextAlignment;\n(function (PdfTextAlignment) {\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Left\"] = 0] = \"Left\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Right\"] = 2] = \"Right\";\n    /**\n     * Specifies the type of `Justify`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Justify\"] = 3] = \"Justify\";\n})(PdfTextAlignment || (PdfTextAlignment = {}));\n/**\n * public Enum for `TextRenderingMode`.\n * @private\n */\nexport var TextRenderingMode;\n(function (TextRenderingMode) {\n    /**\n     * Specifies the type of `Fill`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Fill\"] = 0] = \"Fill\";\n    /**\n     * Specifies the type of `Stroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Stroke\"] = 1] = \"Stroke\";\n    /**\n     * Specifies the type of `FillStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"FillStroke\"] = 2] = \"FillStroke\";\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"None\"] = 3] = \"None\";\n    /**\n     * Specifies the type of `ClipFlag`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFlag\"] = 4] = \"ClipFlag\";\n    /**\n     * Specifies the type of `ClipFill`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFill\"] = 4] = \"ClipFill\";\n    /**\n     * Specifies the type of `ClipStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipStroke\"] = 5] = \"ClipStroke\";\n    /**\n     * Specifies the type of `ClipFillStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFillStroke\"] = 6] = \"ClipFillStroke\";\n    /**\n     * Specifies the type of `Clip`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Clip\"] = 7] = \"Clip\";\n})(TextRenderingMode || (TextRenderingMode = {}));\n/**\n * public Enum for `PdfLineJoin`.\n * @private\n */\nexport var PdfLineJoin;\n(function (PdfLineJoin) {\n    /**\n     * Specifies the type of `Miter`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Miter\"] = 0] = \"Miter\";\n    /**\n     * Specifies the type of `Round`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Round\"] = 1] = \"Round\";\n    /**\n     * Specifies the type of `Bevel`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Bevel\"] = 2] = \"Bevel\";\n})(PdfLineJoin || (PdfLineJoin = {}));\n/**\n * public Enum for `PdfLineCap`.\n * @private\n */\nexport var PdfLineCap;\n(function (PdfLineCap) {\n    /**\n     * Specifies the type of `Flat`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Flat\"] = 0] = \"Flat\";\n    /**\n     * Specifies the type of `Round`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Round\"] = 1] = \"Round\";\n    /**\n     * Specifies the type of `Square`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Square\"] = 2] = \"Square\";\n})(PdfLineCap || (PdfLineCap = {}));\n/**\n * public Enum for `PdfDashStyle`.\n * @private\n */\nexport var PdfDashStyle;\n(function (PdfDashStyle) {\n    /**\n     * Specifies the type of `Solid`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Solid\"] = 0] = \"Solid\";\n    /**\n     * Specifies the type of `Dash`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Dash\"] = 1] = \"Dash\";\n    /**\n     * Specifies the type of `Dot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Dot\"] = 2] = \"Dot\";\n    /**\n     * Specifies the type of `DashDot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"DashDot\"] = 3] = \"DashDot\";\n    /**\n     * Specifies the type of `DashDotDot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"DashDotDot\"] = 4] = \"DashDotDot\";\n    /**\n     * Specifies the type of `Custom`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Custom\"] = 5] = \"Custom\";\n})(PdfDashStyle || (PdfDashStyle = {}));\n/**\n * public Enum for `PdfFillMode`.\n * @private\n */\nexport var PdfFillMode;\n(function (PdfFillMode) {\n    /**\n     * Specifies the type of `Winding`.\n     * @private\n     */\n    PdfFillMode[PdfFillMode[\"Winding\"] = 0] = \"Winding\";\n    /**\n     * Specifies the type of `Alternate`.\n     * @private\n     */\n    PdfFillMode[PdfFillMode[\"Alternate\"] = 1] = \"Alternate\";\n})(PdfFillMode || (PdfFillMode = {}));\n/**\n * public Enum for `PdfColorSpace`.\n * @private\n */\nexport var PdfColorSpace;\n(function (PdfColorSpace) {\n    /**\n     * Specifies the type of `Rgb`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Rgb\"] = 0] = \"Rgb\";\n    /**\n     * Specifies the type of `Cmyk`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Cmyk\"] = 1] = \"Cmyk\";\n    /**\n     * Specifies the type of `GrayScale`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"GrayScale\"] = 2] = \"GrayScale\";\n    /**\n     * Specifies the type of `Indexed`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Indexed\"] = 3] = \"Indexed\";\n})(PdfColorSpace || (PdfColorSpace = {}));\n/**\n * public Enum for `PdfBlendMode`.\n * @private\n */\nexport var PdfBlendMode;\n(function (PdfBlendMode) {\n    /**\n     * Specifies the type of `Normal`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Normal\"] = 0] = \"Normal\";\n    /**\n     * Specifies the type of `Multiply`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Multiply\"] = 1] = \"Multiply\";\n    /**\n     * Specifies the type of `Screen`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Screen\"] = 2] = \"Screen\";\n    /**\n     * Specifies the type of `Overlay`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Overlay\"] = 3] = \"Overlay\";\n    /**\n     * Specifies the type of `Darken`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Darken\"] = 4] = \"Darken\";\n    /**\n     * Specifies the type of `Lighten`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Lighten\"] = 5] = \"Lighten\";\n    /**\n     * Specifies the type of `ColorDodge`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"ColorDodge\"] = 6] = \"ColorDodge\";\n    /**\n     * Specifies the type of `ColorBurn`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"ColorBurn\"] = 7] = \"ColorBurn\";\n    /**\n     * Specifies the type of `HardLight`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"HardLight\"] = 8] = \"HardLight\";\n    /**\n     * Specifies the type of `SoftLight`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"SoftLight\"] = 9] = \"SoftLight\";\n    /**\n     * Specifies the type of `Difference`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Difference\"] = 10] = \"Difference\";\n    /**\n     * Specifies the type of `Exclusion`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Exclusion\"] = 11] = \"Exclusion\";\n    /**\n     * Specifies the type of `Hue`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Hue\"] = 12] = \"Hue\";\n    /**\n     * Specifies the type of `Saturation`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Saturation\"] = 13] = \"Saturation\";\n    /**\n     * Specifies the type of `Color`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Color\"] = 14] = \"Color\";\n    /**\n     * Specifies the type of `Luminosity`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Luminosity\"] = 15] = \"Luminosity\";\n})(PdfBlendMode || (PdfBlendMode = {}));\n/**\n * public Enum for `PdfGraphicsUnit`.\n * @private\n */\nexport var PdfGraphicsUnit;\n(function (PdfGraphicsUnit) {\n    /**\n     * Specifies the type of `Centimeter`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Centimeter\"] = 0] = \"Centimeter\";\n    /**\n     * Specifies the type of `Pica`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Pica\"] = 1] = \"Pica\";\n    /**\n     * Specifies the type of `Pixel`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Pixel\"] = 2] = \"Pixel\";\n    /**\n     * Specifies the type of `Point`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Point\"] = 3] = \"Point\";\n    /**\n     * Specifies the type of `Inch`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Inch\"] = 4] = \"Inch\";\n    /**\n     * Specifies the type of `Document`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Document\"] = 5] = \"Document\";\n    /**\n     * Specifies the type of `Millimeter`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Millimeter\"] = 6] = \"Millimeter\";\n})(PdfGraphicsUnit || (PdfGraphicsUnit = {}));\n/**\n * public Enum for `PdfGridImagePosition`.\n * @private\n */\nexport var PdfGridImagePosition;\n(function (PdfGridImagePosition) {\n    /**\n     * Specifies the type of `Fit`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Fit\"] = 0] = \"Fit\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Stretch`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Stretch\"] = 2] = \"Stretch\";\n    /**\n     * Specifies the type of `Tile`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Tile\"] = 3] = \"Tile\";\n})(PdfGridImagePosition || (PdfGridImagePosition = {}));\n/**\n * public Enum for `the text rendering direction`.\n * @private\n */\nexport var PdfTextDirection;\n(function (PdfTextDirection) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfTextDirection[PdfTextDirection[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `LeftToRight`.\n     * @private\n     */\n    PdfTextDirection[PdfTextDirection[\"LeftToRight\"] = 1] = \"LeftToRight\";\n    /**\n     * Specifies the type of `RightToLeft`.\n     * @private\n     */\n    PdfTextDirection[PdfTextDirection[\"RightToLeft\"] = 2] = \"RightToLeft\";\n})(PdfTextDirection || (PdfTextDirection = {}));\n","import { PdfColorSpace } from './enum';\nimport { Operators } from './../input-output/pdf-operators';\nimport { Dictionary } from './../collections/dictionary';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfArray } from './../primitives/pdf-array';\n/**\n * Implements structures and routines working with `color`.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * //\n * // set color\n * let brushColor : PdfColor = new PdfColor(0, 0, 0);\n * //\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(brushColor);\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n * @default black color\n */\nvar PdfColor = /** @class */ (function () {\n    function PdfColor(color1, color2, color3, color4) {\n        if (typeof color1 === 'undefined') {\n            if (typeof color2 !== 'undefined' && typeof color3 !== 'undefined' && typeof color4 !== 'undefined') {\n                this.assignRGB(color2, color3, color4);\n            }\n            else {\n                this.filled = false;\n            }\n        }\n        else if (color1 instanceof PdfColor) {\n            this.redColor = color1.r;\n            this.greenColor = color1.g;\n            this.blueColor = color1.b;\n            this.grayColor = color1.gray;\n            this.alpha = color1.alpha;\n            this.filled = (this.alpha !== 0);\n            /* tslint:disable-next-line:max-line-length */\n        }\n        else if (typeof color1 === 'number' && typeof color2 === 'undefined' && typeof color3 === 'undefined' && typeof color4 === 'undefined') {\n            if (color1 < 0) {\n                color1 = 0;\n            }\n            if (color1 > 1) {\n                color1 = 1;\n            }\n            this.redColor = color1 * PdfColor.maxColourChannelValue;\n            this.greenColor = color1 * PdfColor.maxColourChannelValue;\n            this.blueColor = color1 * PdfColor.maxColourChannelValue;\n            this.cyanColor = color1;\n            this.magentaColor = color1;\n            this.yellowColor = color1;\n            this.blackColor = color1;\n            this.grayColor = color1;\n            this.alpha = PdfColor.maxColourChannelValue;\n            this.filled = true;\n        }\n        else if (typeof color4 === 'undefined') {\n            this.assignRGB(color1, color2, color3);\n        }\n        else {\n            this.assignRGB(color2, color3, color4, color1);\n        }\n    }\n    /**\n     * `Assign` red, green, blue colors with alpha value..\n     * @private\n     */\n    PdfColor.prototype.assignRGB = function (r, g, b, a) {\n        if (typeof r === 'undefined' || typeof g === 'undefined' || typeof b === 'undefined') {\n            this.filled = false;\n        }\n        else {\n            this.cyanColor = 0;\n            this.magentaColor = 0;\n            this.yellowColor = 0;\n            this.blackColor = 0;\n            this.grayColor = 0;\n            this.redColor = r;\n            this.greenColor = g;\n            this.blueColor = b;\n            if (typeof a === 'undefined') {\n                this.alpha = PdfColor.maxColourChannelValue;\n            }\n            else {\n                this.alpha = a;\n            }\n            this.filled = true;\n            this.assignCMYK(r, g, b);\n        }\n    };\n    /**\n     * `Calculate and assign` cyan, megenta, yellow colors from rgb values..\n     * @private\n     */\n    PdfColor.prototype.assignCMYK = function (r, g, b) {\n        var red = r / PdfColor.maxColourChannelValue;\n        var green = g / PdfColor.maxColourChannelValue;\n        var blue = b / PdfColor.maxColourChannelValue;\n        var black = PdfNumber.min(1 - red, 1 - green, 1 - blue);\n        var cyan = (black === 1.0) ? 0 : (1 - red - black) / (1 - black);\n        var magenta = (black === 1.0) ? 0 : (1 - green - black) / (1 - black);\n        var yellow = (black === 1.0) ? 0 : (1 - blue - black) / (1 - black);\n        this.blackColor = black;\n        this.cyanColor = cyan;\n        this.magentaColor = magenta;\n        this.yellowColor = yellow;\n    };\n    Object.defineProperty(PdfColor.prototype, \"r\", {\n        //Properties\n        // public static get Empty():PdfColor\n        // {\n        //     return this.s_emptyColor\n        // }\n        /**\n         * Gets or sets `Red` channel value.\n         * @private\n         */\n        get: function () {\n            return this.redColor;\n        },\n        set: function (value) {\n            this.redColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"red\", {\n        /**\n         * Gets the `Red` color\n         * @private\n         */\n        get: function () {\n            return (this.r / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"b\", {\n        /**\n         * Gets or sets `Blue` channel value.\n         * @private\n         */\n        get: function () {\n            return this.blueColor;\n        },\n        set: function (value) {\n            this.blueColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"blue\", {\n        /**\n         * Gets the `blue` color.\n         * @private\n         */\n        get: function () {\n            return (this.b / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"c\", {\n        /**\n         * Gets or sets `Cyan` channel value.\n         * @private\n         */\n        get: function () {\n            return this.cyanColor;\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.cyanColor = 0;\n            }\n            else if (value > 1) {\n                this.cyanColor = 1;\n            }\n            else {\n                this.cyanColor = value;\n            }\n            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"k\", {\n        /**\n         * Gets or sets `Black` channel value.\n         * @private\n         */\n        get: function () {\n            return this.blackColor;\n        },\n        set: function (value) {\n            if ((value < 0)) {\n                this.blackColor = 0;\n            }\n            else if ((value > 1)) {\n                this.blackColor = 1;\n            }\n            else {\n                this.blackColor = value;\n            }\n            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"m\", {\n        /**\n         * Gets or sets `Magenta` channel value.\n         * @private\n         */\n        get: function () {\n            return this.magentaColor;\n        },\n        set: function (value) {\n            if ((value < 0)) {\n                this.magentaColor = 0;\n            }\n            else if ((value > 1)) {\n                this.magentaColor = 1;\n            }\n            else {\n                this.magentaColor = value;\n            }\n            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"y\", {\n        /**\n         * Gets or sets `Yellow` channel value.\n         * @private\n         */\n        get: function () {\n            return this.yellowColor;\n        },\n        set: function (value) {\n            if ((value < 0)) {\n                this.yellowColor = 0;\n            }\n            else if ((value > 1)) {\n                this.yellowColor = 1;\n            }\n            else {\n                this.yellowColor = value;\n            }\n            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"g\", {\n        /**\n         *  Gets or sets `Green` channel value.\n         * @private\n         */\n        get: function () {\n            return this.greenColor;\n        },\n        set: function (value) {\n            this.greenColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"green\", {\n        /**\n         * Gets the `Green` color.\n         * @private\n         */\n        get: function () {\n            return (this.g / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"gray\", {\n        /**\n         * Gets or sets `Gray` channel value.\n         * @private\n         */\n        get: function () {\n            return ((((this.redColor + this.greenColor) + this.blueColor)) / (PdfColor.maxColourChannelValue * 3));\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.grayColor = 0;\n            }\n            else if (value > 1) {\n                this.grayColor = 1;\n            }\n            else {\n                this.grayColor = value;\n            }\n            this.r = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.g = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.b = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"isEmpty\", {\n        /**\n         * Gets whether the PDFColor `is Empty` or not.\n         * @private\n         */\n        get: function () {\n            return !this.filled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"a\", {\n        /**\n         * Gets or sets `Alpha` channel value.\n         * @private\n         */\n        get: function () {\n            return this.alpha;\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.alpha = 0;\n            }\n            else {\n                // if (this.alpha !== value) {\n                this.alpha = value;\n                // }\n            }\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public methods\n    /**\n     * Converts `PDFColor to PDF string` representation.\n     * @private\n     */\n    PdfColor.prototype.toString = function (colorSpace, stroke) {\n        if (this.isEmpty) {\n            return '';\n        }\n        var str = '';\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                str = this.rgbToString(stroke);\n                break;\n            case PdfColorSpace.GrayScale:\n                str = this.grayScaleToString(stroke);\n                break;\n            case PdfColorSpace.Cmyk:\n                str = this.cmykToString(stroke);\n                break;\n        }\n        return str;\n    };\n    /**\n     * Sets `GrayScale` color.\n     * @private\n     */\n    PdfColor.prototype.grayScaleToString = function (ifStroking) {\n        var gray = this.gray;\n        var colour = '';\n        var obj = null;\n        /* tslint:disable-next-line:max-line-length */\n        obj = (ifStroking) ? PdfColor.grayStringsSroke.containsKey(gray) ? PdfColor.grayStringsSroke.getValue(gray) : null : PdfColor.grayStringsFill.containsKey(gray) ? PdfColor.grayStringsFill.getValue(gray) : null;\n        if (obj == null) {\n            if (ifStroking) {\n                colour = gray.toString() + ' G';\n                PdfColor.grayStringsSroke.setValue(gray, colour);\n            }\n        }\n        else {\n            colour = obj.toString();\n        }\n        return colour + Operators.newLine;\n    };\n    /**\n     * Sets `RGB` color.\n     * @private\n     */\n    PdfColor.prototype.rgbToString = function (ifStroking) {\n        var r = this.r;\n        var g = this.g;\n        var b = this.b;\n        var key = (r << 16) + (g << 8) + b;\n        if (ifStroking) {\n            key += 1 << 24;\n        }\n        var colour = '';\n        var obj = null;\n        if (PdfColor.rgbStrings.containsKey(key)) {\n            obj = PdfColor.rgbStrings.getValue(key);\n        }\n        if (obj == null) {\n            var red = r / PdfColor.maxColourChannelValue;\n            var green = g / PdfColor.maxColourChannelValue;\n            var blue = b / PdfColor.maxColourChannelValue;\n            if (ifStroking) {\n                colour = red.toString() + ' ' + green.toString() + ' ' + blue.toString() + ' RG';\n            }\n            else {\n                colour = red.toString() + ' ' + green.toString() + ' ' + blue.toString() + ' rg';\n            }\n            PdfColor.rgbStrings.setValue(key, colour);\n        }\n        else {\n            colour = obj.toString();\n        }\n        return colour + Operators.newLine;\n    };\n    /***\n     * Sets `CMYK` color.\n     * @private\n     */\n    PdfColor.prototype.cmykToString = function (ifStroking) {\n        var cyan = this.c;\n        var magenta = this.m;\n        var yellow = this.y;\n        var black = this.b;\n        var colour = '';\n        colour = cyan.toString() + ' ' + magenta.toString() + ' ' + yellow.toString() + ' ' + black.toString() + ' K';\n        return colour + Operators.newLine;\n    };\n    /**\n     * Converts `colour to a PDF array`.\n     * @private\n     */\n    PdfColor.prototype.toArray = function (colorSpace) {\n        var array = new PdfArray();\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                array.add(new PdfNumber(this.red));\n                array.add(new PdfNumber(this.green));\n                array.add(new PdfNumber(this.blue));\n                break;\n        }\n        return array;\n    };\n    //Fields\n    /**\n     * Holds `RGB colors` converted into strings.\n     * @private\n     */\n    PdfColor.rgbStrings = new Dictionary();\n    /**\n     * Holds Gray scale colors converted into strings for `stroking`.\n     * @private\n     */\n    PdfColor.grayStringsSroke = new Dictionary();\n    /**\n     * Holds Gray scale colors converted into strings for `filling`.\n     * @private\n     */\n    PdfColor.grayStringsFill = new Dictionary();\n    /**\n     * `Max value` of color channel.\n     * @private\n     */\n    PdfColor.maxColourChannelValue = 255.0;\n    return PdfColor;\n}());\nexport { PdfColor };\n","/**\n * Coordinates of Position for `PointF`.\n * @private\n */\nvar PointF = /** @class */ (function () {\n    function PointF(x, y) {\n        if (typeof x === 'undefined') {\n            this.x = 0;\n            this.y = 0;\n        }\n        else {\n            if (x !== null) {\n                this.x = x;\n            }\n            else {\n                this.x = 0;\n            }\n            if (y !== null) {\n                this.y = y;\n            }\n            else {\n                this.y = 0;\n            }\n        }\n    }\n    return PointF;\n}());\nexport { PointF };\n/**\n * Width and Height as `Size`.\n * @private\n */\nvar SizeF = /** @class */ (function () {\n    function SizeF(width, height) {\n        if (typeof height === 'undefined') {\n            this.height = 0;\n            this.width = 0;\n        }\n        else {\n            if (height !== null) {\n                this.height = height;\n            }\n            else {\n                this.height = 0;\n            }\n            if (width !== null) {\n                this.width = width;\n            }\n            else {\n                this.width = 0;\n            }\n        }\n    }\n    return SizeF;\n}());\nexport { SizeF };\n/**\n * `RectangleF` with Position and size.\n * @private\n */\nvar RectangleF = /** @class */ (function () {\n    function RectangleF(arg1, arg2, arg3, arg4) {\n        if (typeof arg1 === typeof arg1 && typeof arg1 === 'undefined') {\n            this.x = 0;\n            this.y = 0;\n            this.height = 0;\n            this.width = 0;\n        }\n        else {\n            if (arg1 instanceof PointF && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n                var pointf = arg1;\n                this.x = pointf.x;\n                this.y = pointf.y;\n                var sizef = arg2;\n                this.height = sizef.height;\n                this.width = sizef.width;\n            }\n            else {\n                var x = arg1;\n                var y = arg2;\n                var width = arg3;\n                var height = arg4;\n                this.x = x;\n                this.y = y;\n                this.height = height;\n                this.width = width;\n            }\n        }\n    }\n    return RectangleF;\n}());\nexport { RectangleF };\n/**\n * `Rectangle` with left, right, top and bottom.\n * @private\n */\nvar Rectangle = /** @class */ (function () {\n    /**\n     * Instance of `RectangleF` class with X, Y, Width and Height.\n     * @private\n     */\n    function Rectangle(left, top, right, bottom) {\n        this.left = left;\n        this.top = top;\n        this.right = right;\n        this.bottom = bottom;\n    }\n    Object.defineProperty(Rectangle.prototype, \"width\", {\n        /**\n         * Gets a value of width\n         */\n        get: function () {\n            return this.right - this.left;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"height\", {\n        /**\n         * Gets a value of height\n         */\n        get: function () {\n            return this.bottom - this.top;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"topLeft\", {\n        /**\n         * Gets a value of Top and Left\n         */\n        get: function () {\n            return new PointF(this.left, this.top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"size\", {\n        /**\n         * Gets a value of size\n         */\n        get: function () {\n            return new SizeF(this.width, this.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Rectangle.prototype.toString = function () {\n        return this.topLeft + 'x' + this.size;\n    };\n    return Rectangle;\n}());\nexport { Rectangle };\n","/**\n * `PdfBrush` class provides objects used to fill the interiors of graphical shapes such as rectangles,\n * ellipses, pies, polygons, and paths.\n * @private\n */\nvar PdfBrush = /** @class */ (function () {\n    /**\n     * Creates instanceof `PdfBrush` class.\n     * @hidden\n     * @private\n     */\n    function PdfBrush() {\n        //\n    }\n    //IClonable implementation\n    PdfBrush.prototype.clone = function () {\n        return this;\n    };\n    return PdfBrush;\n}());\nexport { PdfBrush };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfColor } from './../pdf-color';\nimport { PdfColorSpace } from './../enum';\nimport { PdfBrush } from './pdf-brush';\n/**\n * Represents a brush that fills any object with a solid color.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a pages to the document\n * let page1 : PdfPage = document.pages.add();\n * // set font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // set brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSolidBrush = /** @class */ (function (_super) {\n    __extends(PdfSolidBrush, _super);\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfSolidBrush` class.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a pages to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // set font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // set brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10));\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param color color of the brush\n     */\n    function PdfSolidBrush(color) {\n        var _this = _super.call(this) || this;\n        _this.pdfColor = color;\n        return _this;\n    }\n    Object.defineProperty(PdfSolidBrush.prototype, \"color\", {\n        //Properties\n        /**\n         * Gets or sets the `color` of the brush.\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Monitors` the changes of the brush and modify PDF state respectively.\n     * @private\n     */\n    PdfSolidBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {\n        if (streamWriter == null) {\n            throw new Error('ArgumentNullException:streamWriter');\n        }\n        var diff = false;\n        if (brush == null) {\n            diff = true;\n            streamWriter.setColorAndSpace(this.pdfColor, currentColorSpace, false);\n            return diff;\n        }\n        else {\n            var sBrush = brush;\n            diff = true;\n            streamWriter.setColorAndSpace(this.pdfColor, currentColorSpace, false);\n            return diff;\n        }\n    };\n    /**\n     * `Resets` the changes, which were made by the brush.\n     * @private\n     */\n    PdfSolidBrush.prototype.resetChanges = function (streamWriter) {\n        streamWriter.setColorAndSpace(new PdfColor(0, 0, 0), PdfColorSpace.Rgb, false);\n    };\n    return PdfSolidBrush;\n}(PdfBrush));\nexport { PdfSolidBrush };\n","/**\n * public Enum for `PdfFontStyle`.\n * @private\n */\nexport var PdfFontStyle;\n(function (PdfFontStyle) {\n    /**\n     * Specifies the type of `Regular`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Regular\"] = 0] = \"Regular\";\n    /**\n     * Specifies the type of `Bold`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Bold\"] = 1] = \"Bold\";\n    /**\n     * Specifies the type of `Italic`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Italic\"] = 2] = \"Italic\";\n    /**\n     * Specifies the type of `Underline`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Underline\"] = 4] = \"Underline\";\n    /**\n     * Specifies the type of `Strikeout`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Strikeout\"] = 8] = \"Strikeout\";\n})(PdfFontStyle || (PdfFontStyle = {}));\n/**\n * Specifies the font family from the standard font.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // create new standard font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * ```\n */\nexport var PdfFontFamily;\n(function (PdfFontFamily) {\n    /**\n     * Specifies the `Helvetica` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Helvetica\"] = 0] = \"Helvetica\";\n    /**\n     * Specifies the `Courier` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Courier\"] = 1] = \"Courier\";\n    /**\n     * Specifies the `TimesRoman` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"TimesRoman\"] = 2] = \"TimesRoman\";\n    /**\n     * Specifies the `Symbol` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Symbol\"] = 3] = \"Symbol\";\n    /**\n     * Specifies the `ZapfDingbats` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"ZapfDingbats\"] = 4] = \"ZapfDingbats\";\n})(PdfFontFamily || (PdfFontFamily = {}));\n/**\n * public Enum for `PdfFontType`.\n * @private\n */\nexport var PdfFontType;\n(function (PdfFontType) {\n    /**\n     * Specifies the type of `Standard`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"Standard\"] = 0] = \"Standard\";\n    /**\n     * Specifies the type of `TrueType`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"TrueType\"] = 1] = \"TrueType\";\n    /**\n     * Specifies the type of `TrueTypeEmbedded`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"TrueTypeEmbedded\"] = 2] = \"TrueTypeEmbedded\";\n})(PdfFontType || (PdfFontType = {}));\n/**\n * public Enum for `PdfWordWrapType`.\n * @private\n */\nexport var PdfWordWrapType;\n(function (PdfWordWrapType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Word`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"Word\"] = 1] = \"Word\";\n    /**\n     * Specifies the type of `WordOnly`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"WordOnly\"] = 2] = \"WordOnly\";\n    /**\n     * Specifies the type of `Character`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"Character\"] = 3] = \"Character\";\n})(PdfWordWrapType || (PdfWordWrapType = {}));\n/**\n * public Enum for `PdfSubSuperScript`.\n * @private\n */\nexport var PdfSubSuperScript;\n(function (PdfSubSuperScript) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `SuperScript`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"SuperScript\"] = 1] = \"SuperScript\";\n    /**\n     * Specifies the type of `SubScript`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"SubScript\"] = 2] = \"SubScript\";\n})(PdfSubSuperScript || (PdfSubSuperScript = {}));\n/**\n * public Enum for `FontEncoding`.\n * @private\n */\nexport var FontEncoding;\n(function (FontEncoding) {\n    /**\n     * Specifies the type of `Unknown`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * Specifies the type of `StandardEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"StandardEncoding\"] = 1] = \"StandardEncoding\";\n    /**\n     * Specifies the type of `MacRomanEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"MacRomanEncoding\"] = 2] = \"MacRomanEncoding\";\n    /**\n     * Specifies the type of `MacExpertEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"MacExpertEncoding\"] = 3] = \"MacExpertEncoding\";\n    /**\n     * Specifies the type of `WinAnsiEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"WinAnsiEncoding\"] = 4] = \"WinAnsiEncoding\";\n    /**\n     * Specifies the type of `PdfDocEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"PdfDocEncoding\"] = 5] = \"PdfDocEncoding\";\n    /**\n     * Specifies the type of `IdentityH`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"IdentityH\"] = 6] = \"IdentityH\";\n})(FontEncoding || (FontEncoding = {}));\n/**\n * public Enum for `TtfCmapFormat`.\n * @private\n */\nexport var TtfCmapFormat;\n(function (TtfCmapFormat) {\n    /**\n     * This is the Apple standard character to glyph index mapping table.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Apple\"] = 0] = \"Apple\";\n    /**\n     * This is the Microsoft standard character to glyph index mapping table.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Microsoft\"] = 4] = \"Microsoft\";\n    /**\n     * Format 6: Trimmed table mapping.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Trimmed\"] = 6] = \"Trimmed\";\n})(TtfCmapFormat || (TtfCmapFormat = {}));\n/**\n * Enumerator that implements CMAP encodings.\n * @private\n */\nexport var TtfCmapEncoding;\n(function (TtfCmapEncoding) {\n    /**\n     * Unknown encoding.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * When building a symbol font for Windows.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Symbol\"] = 1] = \"Symbol\";\n    /**\n     * When building a Unicode font for Windows.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Unicode\"] = 2] = \"Unicode\";\n    /**\n     * For font that will be used on a Macintosh.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Macintosh\"] = 3] = \"Macintosh\";\n})(TtfCmapEncoding || (TtfCmapEncoding = {}));\n/**\n * Ttf platform ID.\n * @private\n */\nexport var TtfPlatformID;\n(function (TtfPlatformID) {\n    /**\n     * Apple platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"AppleUnicode\"] = 0] = \"AppleUnicode\";\n    /**\n     * Macintosh platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Macintosh\"] = 1] = \"Macintosh\";\n    /**\n     * Iso platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Iso\"] = 2] = \"Iso\";\n    /**\n     * Microsoft platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Microsoft\"] = 3] = \"Microsoft\";\n})(TtfPlatformID || (TtfPlatformID = {}));\n/**\n * Microsoft encoding ID.\n * @private\n */\nexport var TtfMicrosoftEncodingID;\n(function (TtfMicrosoftEncodingID) {\n    /**\n     * Undefined encoding.\n     * @private\n     */\n    TtfMicrosoftEncodingID[TtfMicrosoftEncodingID[\"Undefined\"] = 0] = \"Undefined\";\n    /**\n     * Unicode encoding.\n     * @private\n     */\n    TtfMicrosoftEncodingID[TtfMicrosoftEncodingID[\"Unicode\"] = 1] = \"Unicode\";\n})(TtfMicrosoftEncodingID || (TtfMicrosoftEncodingID = {}));\n/**\n * Macintosh encoding ID.\n * @private\n */\nexport var TtfMacintoshEncodingID;\n(function (TtfMacintoshEncodingID) {\n    /**\n     * Roman encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Roman\"] = 0] = \"Roman\";\n    /**\n     * Japanese encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Japanese\"] = 1] = \"Japanese\";\n    /**\n     * Chinese encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Chinese\"] = 2] = \"Chinese\";\n})(TtfMacintoshEncodingID || (TtfMacintoshEncodingID = {}));\n/**\n * Enumerator that implements font descriptor flags.\n * @private\n */\nexport var FontDescriptorFlags;\n(function (FontDescriptorFlags) {\n    /**\n     * All glyphs have the same width (as opposed to proportional or variable-pitch fonts, which have different widths).\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"FixedPitch\"] = 1] = \"FixedPitch\";\n    /**\n     * Glyphs have serifs, which are short strokes drawn at an angle on the top and\n     * bottom of glyph stems (as opposed to sans serif fonts, which do not).\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Serif\"] = 2] = \"Serif\";\n    /**\n     * Font contains glyphs outside the Adobe standard Latin character set. The\n     * flag and the nonsymbolic flag cannot both be set or both be clear.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Symbolic\"] = 4] = \"Symbolic\";\n    /**\n     * Glyphs resemble cursive handwriting.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Script\"] = 8] = \"Script\";\n    /**\n     * Font uses the Adobe standard Latin character set or a subset of it.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Nonsymbolic\"] = 32] = \"Nonsymbolic\";\n    /**\n     * Glyphs have dominant vertical strokes that are slanted.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Italic\"] = 64] = \"Italic\";\n    /**\n     * Bold font.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"ForceBold\"] = 262144] = \"ForceBold\";\n})(FontDescriptorFlags || (FontDescriptorFlags = {}));\n/**\n * true type font composite glyph flags.\n * @private\n */\nexport var TtfCompositeGlyphFlags;\n(function (TtfCompositeGlyphFlags) {\n    /**\n     * The Arg1And2AreWords.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"Arg1And2AreWords\"] = 1] = \"Arg1And2AreWords\";\n    /**\n     * The ArgsAreXyValues.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"ArgsAreXyValues\"] = 2] = \"ArgsAreXyValues\";\n    /**\n     * The RoundXyToGrid.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"RoundXyToGrid\"] = 4] = \"RoundXyToGrid\";\n    /**\n     * The WeHaveScale.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveScale\"] = 8] = \"WeHaveScale\";\n    /**\n     * The Reserved.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"Reserved\"] = 16] = \"Reserved\";\n    /**\n     * The MoreComponents.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"MoreComponents\"] = 32] = \"MoreComponents\";\n    /**\n     * The WeHaveAnXyScale.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveAnXyScale\"] = 64] = \"WeHaveAnXyScale\";\n    /**\n     * The WeHaveTwoByTwo\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveTwoByTwo\"] = 128] = \"WeHaveTwoByTwo\";\n    /**\n     * The WeHaveInstructions.\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveInstructions\"] = 256] = \"WeHaveInstructions\";\n    /**\n     * The UseMyMetrics.\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"UseMyMetrics\"] = 512] = \"UseMyMetrics\";\n})(TtfCompositeGlyphFlags || (TtfCompositeGlyphFlags = {}));\n","/**\n * PdfStringFormat.ts class for EJ2-PDF\n */\nimport { PdfVerticalAlignment } from './../../graphics/enum';\nimport { PdfSubSuperScript, PdfWordWrapType } from './../../graphics/fonts/enum';\n/**\n * `PdfStringFormat` class represents the text layout information on PDF.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a pages to the document\n * let page1 : PdfPage = document.pages.add();\n * // set font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // set brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * //\n * // set the format for string\n * let stringFormat : PdfStringFormat = new PdfStringFormat();\n * // set the text alignment\n * stringFormat.alignment = PdfTextAlignment.Center;\n * // set the vertical alignment\n * stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n * //\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStringFormat = /** @class */ (function () {\n    function PdfStringFormat(arg1, arg2) {\n        /**\n         * The `scaling factor` of the text being drawn.\n         * @private\n         */\n        this.scalingFactor = 100.0;\n        /**\n         * Indicates text `wrapping` type.\n         * @private\n         */\n        this.wordWrapType = PdfWordWrapType.Word;\n        this.internalLineLimit = true;\n        this.wordWrapType = PdfWordWrapType.Word;\n        if ((typeof arg1 !== 'undefined') && (typeof arg1 !== 'string')) {\n            this.textAlignment = arg1;\n        }\n        if (typeof arg2 !== 'undefined') {\n            this.verticalAlignment = arg2;\n        }\n    }\n    Object.defineProperty(PdfStringFormat.prototype, \"alignment\", {\n        //Properties\n        /**\n         * Gets or sets the `horizontal` text alignment\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set the text alignment\n         * stringFormat.alignment = PdfTextAlignment.Center;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.textAlignment;\n        },\n        set: function (value) {\n            this.textAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"textDirection\", {\n        get: function () {\n            return this.direction;\n        },\n        set: function (value) {\n            this.direction = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineAlignment\", {\n        /**\n         * Gets or sets the `vertical` text alignment.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set the vertical alignment\n         * stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.verticalAlignment === 'undefined' || this.verticalAlignment == null) {\n                return PdfVerticalAlignment.Top;\n            }\n            else {\n                return this.verticalAlignment;\n            }\n        },\n        set: function (value) {\n            this.verticalAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"rightToLeft\", {\n        /**\n         * Gets or sets the value that indicates text `direction` mode.\n         * @private\n         */\n        get: function () {\n            if (typeof this.isRightToLeft === 'undefined' || this.isRightToLeft == null) {\n                return false;\n            }\n            else {\n                return this.isRightToLeft;\n            }\n        },\n        set: function (value) {\n            this.isRightToLeft = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"characterSpacing\", {\n        /**\n         * Gets or sets value that indicates a `size` among the characters in the text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set character spacing\n         * stringFormat.characterSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.internalCharacterSpacing === 'undefined' || this.internalCharacterSpacing == null) {\n                return 0;\n            }\n            else {\n                return this.internalCharacterSpacing;\n            }\n        },\n        set: function (value) {\n            this.internalCharacterSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"wordSpacing\", {\n        /**\n         * Gets or sets value that indicates a `size` among the words in the text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set word spacing\n         * stringFormat.wordSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.internalWordSpacing === 'undefined' || this.internalWordSpacing == null) {\n                return 0;\n            }\n            else {\n                return this.internalWordSpacing;\n            }\n        },\n        set: function (value) {\n            this.internalWordSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineSpacing\", {\n        /**\n         * Gets or sets value that indicates the `vertical distance` between the baselines of adjacent lines of text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // set string\n         * let text : string = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n         * incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitati';\n         * // set rectangle bounds\n         * let rectangle : RectangleF = new RectangleF({x : 0, y : 0}, {width : 300, height : 100})\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set line spacing\n         * stringFormat.lineSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString(text, font, blackBrush, rectangle, stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.leading === 'undefined' || this.leading == null) {\n                return 0;\n            }\n            else {\n                return this.leading;\n            }\n        },\n        set: function (value) {\n            this.leading = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"clipPath\", {\n        /**\n         * Gets or sets a value indicating whether the text is `clipped` or not.\n         * @private\n         */\n        get: function () {\n            if (typeof this.clip === 'undefined' || this.clip == null) {\n                return false;\n            }\n            else {\n                return this.clip;\n            }\n        },\n        set: function (value) {\n            this.clip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"subSuperScript\", {\n        /**\n         * Gets or sets value indicating whether the text is in `subscript or superscript` mode.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfSubSuperScript === 'undefined' || this.pdfSubSuperScript == null) {\n                return PdfSubSuperScript.None;\n            }\n            else {\n                return this.pdfSubSuperScript;\n            }\n        },\n        set: function (value) {\n            this.pdfSubSuperScript = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"paragraphIndent\", {\n        /**\n         * Gets or sets the `indent` of the first line in the paragraph.\n         * @private\n         */\n        get: function () {\n            if (typeof this.internalParagraphIndent === 'undefined' || this.internalParagraphIndent == null) {\n                return 0;\n            }\n            else {\n                return this.internalParagraphIndent;\n            }\n        },\n        set: function (value) {\n            this.internalParagraphIndent = value;\n            this.firstLineIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineLimit\", {\n        /**\n         * Gets or sets a value indicating whether [`line limit`].\n         * @private\n         */\n        get: function () {\n            return this.internalLineLimit;\n        },\n        set: function (value) {\n            this.internalLineLimit = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"measureTrailingSpaces\", {\n        /**\n         * Gets or sets a value indicating whether [`measure trailing spaces`].\n         * @private\n         */\n        get: function () {\n            if (typeof this.trailingSpaces === 'undefined' || this.trailingSpaces == null) {\n                return false;\n            }\n            else {\n                return this.trailingSpaces;\n            }\n        },\n        set: function (value) {\n            this.trailingSpaces = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"noClip\", {\n        /**\n         * Gets or sets a value indicating whether [`no clip`].\n         * @private\n         */\n        get: function () {\n            if (typeof this.isNoClip === 'undefined' || this.isNoClip == null) {\n                return false;\n            }\n            else {\n                return this.isNoClip;\n            }\n        },\n        set: function (value) {\n            this.isNoClip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"wordWrap\", {\n        /**\n         * Gets or sets value indicating type of the text `wrapping`.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.wrapType === 'undefined' || this.wrapType == null) {\n            //     return PdfWordWrapType.Word;\n            // } else {\n            return this.wordWrapType;\n            // }\n        },\n        set: function (value) {\n            this.wordWrapType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"horizontalScalingFactor\", {\n        /**\n         * Gets or sets the `scaling factor`.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.scalingFactor === 'undefined' || this.scalingFactor == null) {\n            //     return 100;\n            // } else {\n            return this.scalingFactor;\n            // }\n        },\n        set: function (value) {\n            if (value <= 0) {\n                throw new Error('ArgumentOutOfRangeException:The scaling factor cant be less of equal to zero, ScalingFactor');\n            }\n            this.scalingFactor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"firstLineIndent\", {\n        /**\n         * Gets or sets the `indent` of the first line in the text.\n         * @private\n         */\n        get: function () {\n            if (typeof this.initialLineIndent === 'undefined' || this.initialLineIndent == null) {\n                return 0;\n            }\n            else {\n                return this.initialLineIndent;\n            }\n        },\n        set: function (value) {\n            this.initialLineIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Clones` the object.\n     * @private\n     */\n    //IClonable implementation\n    PdfStringFormat.prototype.clone = function () {\n        var format = this;\n        return format;\n    };\n    return PdfStringFormat;\n}());\nexport { PdfStringFormat };\n","/**\n * StringTokenizer.ts class for EJ2-PDF\n * Utility class for working with strings.\n * @private\n */\nvar StringTokenizer = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringTokenizer` class.\n     * @private\n     */\n    function StringTokenizer(textValue) {\n        /**\n         * Current `position`.\n         * @private\n         */\n        this.currentPosition = 0;\n        if (textValue == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        this.text = textValue;\n    }\n    Object.defineProperty(StringTokenizer.prototype, \"length\", {\n        // Properties\n        /**\n         * Gets text `length`.\n         * @private\n         */\n        get: function () {\n            return this.text.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StringTokenizer.prototype, \"end\", {\n        get: function () {\n            return (this.currentPosition === this.text.length);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StringTokenizer.prototype, \"position\", {\n        /**\n         * Gets or sets the position.\n         * @private\n         */\n        get: function () {\n            return this.currentPosition;\n        },\n        set: function (value) {\n            this.currentPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StringTokenizer.getCharsCount = function (text, symbols) {\n        if (typeof symbols === 'string') {\n            if (text == null) {\n                throw new Error('ArgumentNullException:wholeText');\n            }\n            var numSymbols = 0;\n            var curIndex = 0;\n            for (;;) {\n                curIndex = text.indexOf(symbols, curIndex);\n                if (curIndex === -1) {\n                    break;\n                }\n                else {\n                    numSymbols++;\n                    curIndex++;\n                }\n            }\n            return numSymbols;\n        }\n        else {\n            if (text == null) {\n                throw new Error('ArgumentNullException:text');\n            }\n            if (symbols == null) {\n                throw new Error('ArgumentNullException:symbols');\n            }\n            var count = 0;\n            for (var i = 0, len = text.length; i < len; i++) {\n                var ch = text[i];\n                if (this.contains(symbols, ch)) {\n                    count++;\n                }\n            }\n            return count;\n        }\n    };\n    /**\n     * Reads line of the text.\n     * @private\n     */\n    StringTokenizer.prototype.readLine = function () {\n        var pos = this.currentPosition;\n        while (pos < this.length) {\n            var ch = this.text[pos];\n            switch (ch) {\n                case '\\r':\n                case '\\n': {\n                    var text = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos + 1;\n                    if (((ch === '\\r') && (this.currentPosition < this.length)) && (this.text[this.currentPosition] === '\\n')) {\n                        this.currentPosition++;\n                    }\n                    return text;\n                }\n            }\n            pos++;\n        }\n        // The remaining text.\n        if (pos > this.currentPosition) {\n            var text2 = this.text.substr(this.currentPosition, pos - this.currentPosition);\n            this.currentPosition = pos;\n            return text2;\n        }\n        return null;\n    };\n    /**\n     * Reads line of the text.\n     * @private\n     */\n    StringTokenizer.prototype.peekLine = function () {\n        var pos = this.currentPosition;\n        var line = this.readLine();\n        this.currentPosition = pos;\n        return line;\n    };\n    /**\n     * Reads a word from the text.\n     * @private\n     */\n    StringTokenizer.prototype.readWord = function () {\n        var pos = this.currentPosition;\n        while (pos < this.length) {\n            var ch = this.text[pos];\n            switch (ch) {\n                case '\\r':\n                case '\\n':\n                    var textValue = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos + 1;\n                    if (((ch === '\\r') && (this.currentPosition < this.length)) && (this.text[this.currentPosition] === '\\n')) {\n                        this.currentPosition++;\n                    }\n                    return textValue;\n                case ' ':\n                case '\\t': {\n                    if (pos === this.currentPosition) {\n                        pos++;\n                    }\n                    var text = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos;\n                    return text;\n                }\n            }\n            pos++;\n        }\n        // The remaining text.\n        if (pos > this.currentPosition) {\n            var text2 = this.text.substr(this.currentPosition, pos - this.currentPosition);\n            this.currentPosition = pos;\n            return text2;\n        }\n        return null;\n    };\n    /**\n     * Peeks a word from the text.\n     * @private\n     */\n    StringTokenizer.prototype.peekWord = function () {\n        var pos = this.currentPosition;\n        var word = this.readWord();\n        this.currentPosition = pos;\n        return word;\n    };\n    StringTokenizer.prototype.read = function (count) {\n        if (typeof count === 'undefined') {\n            var ch = '0';\n            if (!this.end) {\n                ch = this.text[this.currentPosition];\n                this.currentPosition++;\n            }\n            return ch;\n        }\n        else {\n            var num = 0;\n            var builder = '';\n            while (!this.end && num < count) {\n                var ch = this.read();\n                builder = builder + ch;\n                num++;\n            }\n            return builder;\n        }\n    };\n    /**\n     * Peeks char form the data.\n     * @private\n     */\n    StringTokenizer.prototype.peek = function () {\n        var ch = '0';\n        if (!this.end) {\n            ch = this.text[this.currentPosition];\n        }\n        return ch;\n    };\n    /**\n     * Closes a reader.\n     * @private\n     */\n    StringTokenizer.prototype.close = function () {\n        this.text = null;\n    };\n    StringTokenizer.prototype.readToEnd = function () {\n        var text;\n        if (this.currentPosition === 0) {\n            text = this.text;\n        }\n        else {\n            text = this.text.substr(this.currentPosition, this.length - this.currentPosition);\n        }\n        this.currentPosition = this.length;\n        return text;\n    };\n    //Implementation\n    /**\n     * Checks whether array contains a symbol.\n     * @private\n     */\n    StringTokenizer.contains = function (array, symbol) {\n        var contains = false;\n        for (var i = 0; i < array.length; i++) {\n            if (array[i] === symbol) {\n                contains = true;\n                break;\n            }\n        }\n        return contains;\n    };\n    // Constants\n    /**\n     * `Whitespace` symbol.\n     * @private\n     */\n    StringTokenizer.whiteSpace = ' ';\n    /**\n     * `tab` symbol.\n     * @private\n     */\n    StringTokenizer.tab = '\\t';\n    /**\n     * Array of `spaces`.\n     * @private\n     */\n    StringTokenizer.spaces = [StringTokenizer.whiteSpace, StringTokenizer.tab];\n    /**\n     * `Pattern` for WhiteSpace.\n     * @private\n     */\n    StringTokenizer.whiteSpacePattern = '^[ \\t]+$';\n    return StringTokenizer;\n}());\nexport { StringTokenizer };\n","import { SizeF, RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfWordWrapType } from './enum';\nimport { StringTokenizer } from './string-tokenizer';\n/**\n * Class `lay outing the text`.\n */\nvar PdfStringLayouter = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringLayouter` class.\n     * @private\n     */\n    function PdfStringLayouter() {\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isOverloadWithPosition = false;\n        //\n    }\n    PdfStringLayouter.prototype.layout = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        if (arg4 instanceof RectangleF) {\n            this.initialize(arg1, arg2, arg3, arg4, arg5);\n            this.isOverloadWithPosition = arg6;\n            this.clientSize = arg7;\n            var result = this.doLayout();\n            this.clear();\n            return result;\n        }\n        else {\n            this.initialize(arg1, arg2, arg3, arg4);\n            this.isOverloadWithPosition = arg5;\n            this.clientSize = arg6;\n            var result = this.doLayout();\n            this.clear();\n            return result;\n        }\n    };\n    PdfStringLayouter.prototype.initialize = function (text, font, format, rectSize, pageHeight) {\n        if (typeof pageHeight === 'number') {\n            if (text == null) {\n                throw new Error('ArgumentNullException:text');\n            }\n            if (font == null) {\n                throw new Error('ArgumentNullException:font');\n            }\n            this.text = text;\n            this.font = font;\n            this.format = format;\n            this.size = new SizeF(rectSize.width, rectSize.height);\n            this.rectangle = rectSize;\n            this.pageHeight = pageHeight;\n            this.reader = new StringTokenizer(text);\n        }\n        else {\n            this.initialize(text, font, format, new RectangleF(new PointF(0, 0), rectSize), 0);\n        }\n    };\n    /**\n     * `Clear` all resources.\n     * @private\n     */\n    PdfStringLayouter.prototype.clear = function () {\n        this.font = null;\n        this.format = null;\n        this.reader.close();\n        this.reader = null;\n        this.text = null;\n    };\n    /**\n     * `Layouts` the text.\n     * @private\n     */\n    PdfStringLayouter.prototype.doLayout = function () {\n        var result = new PdfStringLayoutResult();\n        var lineResult = new PdfStringLayoutResult();\n        var lines = [];\n        var line = this.reader.peekLine();\n        var lineIndent = this.getLineIndent(true);\n        while (line != null) {\n            lineResult = this.layoutLine(line, lineIndent);\n            if (lineResult !== null || typeof lineResult !== 'undefined') {\n                var numSymbolsInserted = 0;\n                /* tslint:disable */\n                var returnedValue = this.copyToResult(result, lineResult, lines, /*out*/ numSymbolsInserted);\n                /* tslint:enable */\n                var success = returnedValue.success;\n                numSymbolsInserted = returnedValue.numInserted;\n                if (!success) {\n                    this.reader.read(numSymbolsInserted);\n                    break;\n                }\n            }\n            // if (lineResult.textRemainder != null && lineResult.textRemainder.length > 0 ) {\n            //     break;\n            // }\n            this.reader.readLine();\n            line = this.reader.peekLine();\n            lineIndent = this.getLineIndent(false);\n        }\n        this.finalizeResult(result, lines);\n        return result;\n    };\n    /**\n     * Returns `line indent` for the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineIndent = function (firstLine) {\n        var lineIndent = 0;\n        if (this.format != null) {\n            lineIndent = (firstLine) ? this.format.firstLineIndent : this.format.paragraphIndent;\n            lineIndent = (this.size.width > 0) ? Math.min(this.size.width, lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    /**\n     * Calculates `height` of the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineHeight = function () {\n        var height = this.font.height;\n        if (this.format != null && this.format.lineSpacing !== 0) {\n            height = this.format.lineSpacing + this.font.height;\n        }\n        return height;\n    };\n    /**\n     * Calculates `width` of the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineWidth = function (line) {\n        var width = this.font.getLineWidth(line, this.format);\n        return width;\n    };\n    // tslint:disable\n    /**\n     * `Layouts` line.\n     * @private\n     */\n    PdfStringLayouter.prototype.layoutLine = function (line, lineIndent) {\n        var lineResult = new PdfStringLayoutResult();\n        lineResult.layoutLineHeight = this.getLineHeight();\n        var lines = [];\n        var maxWidth = this.size.width;\n        var lineWidth = this.getLineWidth(line) + lineIndent;\n        var lineType = LineType.FirstParagraphLine;\n        var readWord = true;\n        // line is in bounds.\n        if (maxWidth <= 0 || Math.round(lineWidth) <= Math.round(maxWidth)) {\n            this.addToLineResult(lineResult, lines, line, lineWidth, LineType.NewLineBreak | lineType);\n        }\n        else {\n            var builder = '';\n            var curLine = '';\n            lineWidth = lineIndent;\n            var curIndent = lineIndent;\n            var reader = new StringTokenizer(line);\n            var word = reader.peekWord();\n            var isSingleWord = false;\n            if (word.length !== reader.length) {\n                if (word === ' ') {\n                    curLine = curLine + word;\n                    builder = builder + word;\n                    reader.position += 1;\n                    word = reader.peekWord();\n                }\n            }\n            while (word != null) {\n                curLine = curLine + word;\n                var curLineWidth = this.getLineWidth(curLine.toString()) + curIndent /*)*/;\n                if (curLine.toString() === ' ') {\n                    curLine = '';\n                    curLineWidth = 0;\n                }\n                if (curLineWidth > maxWidth) {\n                    if (this.getWrapType() === PdfWordWrapType.None) {\n                        break;\n                    }\n                    if (curLine.length === word.length) {\n                        //  Character wrap is disabled or one symbol is greater than bounds.\n                        if (this.getWrapType() === PdfWordWrapType.WordOnly) {\n                            lineResult.textRemainder = line.substring(reader.position);\n                            break;\n                        }\n                        else if (curLine.length === 1) {\n                            builder = builder + word;\n                            break;\n                        }\n                        else {\n                            readWord = false;\n                            curLine = '';\n                            word = reader.peek().toString();\n                            continue;\n                        }\n                    }\n                    else {\n                        if (this.getLineWidth(word.toString()) > maxWidth) {\n                            this.format.wordWrap = PdfWordWrapType.Character;\n                        }\n                        else {\n                            if (typeof this.format !== 'undefined' && this.format !== null) {\n                                this.format.wordWrap = PdfWordWrapType.Word;\n                            }\n                        }\n                        if (this.getWrapType() !== PdfWordWrapType.Character || !readWord) {\n                            var ln = builder.toString();\n                            // if (ln.indexOf(' ') === -1) {\n                            //     isSingleWord = true;\n                            //     this.addToLineResult(lineResult, lines, curLine, lineWidth, LineType.LayoutBreak | lineType);\n                            // } else {\n                            //     this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.LayoutBreak | lineType);\n                            // }                          \n                            if (ln !== ' ') {\n                                this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.LayoutBreak | lineType);\n                            }\n                            if (this.isOverloadWithPosition) {\n                                maxWidth = this.clientSize.width;\n                            }\n                            curLine = '';\n                            builder = '';\n                            lineWidth = 0;\n                            curIndent = 0;\n                            curLineWidth = 0;\n                            lineType = LineType.None;\n                            // if (isSingleWord) {\n                            //     reader.readWord();\n                            //     readWord = false;\n                            // }\n                            word = (readWord) ? word : reader.peekWord();\n                            //isSingleWord = false;\n                            readWord = true;\n                        }\n                        else {\n                            readWord = false;\n                            curLine = '';\n                            curLine = curLine + builder.toString();\n                            word = reader.peek().toString();\n                        }\n                        continue;\n                    }\n                }\n                /*tslint:disable:max-func-body-length */\n                builder = builder + word;\n                lineWidth = curLineWidth;\n                if (readWord) {\n                    reader.readWord();\n                    word = reader.peekWord();\n                    //isSingleWord = false;\n                }\n                else {\n                    reader.read();\n                    word = reader.peek().toString();\n                }\n            }\n            if (builder.length > 0) {\n                var ln = builder.toString();\n                this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.NewLineBreak | LineType.LastParagraphLine);\n            }\n            reader.close();\n        }\n        lineResult.layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            lineResult.layoutLines.push(lines[index]);\n        }\n        lines = [];\n        return lineResult;\n    };\n    /**\n     * `Adds` line to line result.\n     * @private\n     */\n    PdfStringLayouter.prototype.addToLineResult = function (lineResult, lines, line, lineWidth, breakType) {\n        var info = new LineInfo();\n        info.text = line;\n        info.width = lineWidth;\n        info.lineType = breakType;\n        lines.push(info);\n        var size = lineResult.actualSize;\n        size.height += this.getLineHeight();\n        size.width = Math.max(size.width, lineWidth);\n        lineResult.size = size;\n    };\n    /**\n     * `Copies` layout result from line result to entire result. Checks whether we can proceed lay outing or not.\n     * @private\n     */\n    PdfStringLayouter.prototype.copyToResult = function (result, lineResult, lines, \n    /*out*/ numInserted) {\n        var success = true;\n        var allowPartialLines = (this.format != null && !this.format.lineLimit);\n        var height = result.actualSize.height;\n        var maxHeight = this.size.height;\n        if ((this.pageHeight > 0) && (maxHeight + this.rectangle.y > this.pageHeight)) {\n            maxHeight = this.rectangle.y - this.pageHeight;\n            maxHeight = Math.max(maxHeight, -maxHeight);\n        }\n        numInserted = 0;\n        if (lineResult.lines != null) {\n            for (var i = 0, len = lineResult.lines.length; i < len; i++) {\n                var expHeight = height + lineResult.lineHeight;\n                if (expHeight <= maxHeight || maxHeight <= 0 || allowPartialLines) {\n                    var info = lineResult.lines[i];\n                    numInserted += info.text.length;\n                    info = this.trimLine(info, (lines.length === 0));\n                    lines.push(info);\n                    // Update width.\n                    var size = result.actualSize;\n                    size.width = Math.max(size.width, info.width);\n                    result.size = size;\n                    // The part of the line fits only and it's allowed to use partial lines.\n                    // if (expHeight >= maxHeight && maxHeight > 0 && allowPartialLines)\n                    // {\n                    //     let shouldClip : boolean = (this.format == null || !this.format.noClip);\n                    //     if (shouldClip)\n                    //     {\n                    //         let exceededHeight : number = expHeight - maxHeight;\n                    //         let fitHeight : number  = /*Utils.Round(*/ lineResult.lineHeight - exceededHeight /*)*/;\n                    //         height = /*Utils.Round(*/ height + fitHeight /*)*/;\n                    //     }\n                    //     else\n                    //     {\n                    //         height = expHeight;\n                    //     }\n                    //     success = false;\n                    //     break;\n                    // } else {\n                    height = expHeight;\n                    // }\n                }\n                else {\n                    success = false;\n                    break;\n                }\n            }\n        }\n        if (height != result.size.height) {\n            var size1 = result.actualSize;\n            size1.height = height;\n            result.size = size1;\n        }\n        return { success: success, numInserted: numInserted };\n    };\n    /**\n     * `Finalizes` final result.\n     * @private\n     */\n    PdfStringLayouter.prototype.finalizeResult = function (result, lines) {\n        result.layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            result.layoutLines.push(lines[index]);\n        }\n        result.layoutLineHeight = this.getLineHeight();\n        if (!this.reader.end) {\n            result.textRemainder = this.reader.readToEnd();\n        }\n        lines = [];\n    };\n    /**\n     * `Trims` whitespaces at the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.trimLine = function (info, firstLine) {\n        var line = info.text;\n        var lineWidth = info.width;\n        // Trim start whitespaces if the line is not a start of the paragraph only.\n        var trimStartSpaces = ((info.lineType & LineType.FirstParagraphLine) === 0);\n        var start = (this.format == null || !this.format.rightToLeft);\n        var spaces = StringTokenizer.spaces;\n        line = (start) ? line.trim() : line.trim();\n        // Recalculate line width.\n        if (line.length !== info.text.length) {\n            lineWidth = this.getLineWidth(line);\n            if ((info.lineType & LineType.FirstParagraphLine) > 0) {\n                lineWidth += this.getLineIndent(firstLine);\n            }\n        }\n        info.text = line;\n        info.width = lineWidth;\n        return info;\n    };\n    /**\n     * Returns `wrap` type.\n     * @private\n     */\n    PdfStringLayouter.prototype.getWrapType = function () {\n        var wrapType = (this.format != null) ? this.format.wordWrap : PdfWordWrapType.Word;\n        return wrapType;\n    };\n    return PdfStringLayouter;\n}());\nexport { PdfStringLayouter };\n//Internal declaration\nvar PdfStringLayoutResult = /** @class */ (function () {\n    function PdfStringLayoutResult() {\n    }\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"remainder\", {\n        // Properties\n        /**\n         * Gets the `text` which is not lay outed.\n         * @private\n         */\n        get: function () {\n            return this.textRemainder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"actualSize\", {\n        /**\n         * Gets the actual layout text `bounds`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.size === 'undefined') {\n                this.size = new SizeF(0, 0);\n            }\n            return this.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lines\", {\n        /**\n         * Gets layout `lines` information.\n         * @private\n         */\n        get: function () {\n            return this.layoutLines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lineHeight\", {\n        /**\n         * Gets the `height` of the line.\n         * @private\n         */\n        get: function () {\n            return this.layoutLineHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"empty\", {\n        /**\n         * Gets value that indicates whether any layout text [`empty`].\n         * @private\n         */\n        get: function () {\n            return (this.layoutLines == null || this.layoutLines.length === 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lineCount\", {\n        /**\n         * Gets `number of` the layout lines.\n         * @private\n         */\n        get: function () {\n            var count = (!this.empty) ? this.layoutLines.length : 0;\n            return count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfStringLayoutResult;\n}());\nexport { PdfStringLayoutResult };\nvar LineInfo = /** @class */ (function () {\n    function LineInfo() {\n    }\n    Object.defineProperty(LineInfo.prototype, \"lineType\", {\n        //Properties\n        /**\n         * Gets the `type` of the line text.\n         * @private\n         */\n        get: function () {\n            return this.type;\n        },\n        set: function (value) {\n            this.type = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineInfo.prototype, \"text\", {\n        /**\n         * Gets the line `text`.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineInfo.prototype, \"width\", {\n        /**\n         * Gets `width` of the line text.\n         * @private\n         */\n        get: function () {\n            return this.lineWidth;\n        },\n        set: function (value) {\n            this.lineWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return LineInfo;\n}());\nexport { LineInfo };\n/**\n* Break type of the `line`.\n* @private\n*/\nexport var LineType;\n(function (LineType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    LineType[LineType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `NewLineBreak`.\n     * @private\n     */\n    LineType[LineType[\"NewLineBreak\"] = 1] = \"NewLineBreak\";\n    /**\n     * Specifies the type of `LayoutBreak`.\n     * @private\n     */\n    LineType[LineType[\"LayoutBreak\"] = 2] = \"LayoutBreak\";\n    /**\n     * Specifies the type of `FirstParagraphLine`.\n     * @private\n     */\n    LineType[LineType[\"FirstParagraphLine\"] = 4] = \"FirstParagraphLine\";\n    /**\n     * Specifies the type of `LastParagraphLine`.\n     * @private\n     */\n    LineType[LineType[\"LastParagraphLine\"] = 8] = \"LastParagraphLine\";\n})(LineType || (LineType = {}));\n","/**\n * PdfFont.ts class for EJ2-PDF\n */\nimport { PdfFontStyle } from './enum';\nimport { SizeF } from './../../drawing/pdf-drawing';\nimport { PdfStringFormat } from './pdf-string-format';\nimport { PdfStringLayouter } from './string-layouter';\nimport { StringTokenizer } from './string-tokenizer';\n/**\n * Defines a particular format for text, including font face, size, and style attributes.\n * @private\n */\nvar PdfFont = /** @class */ (function () {\n    function PdfFont(size, style) {\n        /**\n         * `Style` of the font.\n         * @private\n         */\n        this.fontStyle = PdfFontStyle.Regular;\n        if (typeof size === 'number' && typeof style === 'undefined') {\n            this.fontSize = size;\n        }\n        else {\n            this.fontSize = size;\n            this.setStyle(style);\n        }\n    }\n    Object.defineProperty(PdfFont.prototype, \"name\", {\n        //Properties\n        /**\n         * Gets the face name of this Font.\n         * @private\n         */\n        get: function () {\n            return this.metrics.name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"size\", {\n        /**\n         * Gets the size of this font.\n         * @private\n         */\n        get: function () {\n            return this.fontSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"height\", {\n        /**\n         * Gets the height of the font in points.\n         * @private\n         */\n        get: function () {\n            return this.metrics.getHeight(null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"style\", {\n        /**\n         * Gets the style information for this font.\n         * @private\n         */\n        get: function () {\n            return this.fontStyle;\n        },\n        set: function (value) {\n            this.fontStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"bold\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `bold`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Bold) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"italic\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` has the `italic` style applied.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Italic) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"strikeout\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `strikeout`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Strikeout) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"underline\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `underline`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Underline) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"metrics\", {\n        /**\n         * Gets or sets the `metrics` for this font.\n         * @private\n         */\n        get: function () {\n            return this.fontMetrics;\n        },\n        set: function (value) {\n            this.fontMetrics = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"element\", {\n        // /**\n        //  * Gets and Sets the font `internals`.\n        //  * @private\n        //  */\n        // public get fontInternal() : IPdfPrimitive {\n        //     return this.pdfFontInternals;\n        // }\n        // public set fontInternal(value : IPdfPrimitive) {\n        //     this.pdfFontInternals = value;\n        // }\n        //IPdfWrapper Members\n        /**\n         * Gets the `element` representing the font.\n         * @private\n         */\n        get: function () {\n            return this.pdfFontInternals;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFont.prototype.measureString = function (text, arg2, arg3, arg4, arg5) {\n        if (typeof text === 'string' && typeof arg2 === 'undefined') {\n            return this.measureString(text, null);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 == null) && typeof arg3 === 'undefined' && typeof arg4 === 'undefined') {\n            var temparg2 = arg2;\n            var charactersFitted = 0;\n            var linesFilled = 0;\n            return this.measureString(text, temparg2, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 == null) && typeof arg3 === 'number' && typeof arg4 === 'number') {\n            var temparg2 = arg2;\n            return this.measureString(text, 0, temparg2, arg3, arg4);\n            // } else if (typeof text === 'string' && typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            //     return this.measureString(text, arg2, null);\n            // } else if (typeof text === 'string' && typeof arg2 === 'number' && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'undefined' && typeof arg5 === 'undefined') {\n            //     let temparg3 : PdfStringFormat = arg3 as PdfStringFormat;\n            //     let charactersFitted : number = 0;\n            //     let linesFilled : number = 0;\n            //     return this.measureString(text, arg2, temparg3, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && typeof arg2 === 'number' && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'number' && typeof arg5 === 'number') {\n            var layoutArea = new SizeF(arg2, 0);\n            var temparg3 = arg3;\n            return this.measureString(text, layoutArea, temparg3, arg4, arg5);\n            // } else if (typeof text === 'string' && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n            //     return this.measureString(text, arg2, null);\n            // } else if (typeof text === 'string' && arg2 instanceof SizeF && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'undefined' && typeof arg5 === 'undefined') {\n            //     let temparg3 : PdfStringFormat = arg3 as PdfStringFormat;\n            //     let charactersFitted : number = 0;\n            //     let linesFilled : number = 0;\n            //     return this.measureString(text, arg2, temparg3, charactersFitted, linesFilled);\n        }\n        else {\n            if (text == null) {\n                throw Error(\"ArgumentNullException(\\\"text\\\")\");\n            }\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var layouter = new PdfStringLayouter();\n            var result = layouter.layout(text, this, temparg3, temparg2, false, new SizeF(0, 0));\n            // arg4 = (result.Remainder == null) ? text.length : text.length - result.Remainder.length;\n            arg4 = text.length;\n            arg5 = (result.empty) ? 0 : result.lines.length;\n            return result.actualSize;\n        }\n    };\n    /* tslint:enable */\n    //IPdfCache Members\n    /**\n     * `Checks` whether the object is similar to another object.\n     * @private\n     */\n    PdfFont.prototype.equalsTo = function (obj) {\n        var result = this.equalsToFont(obj);\n        return result;\n    };\n    /**\n     * Returns `internals` of the object.\n     * @private\n     */\n    PdfFont.prototype.getInternals = function () {\n        return this.pdfFontInternals;\n    };\n    /**\n     * Sets `internals` to the object.\n     * @private\n     */\n    PdfFont.prototype.setInternals = function (internals) {\n        if (internals == null) {\n            throw new Error('ArgumentNullException:internals');\n        }\n        this.pdfFontInternals = internals;\n    };\n    /**\n     * Sets the `style` of the font.\n     * @private\n     */\n    PdfFont.prototype.setStyle = function (style) {\n        this.fontStyle = style;\n    };\n    /**\n     * Applies `settings` to the default line width.\n     * @private\n     */\n    PdfFont.prototype.applyFormatSettings = function (line, format, width) {\n        // if (line == null) {\n        //     throw new Error(`ArgumentNullException:line`);\n        // }\n        var realWidth = width;\n        if (format != null && width > 0) {\n            // Space among characters is not default.\n            if (format.characterSpacing !== 0) {\n                realWidth += (line.length - 1) * format.characterSpacing;\n            }\n            // Space among words is not default.\n            if (format.wordSpacing !== 0) {\n                var symbols = StringTokenizer.spaces;\n                var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n                realWidth += whitespacesCount * format.wordSpacing;\n            }\n        }\n        return realWidth;\n    };\n    //Constants\n    /**\n     * `Multiplier` of the symbol width.\n     * @default 0.001\n     * @private\n     */\n    PdfFont.charSizeMultiplier = 0.001;\n    /**\n     * `Synchronization` object.\n     * @private\n     */\n    PdfFont.syncObject = new Object();\n    return PdfFont;\n}());\nexport { PdfFont };\n","/**\n * Used to `write a string` into output file.\n * @private\n */\nvar PdfWriter = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfWriter` class.\n     * @private\n     */\n    function PdfWriter(stream) {\n        this.streamWriter = stream;\n    }\n    Object.defineProperty(PdfWriter.prototype, \"document\", {\n        //properties\n        /**\n         * Gets and Sets the `document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"position\", {\n        /**\n         * Gets the `position`.\n         * @private\n         */\n        get: function () {\n            return this.streamWriter.buffer.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"length\", {\n        /**\n         * Gets  the `length` of the stream'.\n         * @private\n         */\n        get: function () {\n            return this.streamWriter.buffer.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"stream\", {\n        /**\n         * Gets the `stream`.\n         * @private\n         */\n        get: function () {\n            var result = this.streamWriter;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //public Methods\n    /**\n     * `Writes the specified data`.\n     * @private\n     */\n    PdfWriter.prototype.write = function (overload) {\n        var data = [];\n        var tempOverload = overload;\n        this.streamWriter.write(tempOverload);\n    };\n    return PdfWriter;\n}());\nexport { PdfWriter };\n","/**\n * public Enum for `CompositeFontType`.\n * @private\n */\nexport var ObjectStatus;\n(function (ObjectStatus) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    ObjectStatus[ObjectStatus[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Registered`.\n     * @private\n     */\n    ObjectStatus[ObjectStatus[\"Registered\"] = 1] = \"Registered\";\n})(ObjectStatus || (ObjectStatus = {}));\n","/**\n * PdfMainObjectCollection.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../collections/dictionary';\nimport { ObjectStatus } from './enum';\n/**\n * The collection of all `objects` within a PDF document.\n * @private\n */\nvar PdfMainObjectCollection = /** @class */ (function () {\n    function PdfMainObjectCollection() {\n        //Fields\n        /**\n         * The collection of the `indirect objects`.\n         * @default []\n         * @private\n         */\n        this.objectCollections = [];\n        /**\n         * The collection of the `Indirect objects`.\n         * @default new Dictionary<number, ObjectInfo>()\n         * @private\n         */\n        this.mainObjectCollection = new Dictionary();\n        /**\n         * The collection of `primitive objects`.\n         * @private\n         */\n        this.primitiveObjectCollection = new Dictionary();\n    }\n    Object.defineProperty(PdfMainObjectCollection.prototype, \"count\", {\n        //Properties\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.objectCollections.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the value of `ObjectInfo` from object collection.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.items = function (index) {\n        return this.objectCollections[index];\n    };\n    Object.defineProperty(PdfMainObjectCollection.prototype, \"outIsNew\", {\n        //Methods\n        /**\n         * Specifies the value of `IsNew`.\n         * @private\n         */\n        get: function () {\n            return this.isNew;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Adds` the specified element.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.add = function (element) {\n        var objInfo = new ObjectInfo(element);\n        this.objectCollections.push(objInfo);\n        if (!this.primitiveObjectCollection.containsKey(element)) {\n            this.primitiveObjectCollection.setValue(element, this.objectCollections.length - 1);\n        }\n        element.position = this.index = this.objectCollections.length - 1;\n        element.status = ObjectStatus.Registered;\n    };\n    /**\n     * `Looks` through the collection for the object specified.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.lookFor = function (obj) {\n        var index = -1;\n        if (obj.position !== -1) {\n            return obj.position;\n        }\n        if (this.primitiveObjectCollection.containsKey(obj) && this.count === this.primitiveObjectCollection.size()) {\n            index = this.primitiveObjectCollection.getValue(obj);\n        }\n        else {\n            for (var i = this.count - 1; i >= 0; i--) {\n                var oi = this.objectCollections[i];\n                if (oi.object === obj) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    };\n    /**\n     * Gets the `reference of the object`.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.getReference = function (index, isNew) {\n        this.index = this.lookFor(index);\n        var reference;\n        this.isNew = false;\n        var oi = this.objectCollections[this.index];\n        reference = oi.reference;\n        var obj = { reference: reference, wasNew: isNew };\n        return obj;\n    };\n    /**\n     * Tries to set the `reference to the object`.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.trySetReference = function (obj, reference, found) {\n        var result = true;\n        found = true;\n        this.index = this.lookFor(obj);\n        var oi = this.objectCollections[this.index];\n        oi.setReference(reference);\n        return result;\n    };\n    PdfMainObjectCollection.prototype.destroy = function () {\n        for (var _i = 0, _a = this.objectCollections; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            if (obj !== undefined) {\n                obj.pdfObject.position = -1;\n                obj.pdfObject.isSaving = undefined;\n                obj.pdfObject.objectCollectionIndex = undefined;\n                obj.pdfObject.position = undefined;\n            }\n        }\n        this.objectCollections = [];\n        this.mainObjectCollection = new Dictionary();\n        this.primitiveObjectCollection = new Dictionary();\n    };\n    return PdfMainObjectCollection;\n}());\nexport { PdfMainObjectCollection };\nvar ObjectInfo = /** @class */ (function () {\n    function ObjectInfo(obj, reference) {\n        this.pdfObject = obj;\n        this.pdfReference = reference;\n    }\n    Object.defineProperty(ObjectInfo.prototype, \"object\", {\n        //Properties\n        /**\n         * Gets the `object`.\n         * @private\n         */\n        get: function () {\n            return this.pdfObject;\n        },\n        set: function (value) {\n            this.pdfObject = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ObjectInfo.prototype, \"reference\", {\n        /**\n         * Gets the `reference`.\n         * @private\n         */\n        get: function () {\n            return this.pdfReference;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the `reference`.\n     * @private\n     */\n    ObjectInfo.prototype.setReference = function (reference) {\n        this.pdfReference = reference;\n    };\n    return ObjectInfo;\n}());\nexport { ObjectInfo };\n","import { StreamWriter } from '@syncfusion/ej2-file-utils';\nimport { Encoding } from '@syncfusion/ej2-file-utils';\nimport { PdfDocument } from './pdf-document';\n/**\n * `PdfDocumentBase` class represent common properties of PdfDocument classes.\n * @private\n */\nvar PdfDocumentBase = /** @class */ (function () {\n    function PdfDocumentBase(document) {\n        /**\n         * If the stream is copied,  then it specifies true.\n         * @private\n         */\n        this.isStreamCopied = false;\n        if (document instanceof PdfDocument) {\n            this.document = document;\n        }\n    }\n    Object.defineProperty(PdfDocumentBase.prototype, \"pdfObjects\", {\n        //Prpperties\n        /**\n         * Gets the `PDF objects` collection, which stores all objects and references to it..\n         * @private\n         */\n        get: function () {\n            return this.objects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"crossTable\", {\n        /**\n         * Gets the `cross-reference` table.\n         * @private\n         */\n        get: function () {\n            return this.pdfCrossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"currentSavingObj\", {\n        /**\n         * Gets or sets the current saving `object number`.\n         * @private\n         */\n        get: function () {\n            return this.currentSavingObject;\n        },\n        set: function (value) {\n            this.currentSavingObject = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"catalog\", {\n        /**\n         * Gets the PDF document `catalog`.\n         * @private\n         */\n        get: function () {\n            return this.pdfCatalog;\n        },\n        set: function (value) {\n            this.pdfCatalog = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public methods\n    /**\n     * Sets the `main object collection`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setMainObjectCollection = function (mainObjectCollection) {\n        this.objects = mainObjectCollection;\n    };\n    /**\n     * Sets the `cross table`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setCrossTable = function (cTable) {\n        this.pdfCrossTable = cTable;\n    };\n    /**\n     * Sets the `catalog`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setCatalog = function (catalog) {\n        this.pdfCatalog = catalog;\n    };\n    PdfDocumentBase.prototype.save = function (filename) {\n        var _this = this;\n        var encoding = new Encoding(true);\n        var SW = new StreamWriter(encoding);\n        if (typeof filename === 'undefined') {\n            var encoding_1 = new Encoding(true);\n            var SW_1 = new StreamWriter(encoding_1);\n            return new Promise(function (resolve, reject) {\n                /* tslint:disable-next-line:no-any */\n                var obj = {};\n                obj.blobData = new Blob([_this.document.docSave(SW_1, true)], { type: 'application/pdf' });\n                resolve(obj);\n            });\n        }\n        else {\n            this.document.docSave(SW, filename, true);\n        }\n    };\n    /**\n     * `Clone` of parent object - PdfDocument.\n     * @private\n     */\n    PdfDocumentBase.prototype.clone = function () {\n        return this.document;\n    };\n    return PdfDocumentBase;\n}());\nexport { PdfDocumentBase };\n","/**\n * public Enum for `ObjectType`.\n * @private\n */\nexport var ObjectType;\n(function (ObjectType) {\n    /**\n     * Specifies the type of `Free`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Free\"] = 0] = \"Free\";\n    /**\n     * Specifies the type of `Normal`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Normal\"] = 1] = \"Normal\";\n    /**\n     * Specifies the type of `Packed`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Packed\"] = 2] = \"Packed\";\n})(ObjectType || (ObjectType = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfCatalog.ts class for EJ2-PDF\n */\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\n/**\n * `PdfCatalog` class represents internal catalog of the Pdf document.\n * @private\n */\nvar PdfCatalog = /** @class */ (function (_super) {\n    __extends(PdfCatalog, _super);\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfCatalog` class.\n     * @private\n     */\n    function PdfCatalog() {\n        var _this = _super.call(this) || this;\n        //fields\n        /**\n         * Internal variable to store collection of `sections`.\n         * @default null\n         * @private\n         */\n        _this.sections = null;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @private\n         */\n        _this.tempDictionaryProperties = new DictionaryProperties();\n        _this.items.setValue(new DictionaryProperties().type, new PdfName('Catalog'));\n        return _this;\n    }\n    Object.defineProperty(PdfCatalog.prototype, \"pages\", {\n        //Properties\n        /**\n         * Gets or sets the sections, which contain `pages`.\n         * @private\n         */\n        get: function () {\n            return this.sections;\n        },\n        set: function (value) {\n            var dictionary = value.element;\n            // if (this.sections !== value) {\n            //     this.sections = value;\n            //     this.Items.setValue(this.tempDictionaryProperties.pages, new PdfReferenceHolder(value));\n            // }\n            this.sections = value;\n            this.items.setValue(this.tempDictionaryProperties.pages, new PdfReferenceHolder(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCatalog;\n}(PdfDictionary));\nexport { PdfCatalog };\n","import { ObjectStatus } from './../input-output/enum';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './pdf-dictionary-properties';\nimport { Operators } from './pdf-operators';\nimport { Dictionary } from './../collections/dictionary';\nimport { PdfReference } from './../primitives/pdf-reference';\nimport { ObjectType } from './cross-table';\nimport { PdfStream } from './../primitives/pdf-stream';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfCatalog } from './../document/pdf-catalog';\n/**\n * `PdfCrossTable` is responsible for intermediate level parsing\n * and savingof a PDF document.\n * @private\n */\nvar PdfCrossTable = /** @class */ (function () {\n    function PdfCrossTable() {\n        /**\n         * The modified `objects` that should be saved.\n         * @private\n         */\n        this.objects = new Dictionary();\n        /**\n         * Holds `maximal generation number` or offset to object.\n         * @default 0\n         * @private\n         */\n        this.maxGenNumIndex = 0;\n        /**\n         * The `number of the objects`.\n         * @default 0\n         * @private\n         */\n        this.objectCount = 0;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @default new PdfDictionaryProperties()\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n    }\n    Object.defineProperty(PdfCrossTable.prototype, \"isMerging\", {\n        //Properties\n        /**\n         * Gets or sets if the document `is merged`.\n         * @private\n         */\n        get: function () {\n            return this.merging;\n        },\n        set: function (value) {\n            this.merging = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"trailer\", {\n        /**\n         * Gets the `trailer`.\n         * @private\n         */\n        get: function () {\n            if (this.internalTrailer == null) {\n                this.internalTrailer = new PdfStream();\n            }\n            return this.internalTrailer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"document\", {\n        /**\n         * Gets or sets the main `PdfDocument` class instance.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n            this.items = this.pdfDocument.pdfObjects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"pdfObjects\", {\n        /**\n         * Gets the catched `PDF object` main collection.\n         * @private\n         */\n        get: function () {\n            return this.items;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"objectCollection\", {\n        /**\n         * Gets the `object collection`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument.pdfObjects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"count\", {\n        /**\n         * Gets or sets the `number of the objects` within the document.\n         * @private\n         */\n        get: function () {\n            return this.objectCount;\n        },\n        set: function (value) {\n            this.objectCount = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"nextObjNumber\", {\n        /**\n         * Returns `next available object number`.\n         * @private\n         */\n        get: function () {\n            this.count = this.count + 1;\n            return this.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCrossTable.prototype.save = function (writer, filename) {\n        this.saveHead(writer);\n        var state = false;\n        this.mappedReferences = null;\n        this.objects.clear();\n        this.markTrailerReferences();\n        this.saveObjects(writer);\n        var saveCount = this.count;\n        var xrefPos = writer.position;\n        this.registerObject(0, new PdfReference(0, -1), true);\n        var prevXRef = 0;\n        writer.write(Operators.xref);\n        writer.write(Operators.newLine);\n        this.saveSections(writer);\n        this.saveTrailer(writer, this.count, prevXRef);\n        this.saveTheEndess(writer, xrefPos);\n        this.count = saveCount;\n        for (var i = 0; i < this.objectCollection.count; ++i) {\n            var oi = this.objectCollection.items(i);\n            oi.object.isSaving = false;\n        }\n        if (typeof filename === 'undefined') {\n            return writer.stream.buffer;\n        }\n        else {\n            writer.stream.save(filename);\n        }\n    };\n    /**\n     * `Saves the endess` of the file.\n     * @private\n     */\n    PdfCrossTable.prototype.saveTheEndess = function (writer, xrefPos) {\n        writer.write(Operators.newLine + Operators.startxref + Operators.newLine);\n        writer.write(xrefPos.toString() + Operators.newLine);\n        writer.write(Operators.eof + Operators.newLine);\n    };\n    /**\n     * `Saves the new trailer` dictionary.\n     * @private\n     */\n    PdfCrossTable.prototype.saveTrailer = function (writer, count, prevXRef) {\n        writer.write(Operators.trailer + Operators.newLine);\n        // Save the dictionary.\n        var trailer = this.trailer;\n        trailer.items.setValue(this.dictionaryProperties.size, new PdfNumber(this.objectCount + 1));\n        trailer = new PdfDictionary(trailer); // Make it real dictionary.\n        trailer.setEncrypt(false);\n        trailer.save(writer);\n    };\n    /**\n     * `Saves the xref section`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveSections = function (writer) {\n        var objectNum = 0;\n        var count = 0;\n        do {\n            count = this.prepareSubsection(objectNum);\n            this.saveSubsection(writer, objectNum, count);\n            objectNum += count;\n        } while (count !== 0);\n    };\n    /**\n     * `Saves a subsection`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveSubsection = function (writer, objectNum, count) {\n        if (count <= 0 || objectNum >= this.count) {\n            return;\n        }\n        var subsectionHead = '{0} {1}{2}';\n        writer.write(objectNum + ' ' + (count + 1) + Operators.newLine);\n        for (var i = objectNum; i <= objectNum + count; ++i) {\n            var obj = this.objects.getValue(i);\n            var str = '';\n            if (obj.type === ObjectType.Free) {\n                str = this.getItem(obj.offset, 65535, true);\n            }\n            else {\n                str = this.getItem(obj.offset, obj.generation, false);\n            }\n            writer.write(str);\n        }\n    };\n    /**\n     * Generates string for `xref table item`.\n     * @private\n     */\n    PdfCrossTable.prototype.getItem = function (offset, genNumber, isFree) {\n        var returnString = '';\n        var addOffsetLength = 10 - offset.toString().length;\n        if (genNumber <= 0) {\n            genNumber = 0;\n        }\n        var addGenNumberLength = (5 - genNumber.toString().length) <= 0 ? 0 : (5 - genNumber.toString().length);\n        for (var index = 0; index < addOffsetLength; index++) {\n            returnString = returnString + '0';\n        }\n        returnString = returnString + offset.toString() + ' ';\n        for (var index = 0; index < addGenNumberLength; index++) {\n            returnString = returnString + '0';\n        }\n        returnString = returnString + genNumber.toString() + ' ';\n        returnString = returnString + ((isFree) ? Operators.f : Operators.n) + Operators.newLine;\n        return returnString;\n    };\n    /**\n     * `Prepares a subsection` of the current section within the cross-reference table.\n     * @private\n     */\n    PdfCrossTable.prototype.prepareSubsection = function (objectNum) {\n        var count = 0;\n        var i;\n        var total = this.count;\n        for (var k = 0; k < this.document.pdfObjects.count; k++) {\n            var reference = this.document.pdfObjects.items(k).reference;\n            var refString = reference.toString();\n            var refArray = refString.split(' ');\n        }\n        if (objectNum >= total) {\n            return count;\n        }\n        // search for first changed indirect object.\n        for (i = objectNum; i < total; ++i) {\n            break;\n        }\n        objectNum = i;\n        // look up for all indirect objects in one subsection.\n        for (; i < total; ++i) {\n            ++count;\n        }\n        return count;\n    };\n    /**\n     * `Marks the trailer references` being saved.\n     * @private\n     */\n    PdfCrossTable.prototype.markTrailerReferences = function () {\n        var tempArray;\n        var keys = this.trailer.items.keys();\n        var values = this.trailer.items.values();\n    };\n    /**\n     * `Saves the head`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveHead = function (writer) {\n        var version = this.generateFileVersion(writer.document);\n        writer.write('%PDF-' + version);\n        writer.write(Operators.newLine);\n    };\n    /**\n     * Generates the `version` of the file.\n     * @private\n     */\n    PdfCrossTable.prototype.generateFileVersion = function (document) {\n        var iVersion = 4;\n        var version = '1.' + iVersion.toString();\n        return version;\n    };\n    PdfCrossTable.prototype.getReference = function (obj, bNew) {\n        if (typeof bNew === 'undefined') {\n            var wasNew = false;\n            return this.getReference(obj, wasNew);\n        }\n        else {\n            //code splitted for reducing lines of code exceeds 100.\n            return this.getSubReference(obj, bNew);\n        }\n    };\n    /**\n     * Retrieves the `reference` of the object given.\n     * @private\n     */\n    PdfCrossTable.prototype.getSubReference = function (obj, bNew) {\n        var isNew = false;\n        var wasNew;\n        var reference = null;\n        // if (obj.IsSaving) {\n        if (this.items.count > 0 && obj.objectCollectionIndex > 0 && this.items.count > obj.objectCollectionIndex - 1) {\n            var tempObj = this.document.pdfObjects.getReference(obj, wasNew);\n            reference = tempObj.reference;\n            wasNew = tempObj.wasNew;\n        }\n        if (reference == null) {\n            if (obj.status === ObjectStatus.Registered) {\n                wasNew = false;\n            }\n            else {\n                wasNew = true;\n            }\n        }\n        else {\n            wasNew = false;\n        }\n        // need to add mapped reference code\n        if (reference == null) {\n            var objnumber = this.nextObjNumber;\n            reference = new PdfReference(objnumber, 0);\n            var found = void 0;\n            if (wasNew) {\n                this.document.pdfObjects.add(obj);\n                this.document.pdfObjects.trySetReference(obj, reference, found);\n                var tempIndex = this.document.pdfObjects.count - 1;\n                var tempkey = this.document.pdfObjects.objectCollections[tempIndex].reference.objNumber;\n                var tempvalue = this.document.pdfObjects.objectCollections[this.document.pdfObjects.count - 1];\n                this.document.pdfObjects.mainObjectCollection.setValue(tempkey, tempvalue);\n                obj.position = -1;\n            }\n            else {\n                this.document.pdfObjects.trySetReference(obj, reference, found);\n            }\n            obj.objectCollectionIndex = reference.objNumber;\n            obj.status = ObjectStatus.None;\n            isNew = true;\n        }\n        bNew = isNew || this.bForceNew;\n        return reference;\n    };\n    /**\n     * `Saves all objects` in the collection.\n     * @private\n     */\n    PdfCrossTable.prototype.saveObjects = function (writer) {\n        var objectCollection = this.objectCollection;\n        for (var i = 0; i < objectCollection.count; ++i) {\n            var oi = objectCollection.items(i);\n            var obj = oi.object;\n            obj.isSaving = true;\n            this.saveIndirectObject(obj, writer);\n        }\n    };\n    /**\n     * `Saves indirect object`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveIndirectObject = function (obj, writer) {\n        var reference = this.getReference(obj);\n        if (obj instanceof PdfCatalog) {\n            this.trailer.items.setValue(this.dictionaryProperties.root, reference);\n        }\n        // NOTE :  This is needed for correct string objects encryption.\n        this.pdfDocument.currentSavingObj = reference;\n        var tempArchive = false;\n        tempArchive = obj.getArchive();\n        var allowedType = !((obj instanceof PdfStream) || !tempArchive || (obj instanceof PdfCatalog));\n        var sigFlag = false;\n        this.registerObject(writer.position, reference);\n        this.doSaveObject(obj, reference, writer);\n    };\n    /**\n     * Performs `real saving` of the save object.\n     * @private\n     */\n    PdfCrossTable.prototype.doSaveObject = function (obj, reference, writer) {\n        var correctPosition = writer.length;\n        writer.write(reference.objNumber.toString());\n        writer.write(Operators.whiteSpace);\n        writer.write(reference.genNumber.toString());\n        writer.write(Operators.whiteSpace);\n        writer.write(Operators.obj);\n        writer.write(Operators.newLine);\n        obj.save(writer);\n        var stream = writer.stream;\n        writer.write(Operators.endObj);\n        writer.write(Operators.newLine);\n    };\n    PdfCrossTable.prototype.registerObject = function (offset, reference, free) {\n        if (typeof free === 'boolean') {\n            // Register the object by its number.\n            this.objects.setValue(reference.objNumber, new RegisteredObject(offset, reference, free));\n            this.maxGenNumIndex = Math.max(this.maxGenNumIndex, reference.genNumber);\n        }\n        else if (typeof free === 'undefined') {\n            // Register the object by its number.\n            this.objects.setValue(reference.objNumber, new RegisteredObject(offset, reference));\n            this.maxGenNumIndex = Math.max(this.maxGenNumIndex, reference.genNumber);\n        }\n    };\n    /**\n     * `Dereferences` the specified primitive object.\n     * @private\n     */\n    PdfCrossTable.dereference = function (obj) {\n        var rh = obj;\n        if (rh != null) {\n            obj = rh.object;\n        }\n        return obj;\n    };\n    return PdfCrossTable;\n}());\nexport { PdfCrossTable };\nvar RegisteredObject = /** @class */ (function () {\n    function RegisteredObject(offset, reference, free) {\n        var tempOffset = offset;\n        this.offsetNumber = tempOffset;\n        var tempReference = reference;\n        this.generation = tempReference.genNumber;\n        this.object = tempReference.objNumber;\n        if (typeof free === 'undefined') {\n            this.type = ObjectType.Normal;\n        }\n        else {\n            this.type = ObjectType.Free;\n        }\n    }\n    Object.defineProperty(RegisteredObject.prototype, \"objectNumber\", {\n        //Properties\n        /**\n         * Gets the `object number`.\n         * @private\n         */\n        get: function () {\n            return this.object;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RegisteredObject.prototype, \"offset\", {\n        /**\n         * Gets the `offset`.\n         * @private\n         */\n        get: function () {\n            var result;\n            result = this.offsetNumber;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RegisteredObject;\n}());\nexport { RegisteredObject };\n","/**\n * PdfPageSize.ts class for EJ2-PDF\n */\nimport { SizeF } from './../drawing/pdf-drawing';\n/**\n * Represents information about various predefined `page sizes`.\n */\nvar PdfPageSize = /** @class */ (function () {\n    //constructor\n    /**\n     * Initialize an instance for `PdfPageSize` class.\n     * @private\n     */\n    function PdfPageSize() {\n        // \n    }\n    /**\n     * Specifies the size of `letter`.\n     * @private\n     */\n    PdfPageSize.letter = new SizeF(612, 792);\n    /**\n     * Specifies the size of `note`.\n     * @private\n     */\n    PdfPageSize.note = new SizeF(540, 720);\n    /**\n     * Specifies the size of `legal`.\n     * @private\n     */\n    PdfPageSize.legal = new SizeF(612, 1008);\n    /**\n     * Specifies the size of `a0`.\n     * @private\n     */\n    PdfPageSize.a0 = new SizeF(2380, 3368);\n    /**\n     * Specifies the size of `a1`.\n     * @private\n     */\n    PdfPageSize.a1 = new SizeF(1684, 2380);\n    /**\n     * Specifies the size of `a2`.\n     * @private\n     */\n    PdfPageSize.a2 = new SizeF(1190, 1684);\n    /**\n     * Specifies the size of `a3`.\n     * @private\n     */\n    PdfPageSize.a3 = new SizeF(842, 1190);\n    /**\n     * Specifies the size of `a4`.\n     * @private\n     */\n    PdfPageSize.a4 = new SizeF(595, 842);\n    /**\n     * Specifies the size of `a5`.\n     * @private\n     */\n    PdfPageSize.a5 = new SizeF(421, 595);\n    /**\n     * Specifies the size of `a6`.\n     * @private\n     */\n    PdfPageSize.a6 = new SizeF(297, 421);\n    /**\n     * Specifies the size of `a7`.\n     * @private\n     */\n    PdfPageSize.a7 = new SizeF(210, 297);\n    /**\n     * Specifies the size of `a8`.\n     * @private\n     */\n    PdfPageSize.a8 = new SizeF(148, 210);\n    /**\n     * Specifies the size of `a9`.\n     * @private\n     */\n    PdfPageSize.a9 = new SizeF(105, 148);\n    /**\n     * Specifies the size of `a10`.\n     * @private\n     */\n    PdfPageSize.a10 = new SizeF(74, 105);\n    /**\n     * Specifies the size of `b0`.\n     * @private\n     */\n    PdfPageSize.b0 = new SizeF(2836, 4008);\n    /**\n     * Specifies the size of `b1`.\n     * @private\n     */\n    PdfPageSize.b1 = new SizeF(2004, 2836);\n    /**\n     * Specifies the size of `b2`.\n     * @private\n     */\n    PdfPageSize.b2 = new SizeF(1418, 2004);\n    /**\n     * Specifies the size of `b3`.\n     * @private\n     */\n    PdfPageSize.b3 = new SizeF(1002, 1418);\n    /**\n     * Specifies the size of `b4`.\n     * @private\n     */\n    PdfPageSize.b4 = new SizeF(709, 1002);\n    /**\n     * Specifies the size of `b5`.\n     * @private\n     */\n    PdfPageSize.b5 = new SizeF(501, 709);\n    /**\n     * Specifies the size of `archE`.\n     * @private\n     */\n    PdfPageSize.archE = new SizeF(2592, 3456);\n    /**\n     * Specifies the size of `archD`.\n     * @private\n     */\n    PdfPageSize.archD = new SizeF(1728, 2592);\n    /**\n     * Specifies the size of `archC`.\n     * @private\n     */\n    PdfPageSize.archC = new SizeF(1296, 1728);\n    /**\n     * Specifies the size of `archB`.\n     * @private\n     */\n    PdfPageSize.archB = new SizeF(864, 1296);\n    /**\n     * Specifies the size of `archA`.\n     * @private\n     */\n    PdfPageSize.archA = new SizeF(648, 864);\n    /**\n     * Specifies the size of `flsa`.\n     * @private\n     */\n    PdfPageSize.flsa = new SizeF(612, 936);\n    /**\n     * Specifies the size of `halfLetter`.\n     * @private\n     */\n    PdfPageSize.halfLetter = new SizeF(396, 612);\n    /**\n     * Specifies the size of `letter11x17`.\n     * @private\n     */\n    PdfPageSize.letter11x17 = new SizeF(792, 1224);\n    /**\n     * Specifies the size of `ledger`.\n     * @private\n     */\n    PdfPageSize.ledger = new SizeF(1224, 792);\n    return PdfPageSize;\n}());\nexport { PdfPageSize };\n","/**\n * public Enum for `PdfPageOrientation`.\n * @private\n */\nexport var PdfPageOrientation;\n(function (PdfPageOrientation) {\n    /**\n     * Specifies the type of `Portrait`.\n     * @private\n     */\n    PdfPageOrientation[PdfPageOrientation[\"Portrait\"] = 0] = \"Portrait\";\n    /**\n     * Specifies the type of `Landscape`.\n     * @private\n     */\n    PdfPageOrientation[PdfPageOrientation[\"Landscape\"] = 1] = \"Landscape\";\n})(PdfPageOrientation || (PdfPageOrientation = {}));\n/**\n * public Enum for `PdfPageRotateAngle`.\n * @private\n */\nexport var PdfPageRotateAngle;\n(function (PdfPageRotateAngle) {\n    /**\n     * Specifies the type of `RotateAngle0`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle0\"] = 0] = \"RotateAngle0\";\n    /**\n     * Specifies the type of `RotateAngle90`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle90\"] = 1] = \"RotateAngle90\";\n    /**\n     * Specifies the type of `RotateAngle180`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle180\"] = 2] = \"RotateAngle180\";\n    /**\n     * Specifies the type of `RotateAngle270`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle270\"] = 3] = \"RotateAngle270\";\n})(PdfPageRotateAngle || (PdfPageRotateAngle = {}));\n/**\n * public Enum for `PdfNumberStyle`.\n * @private\n */\nexport var PdfNumberStyle;\n(function (PdfNumberStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Numeric`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"Numeric\"] = 1] = \"Numeric\";\n    /**\n     * Specifies the type of `LowerLatin`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"LowerLatin\"] = 2] = \"LowerLatin\";\n    /**\n     * Specifies the type of `LowerRoman`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"LowerRoman\"] = 3] = \"LowerRoman\";\n    /**\n     * Specifies the type of `UpperLatin`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"UpperLatin\"] = 4] = \"UpperLatin\";\n    /**\n     * Specifies the type of `UpperRoman`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"UpperRoman\"] = 5] = \"UpperRoman\";\n})(PdfNumberStyle || (PdfNumberStyle = {}));\n/**\n * public Enum for `PdfDockStyle`.\n * @private\n */\nexport var PdfDockStyle;\n(function (PdfDockStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Bottom\"] = 1] = \"Bottom\";\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Top\"] = 2] = \"Top\";\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Left\"] = 3] = \"Left\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Right\"] = 4] = \"Right\";\n    /**\n     * Specifies the type of `Fill`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Fill\"] = 5] = \"Fill\";\n})(PdfDockStyle || (PdfDockStyle = {}));\n/**\n * public Enum for `PdfAlignmentStyle`.\n * @private\n */\nexport var PdfAlignmentStyle;\n(function (PdfAlignmentStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `TopLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopLeft\"] = 1] = \"TopLeft\";\n    /**\n     * Specifies the type of `TopCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopCenter\"] = 2] = \"TopCenter\";\n    /**\n     * Specifies the type of `TopRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopRight\"] = 3] = \"TopRight\";\n    /**\n     * Specifies the type of `MiddleLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleLeft\"] = 4] = \"MiddleLeft\";\n    /**\n     * Specifies the type of `MiddleCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleCenter\"] = 5] = \"MiddleCenter\";\n    /**\n     * Specifies the type of `MiddleRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleRight\"] = 6] = \"MiddleRight\";\n    /**\n     * Specifies the type of `BottomLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomLeft\"] = 7] = \"BottomLeft\";\n    /**\n     * Specifies the type of `BottomCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomCenter\"] = 8] = \"BottomCenter\";\n    /**\n     * Specifies the type of `BottomRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomRight\"] = 9] = \"BottomRight\";\n})(PdfAlignmentStyle || (PdfAlignmentStyle = {}));\n/**\n * public Enum for `TemplateType`.\n * @private\n */\nexport var TemplateType;\n(function (TemplateType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    TemplateType[TemplateType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Top\"] = 1] = \"Top\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Bottom\"] = 2] = \"Bottom\";\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Left\"] = 3] = \"Left\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Right\"] = 4] = \"Right\";\n})(TemplateType || (TemplateType = {}));\n","/**\n * PdfMargins.ts class for EJ2-PDF\n * A class representing PDF page margins.\n */\nvar PdfMargins = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfMargins` class.\n     * @private\n     */\n    function PdfMargins() {\n        /**\n         * Represents the `Default Page Margin` value.\n         * @default 0.0\n         * @private\n         */\n        this.pdfMargin = 40.0;\n        this.setMargins(this.pdfMargin);\n    }\n    Object.defineProperty(PdfMargins.prototype, \"left\", {\n        //Properties\n        /**\n         * Gets or sets the `left margin` size.\n         * @private\n         */\n        get: function () {\n            return this.leftMargin;\n        },\n        set: function (value) {\n            this.leftMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"top\", {\n        /**\n         * Gets or sets the `top margin` size.\n         * @private\n         */\n        get: function () {\n            return this.topMargin;\n        },\n        set: function (value) {\n            this.topMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"right\", {\n        /**\n         * Gets or sets the `right margin` size.\n         * @private\n         */\n        get: function () {\n            return this.rightMargin;\n        },\n        set: function (value) {\n            this.rightMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `bottom margin` size.\n         * @private\n         */\n        get: function () {\n            return this.bottomMargin;\n        },\n        set: function (value) {\n            this.bottomMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"all\", {\n        /**\n         * Sets the `margins`.\n         * @private\n         */\n        set: function (value) {\n            this.setMargins(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfMargins.prototype.setMargins = function (margin1, margin2, margin3, margin4) {\n        if (typeof margin2 === 'undefined') {\n            this.leftMargin = this.topMargin = this.rightMargin = this.bottomMargin = margin1;\n        }\n        else {\n            if (typeof margin3 === 'undefined') {\n                this.leftMargin = this.rightMargin = margin1;\n                this.bottomMargin = this.topMargin = margin2;\n            }\n            else {\n                this.leftMargin = margin1;\n                this.topMargin = margin2;\n                this.rightMargin = margin3;\n                this.bottomMargin = margin4;\n            }\n        }\n    };\n    /**\n     * `Clones` the object.\n     * @private\n     */\n    PdfMargins.prototype.clone = function () {\n        return this;\n    };\n    return PdfMargins;\n}());\nexport { PdfMargins };\n","/**\n * PdfPageSettings.ts class for EJ2-PDF\n */\nimport { SizeF, PointF } from './../drawing/pdf-drawing';\nimport { PdfPageSize } from './pdf-page-size';\nimport { PdfPageRotateAngle, PdfPageOrientation } from './enum';\nimport { PdfMargins } from './../graphics/pdf-margins';\n/**\n * The class provides various `setting` related with PDF pages.\n */\nvar PdfPageSettings = /** @class */ (function () {\n    function PdfPageSettings(margins) {\n        //Fields\n        /**\n         * The page `margins`.\n         * @private\n         */\n        this.pageMargins = new PdfMargins();\n        /**\n         * The page `size`.\n         * @default a4\n         * @private\n         */\n        this.pageSize = PdfPageSize.a4;\n        /**\n         * The page `rotation angle`.\n         * @default PdfPageRotateAngle.RotateAngle0\n         * @private\n         */\n        this.rotateAngle = PdfPageRotateAngle.RotateAngle0;\n        /**\n         * The page `orientation`.\n         * @default PdfPageOrientation.Portrait\n         * @private\n         */\n        this.pageOrientation = PdfPageOrientation.Portrait;\n        /**\n         * The page `origin`.\n         * @default 0,0\n         * @private\n         */\n        this.pageOrigin = new PointF(0, 0);\n        /**\n         * Checks the Whether the `rotation` is applied or not.\n         * @default false\n         * @private\n         */\n        this.isRotation = false;\n        if (typeof margins === 'number') {\n            this.pageMargins.setMargins(margins);\n        }\n    }\n    Object.defineProperty(PdfPageSettings.prototype, \"size\", {\n        //Properties\n        /**\n         * Gets or sets the `size` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize;\n        },\n        set: function (value) {\n            this.setSize(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"orientation\", {\n        /**\n         * Gets or sets the page `orientation`.\n         * @private\n         */\n        get: function () {\n            return this.pageOrientation;\n        },\n        set: function (orientation) {\n            if (this.pageOrientation !== orientation) {\n                this.pageOrientation = orientation;\n                this.updateSize(orientation);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"margins\", {\n        /**\n         * Gets or sets the `margins` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageMargins;\n        },\n        set: function (value) {\n            this.pageMargins = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize.width;\n        },\n        set: function (value) {\n            this.pageSize.width = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"height\", {\n        /**\n         * Gets or sets the `height` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize.height;\n        },\n        set: function (value) {\n            this.pageSize.height = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"origin\", {\n        /**\n         * Gets or sets the `origin` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageOrigin;\n        },\n        set: function (value) {\n            this.pageOrigin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"rotate\", {\n        /**\n         * Gets or sets the number of degrees by which the page should be `rotated` clockwise when displayed or printed.\n         * @private\n         */\n        get: function () {\n            return this.rotateAngle;\n        },\n        set: function (value) {\n            this.rotateAngle = value;\n            this.isRotation = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * `Update page size` depending on orientation.\n     * @private\n     */\n    PdfPageSettings.prototype.updateSize = function (orientation) {\n        var min = Math.min(this.pageSize.width, this.pageSize.height);\n        var max = Math.max(this.pageSize.width, this.pageSize.height);\n        switch (orientation) {\n            case PdfPageOrientation.Portrait:\n                this.pageSize = new SizeF(min, max);\n                break;\n            case PdfPageOrientation.Landscape:\n                this.pageSize = new SizeF(max, min);\n                break;\n        }\n    };\n    /**\n     * Creates a `clone` of the object.\n     * @private\n     */\n    PdfPageSettings.prototype.clone = function () {\n        var settings = this;\n        settings.pageMargins = this.pageMargins.clone();\n        // if (GetTransition() != null)\n        // {\n        //     settings.Transition = (PdfPageTransition)Transition.clone();\n        // }\n        return settings;\n    };\n    /**\n     * Returns `size`, shrinked by the margins.\n     * @private\n     */\n    PdfPageSettings.prototype.getActualSize = function () {\n        var width = this.width - (this.margins.left + this.margins.right);\n        var height = this.height - (this.margins.top + this.margins.bottom);\n        var size = new SizeF(width, height);\n        return size;\n    };\n    /**\n     * Sets `size` to the page aaccording to the orientation.\n     * @private\n     */\n    PdfPageSettings.prototype.setSize = function (size) {\n        var min = Math.min(size.width, size.height);\n        var max = Math.max(size.width, size.height);\n        if (this.orientation === PdfPageOrientation.Portrait) {\n            this.pageSize = new SizeF(min, max);\n        }\n        else {\n            this.pageSize = new SizeF(max, min);\n        }\n    };\n    return PdfPageSettings;\n}());\nexport { PdfPageSettings };\n","import { Operators } from './pdf-operators';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PointF, RectangleF } from './../drawing/pdf-drawing';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * Helper class to `write PDF graphic streams` easily.\n * @private\n */\nvar PdfStreamWriter = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfStreamWriter` class.\n     * @private\n     */\n    function PdfStreamWriter(stream) {\n        if (stream == null) {\n            throw new Error('ArgumentNullException:stream');\n        }\n        this.stream = stream;\n    }\n    //Implementation\n    /**\n     * `Clear` the stream.\n     * @public\n     */\n    PdfStreamWriter.prototype.clear = function () {\n        this.stream.clearStream();\n    };\n    PdfStreamWriter.prototype.setGraphicsState = function (dictionaryName) {\n        if (dictionaryName instanceof PdfName) {\n            this.stream.write(dictionaryName.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setGraphicsState);\n        }\n        else {\n            this.stream.write(Operators.slash);\n            this.stream.write(dictionaryName);\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setGraphicsState);\n        }\n    };\n    /**\n     * `Executes the XObject`.\n     * @private\n     */\n    PdfStreamWriter.prototype.executeObject = function (name) {\n        this.stream.write(name.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.paintXObject);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * `Closes path object`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closePath = function () {\n        this.writeOperator(Operators.closePath);\n    };\n    /**\n     * `Clips the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.clipPath = function (useEvenOddRule) {\n        this.stream.write(Operators.clipPath);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n        }\n        this.stream.write(Operators.whiteSpace);\n        this.stream.write(Operators.endPath);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * `Closes, then fills and strokes the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeFillStrokePath = function (useEvenOddRule) {\n        this.stream.write(Operators.closeFillStrokePath);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Fills and strokes path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.fillStrokePath = function (useEvenOddRule) {\n        this.stream.write(Operators.fillStroke);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Fills path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.fillPath = function (useEvenOddRule) {\n        this.stream.write(Operators.fill);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Ends the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.endPath = function () {\n        this.writeOperator(Operators.n);\n    };\n    /**\n     * `Closes and fills the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeFillPath = function (useEvenOddRule) {\n        this.writeOperator(Operators.closePath);\n        this.stream.write(Operators.fill);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Closes and strokes the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeStrokePath = function () {\n        this.writeOperator(Operators.closeStrokePath);\n    };\n    /**\n     * `Sets the text scaling`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setTextScaling = function (textScaling) {\n        this.stream.write(PdfNumber.floatToString(textScaling));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setTextScaling);\n    };\n    /**\n     * `Strokes path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.strokePath = function () {\n        this.writeOperator(Operators.stroke);\n    };\n    /**\n     * `Restores` the graphics state.\n     * @private\n     */\n    PdfStreamWriter.prototype.restoreGraphicsState = function () {\n        this.writeOperator(Operators.restoreState);\n    };\n    /**\n     * `Saves` the graphics state.\n     * @private\n     */\n    PdfStreamWriter.prototype.saveGraphicsState = function () {\n        this.writeOperator(Operators.saveState);\n    };\n    PdfStreamWriter.prototype.startNextLine = function (arg1, arg2) {\n        if (typeof arg1 === 'undefined') {\n            this.writeOperator(Operators.goToNextLine);\n        }\n        else if (arg1 instanceof PointF) {\n            this.writePoint(arg1);\n            this.writeOperator(Operators.setCoords);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writeOperator(Operators.setCoords);\n        }\n    };\n    /**\n     * Shows the `text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.showText = function (text) {\n        this.checkTextParam(text);\n        this.writeText(text);\n        this.writeOperator(Operators.setText);\n    };\n    /**\n     * Sets `text leading`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLeading = function (leading) {\n        this.stream.write(PdfNumber.floatToString(leading));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setTextLeading);\n    };\n    /**\n     * `Begins the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.beginPath = function (x, y) {\n        this.writePoint(x, y);\n        this.writeOperator(Operators.beginPath);\n    };\n    /**\n     * `Begins text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.beginText = function () {\n        this.writeOperator(Operators.beginText);\n    };\n    /**\n     * `Ends text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.endText = function () {\n        this.writeOperator(Operators.endText);\n    };\n    PdfStreamWriter.prototype.appendRectangle = function (arg1, arg2, arg3, arg4) {\n        if (arg1 instanceof RectangleF) {\n            this.appendRectangle(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writePoint(arg3, arg4);\n            this.writeOperator(Operators.appendRectangle);\n        }\n    };\n    PdfStreamWriter.prototype.appendLineSegment = function (arg1, arg2) {\n        if (arg1 instanceof PointF) {\n            this.appendLineSegment(arg1.x, arg1.y);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writeOperator(Operators.appendLineSegment);\n        }\n    };\n    /**\n     * Sets the `text rendering mode`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setTextRenderingMode = function (renderingMode) {\n        this.stream.write(renderingMode.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setRenderingMode);\n    };\n    /**\n     * Sets the `character spacing`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setCharacterSpacing = function (charSpacing) {\n        this.stream.write(PdfNumber.floatToString(charSpacing));\n        this.stream.write(Operators.whiteSpace);\n        this.stream.write(Operators.setCharacterSpace);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * Sets the `word spacing`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setWordSpacing = function (wordSpacing) {\n        this.stream.write(PdfNumber.floatToString(wordSpacing));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setWordSpace);\n    };\n    PdfStreamWriter.prototype.showNextLineText = function (arg1, arg2) {\n        if (arg1 instanceof PdfString) {\n            this.checkTextParam(arg1);\n            this.writeText(arg1);\n            this.writeOperator(Operators.setTextOnNewLine);\n        }\n        else {\n            this.checkTextParam(arg1);\n            this.writeText(arg1, arg2);\n            this.writeOperator(Operators.setTextOnNewLine);\n        }\n    };\n    PdfStreamWriter.prototype.setColorSpace = function (arg1, arg2) {\n        if (arg1 instanceof PdfName && typeof arg2 === 'boolean') {\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            // if (temparg1 == null) {\n            //     throw new Error('ArgumentNullException:name');\n            // }\n            var op = (temparg2) ? Operators.selectcolorspaceforstroking : Operators.selectcolorspacefornonstroking;\n            this.stream.write(temparg1.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.stream.write(op);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            this.setColorSpace(new PdfName(temparg1), temparg2);\n        }\n    };\n    /**\n     * Modifies current `transformation matrix`.\n     * @private\n     */\n    PdfStreamWriter.prototype.modifyCtm = function (matrix) {\n        if (matrix == null) {\n            throw new Error('ArgumentNullException:matrix');\n        }\n        this.stream.write(matrix.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.modifyCtm);\n    };\n    PdfStreamWriter.prototype.setFont = function (font, name, size) {\n        if (typeof name === 'string') {\n            this.setFont(font, new PdfName(name), size);\n        }\n        else {\n            if (font == null) {\n                throw new Error('ArgumentNullException:font');\n            }\n            this.stream.write(name.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.stream.write(PdfNumber.floatToString(size));\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setFont);\n        }\n    };\n    /**\n     * `Writes the operator`.\n     * @private\n     */\n    PdfStreamWriter.prototype.writeOperator = function (opcode) {\n        this.stream.write(opcode);\n        this.stream.write(Operators.newLine);\n    };\n    PdfStreamWriter.prototype.checkTextParam = function (text) {\n        if (text == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        if (typeof text === 'string' && text === '') {\n            throw new Error('ArgumentException:The text can not be an empty string, text');\n        }\n    };\n    PdfStreamWriter.prototype.writeText = function (arg1, arg2) {\n        if ((arg1 instanceof PdfString) && (typeof arg2 === 'undefined')) {\n            this.stream.write(arg1.pdfEncode());\n        }\n        else {\n            var start = void 0;\n            var end = void 0;\n            if (arg2) {\n                start = PdfString.hexStringMark[0];\n                end = PdfString.hexStringMark[1];\n            }\n            else {\n                start = PdfString.stringMark[0];\n                end = PdfString.stringMark[1];\n            }\n            this.stream.write(start);\n            this.stream.write(arg1);\n            this.stream.write(end);\n        }\n    };\n    PdfStreamWriter.prototype.writePoint = function (arg1, arg2) {\n        if ((arg1 instanceof PointF) && (typeof arg2 === 'undefined')) {\n            this.writePoint(arg1.x, arg1.y);\n        }\n        else {\n            var temparg1 = arg1;\n            this.stream.write(PdfNumber.floatToString(temparg1));\n            this.stream.write(Operators.whiteSpace);\n            // NOTE: Change Y co-ordinate because we shifted co-ordinate system only.\n            arg2 = this.updateY(arg2);\n            this.stream.write(PdfNumber.floatToString(arg2));\n            this.stream.write(Operators.whiteSpace);\n        }\n    };\n    /**\n     * `Updates y` co-ordinate.\n     * @private\n     */\n    PdfStreamWriter.prototype.updateY = function (arg) {\n        return -arg;\n    };\n    /**\n     * `Writes string` to the file.\n     * @private\n     */\n    PdfStreamWriter.prototype.write = function (string) {\n        var builder = '';\n        builder += string;\n        builder += Operators.newLine;\n        this.writeOperator(builder);\n    };\n    /**\n     * `Writes comment` to the file.\n     * @private\n     */\n    PdfStreamWriter.prototype.writeComment = function (comment) {\n        if (comment != null && comment.length > 0) {\n            var builder = '';\n            builder += Operators.comment;\n            builder += Operators.whiteSpace;\n            builder += comment;\n            //builder.Append( Operators.NewLine );\n            this.writeOperator(builder);\n        }\n        else {\n            throw new Error('Invalid comment');\n        }\n    };\n    /**\n     * Sets the `color and space`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setColorAndSpace = function (color, colorSpace, forStroking) {\n        if (!color.isEmpty) {\n            // bool test = color is PdfExtendedColor;\n            this.stream.write(color.toString(colorSpace, forStroking));\n            this.stream.write(Operators.newLine);\n        }\n    };\n    // public setLineDashPattern(pattern : number[], patternOffset : number) : void\n    // {\n    //     let pat : PdfArray = new PdfArray(pattern);\n    //     let off : PdfNumber = new PdfNumber(patternOffset);\n    //     this.setLineDashPatternHelper(pat, off);\n    // }\n    // private setLineDashPatternHelper(pattern : PdfArray, patternOffset : PdfNumber) : void\n    // {\n    //     pattern.Save(this);\n    //     this.m_stream.write(Operators.whiteSpace);\n    //     patternOffset.Save(this);\n    //     this.m_stream.write(Operators.whiteSpace);\n    //     this.writeOperator(Operators.setDashPattern);\n    // }\n    /**\n     * Sets the `line dash pattern`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineDashPattern = function (pattern, patternOffset) {\n        // let pat : PdfArray = new PdfArray(pattern);\n        // let off : PdfNumber = new PdfNumber(patternOffset);\n        // this.setLineDashPatternHelper(pat, off);\n        this.setLineDashPatternHelper(pattern, patternOffset);\n    };\n    /**\n     * Sets the `line dash pattern`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineDashPatternHelper = function (pattern, patternOffset) {\n        var tempPattern = '[';\n        if (pattern.length > 1) {\n            for (var index = 0; index < pattern.length; index++) {\n                if (index === pattern.length - 1) {\n                    tempPattern += pattern[index].toString();\n                }\n                else {\n                    tempPattern += pattern[index].toString() + ' ';\n                }\n            }\n        }\n        tempPattern += '] ';\n        tempPattern += patternOffset.toString();\n        tempPattern += ' ' + Operators.setDashPattern;\n        this.stream.write(tempPattern);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * Sets the `miter limit`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setMiterLimit = function (miterLimit) {\n        this.stream.write(PdfNumber.floatToString(miterLimit));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setMiterLimit);\n    };\n    /**\n     * Sets the `width of the line`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineWidth = function (width) {\n        this.stream.write(PdfNumber.floatToString(width));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineWidth);\n    };\n    /**\n     * Sets the `line cap`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineCap = function (lineCapStyle) {\n        this.stream.write((lineCapStyle).toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineCapStyle);\n    };\n    /**\n     * Sets the `line join`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineJoin = function (lineJoinStyle) {\n        this.stream.write((lineJoinStyle).toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineJoinStyle);\n    };\n    Object.defineProperty(PdfStreamWriter.prototype, \"position\", {\n        //IPdfWriter members\n        /**\n         * Gets or sets the current `position` within the stream.\n         * @private\n         */\n        get: function () {\n            return this.stream.position;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStreamWriter.prototype, \"length\", {\n        /**\n         * Gets `stream length`.\n         * @private\n         */\n        get: function () {\n            var returnValue = 0;\n            if (this.stream.data.length !== 0 && this.stream.data.length !== -1) {\n                for (var index = 0; index < this.stream.data.length; index++) {\n                    returnValue += this.stream.data[index].length;\n                }\n            }\n            return returnValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStreamWriter.prototype, \"document\", {\n        /**\n         * Gets and Sets the `current document`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /* tslint:disable-next-line:max-line-length */\n    PdfStreamWriter.prototype.appendBezierSegment = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof PointF && arg2 instanceof PointF && arg3 instanceof PointF) {\n            this.writePoint(arg1.x, arg1.y);\n            this.writePoint(arg2.x, arg2.y);\n            this.writePoint(arg3.x, arg3.y);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writePoint(arg3, arg4);\n            this.writePoint(arg5, arg6);\n        }\n        this.writeOperator(Operators.appendbeziercurve);\n    };\n    PdfStreamWriter.prototype.setColourWithPattern = function (colours, patternName, forStroking) {\n        if ((colours != null)) {\n            var count = colours.length;\n            var i = 0;\n            for (i = 0; i < count; ++i) {\n                this.stream.write(colours[i].toString());\n                this.stream.write(Operators.whiteSpace);\n            }\n        }\n        if ((patternName != null)) {\n            this.stream.write(patternName.toString());\n            this.stream.write(Operators.whiteSpace);\n        }\n        if (forStroking) {\n            this.writeOperator(Operators.setColorAndPatternStroking);\n        }\n        else {\n            this.writeOperator(Operators.setColorAndPattern);\n        }\n    };\n    return PdfStreamWriter;\n}());\nexport { PdfStreamWriter };\n","/**\n * PdfPen.ts class for EJ2-PDF\n */\nimport { PdfColor } from './pdf-color';\nimport { PdfSolidBrush } from './brushes/pdf-solid-brush';\nimport { PdfDashStyle, PdfColorSpace } from './enum';\nimport { PdfBrush } from './brushes/pdf-brush';\n/**\n * `PdfPen` class defining settings for drawing operations, that determines the color,\n * width, and style of the drawing elements.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // create a new page\n * let page1 : PdfPage = document.pages.add();\n * // set pen\n * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n * // draw rectangle\n * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPen = /** @class */ (function () {\n    function PdfPen(arg1, arg2) {\n        //Fields\n        /**\n         * Specifies the `color of the pen`.\n         * @default new PdfColor()\n         * @private\n         */\n        this.pdfColor = new PdfColor(0, 0, 0);\n        /**\n         * Specifies the `dash offset of the pen`.\n         * @default 0\n         * @private\n         */\n        this.dashOffsetValue = 0;\n        /**\n         * Specifies the `dash pattern of the pen`.\n         * @default [0]\n         * @private\n         */\n        this.penDashPattern = [0];\n        /**\n         * Specifies the `dash style of the pen`.\n         * @default Solid\n         * @private\n         */\n        this.pdfDashStyle = PdfDashStyle.Solid;\n        /**\n         * Specifies the `line cap of the pen`.\n         * @default 0\n         * @private\n         */\n        this.pdfLineCap = 0;\n        /**\n         * Specifies the `line join of the pen`.\n         * @default 0\n         * @private\n         */\n        this.pdfLineJoin = 0;\n        /**\n         * Specifies the `width of the pen`.\n         * @default 1.0\n         * @private\n         */\n        this.penWidth = 1.0;\n        /**\n         * Specifies the `mitter limit of the pen`.\n         * @default 0.0\n         * @private\n         */\n        this.internalMiterLimit = 0.0;\n        /**\n         * Stores the `colorspace` value.\n         * @default Rgb\n         * @private\n         */\n        this.colorSpace = PdfColorSpace.Rgb;\n        if (arg1 instanceof PdfBrush) {\n            this.setBrush(arg1);\n        }\n        else if (arg1 instanceof PdfColor) {\n            this.color = arg1;\n        }\n        if (typeof arg2 === 'number') {\n            this.width = arg2;\n        }\n    }\n    Object.defineProperty(PdfPen.prototype, \"color\", {\n        //Properties\n        /**\n         * Gets or sets the `color of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashOffset\", {\n        /**\n         * Gets or sets the `dash offset of the pen`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.dashOffsetValue === 'undefined' || this.dashOffsetValue == null) {\n                return 0;\n            }\n            else {\n                return this.dashOffsetValue;\n            }\n        },\n        set: function (value) {\n            this.dashOffsetValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashPattern\", {\n        /**\n         * Gets or sets the `dash pattern of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.penDashPattern;\n        },\n        set: function (value) {\n            this.penDashPattern = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashStyle\", {\n        /**\n         * Gets or sets the `dash style of the pen`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create a new page\n         * let page1 : PdfPage = document.pages.add();\n         * // set pen\n         * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n         * //\n         * // set pen style\n         * pen.dashStyle = PdfDashStyle.DashDot;\n         * // get pen style\n         * let style : PdfDashStyle = pen.dashStyle;\n         * //\n         * // draw rectangle\n         * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfDashStyle;\n        },\n        set: function (value) {\n            if (this.pdfDashStyle !== value) {\n                this.pdfDashStyle = value;\n                switch (this.pdfDashStyle) {\n                    case PdfDashStyle.Custom:\n                        break;\n                    case PdfDashStyle.Dash:\n                        this.penDashPattern = [3, 1];\n                        break;\n                    case PdfDashStyle.Dot:\n                        this.penDashPattern = [1, 1];\n                        break;\n                    case PdfDashStyle.DashDot:\n                        this.penDashPattern = [3, 1, 1, 1];\n                        break;\n                    case PdfDashStyle.DashDotDot:\n                        this.penDashPattern = [3, 1, 1, 1, 1, 1];\n                        break;\n                    case PdfDashStyle.Solid:\n                        break;\n                    default:\n                        this.pdfDashStyle = PdfDashStyle.Solid;\n                        this.penDashPattern = [0];\n                        break;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"lineCap\", {\n        /**\n         * Gets or sets the `line cap of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfLineCap;\n        },\n        set: function (value) {\n            this.pdfLineCap = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"lineJoin\", {\n        /**\n         * Gets or sets the `line join style of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfLineJoin;\n        },\n        set: function (value) {\n            this.pdfLineJoin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"miterLimit\", {\n        /**\n         * Gets or sets the `miter limit`.\n         * @private\n         */\n        get: function () {\n            return this.internalMiterLimit;\n        },\n        set: function (value) {\n            this.internalMiterLimit = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"width\", {\n        /**\n         * Gets or sets the `width of the pen`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create a new page\n         * let page1 : PdfPage = document.pages.add();\n         * // set pen\n         * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n         * //\n         * // set pen width\n         * pen.width = 2;\n         * //\n         * // draw rectangle\n         * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.penWidth;\n        },\n        set: function (value) {\n            this.penWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Helper\n    /**\n     * `Clones` this instance of PdfPen class.\n     * @private\n     */\n    PdfPen.prototype.clone = function () {\n        var pen = this;\n        return pen;\n    };\n    /**\n     * `Sets the brush`.\n     * @private\n     */\n    PdfPen.prototype.setBrush = function (brush) {\n        var sBrush = brush;\n        if ((sBrush != null && sBrush instanceof PdfSolidBrush)) {\n            this.color = sBrush.color;\n            this.pdfBrush = sBrush;\n        }\n        this.color = sBrush.color;\n        this.pdfBrush = sBrush;\n    };\n    /**\n     * `Monitors the changes`.\n     * @private\n     */\n    PdfPen.prototype.monitorChanges = function (currentPen, streamWriter, getResources, saveState, currentColorSpace, matrix) {\n        var diff = false;\n        saveState = true;\n        if (currentPen == null) {\n            diff = true;\n        }\n        diff = this.dashControl(currentPen, saveState, streamWriter);\n        streamWriter.setLineWidth(this.width);\n        streamWriter.setLineJoin(this.lineJoin);\n        streamWriter.setLineCap(this.lineCap);\n        var miterLimit = this.miterLimit;\n        if (miterLimit > 0) {\n            streamWriter.setMiterLimit(miterLimit);\n            diff = true;\n        }\n        var brush = this.pdfBrush;\n        streamWriter.setColorAndSpace(this.color, currentColorSpace, true);\n        diff = true;\n        return diff;\n    };\n    /**\n     * `Controls the dash style` and behaviour of each line.\n     * @private\n     */\n    PdfPen.prototype.dashControl = function (pen, saveState, streamWriter) {\n        saveState = true;\n        var lineWidth = this.width;\n        var pattern = this.getPattern();\n        streamWriter.setLineDashPattern(pattern, this.dashOffset * lineWidth);\n        return saveState;\n    };\n    /**\n     * `Gets the pattern` of PdfPen.\n     * @private\n     */\n    PdfPen.prototype.getPattern = function () {\n        var pattern = this.dashPattern;\n        for (var i = 0; i < pattern.length; ++i) {\n            pattern[i] *= this.width;\n        }\n        return pattern;\n    };\n    return PdfPen;\n}());\nexport { PdfPen };\n","/**\n * PdfTransformationMatrix.ts class for EJ2-PDF\n */\nimport { PointF } from './../drawing/pdf-drawing';\nimport { PdfNumber } from './../primitives/pdf-number';\n/**\n * Class for representing Root `transformation matrix`.\n */\nvar PdfTransformationMatrix = /** @class */ (function () {\n    function PdfTransformationMatrix(value) {\n        /**\n         * Value for `angle converting`.\n         * @default 180.0 / Math.PI\n         * @private\n         */\n        this.radDegFactor = 180.0 / Math.PI;\n        if (typeof value === 'undefined') {\n            this.transformationMatrix = new Matrix(1.00, 0.00, 0.00, 1.00, 0.00, 0.00);\n        }\n        else {\n            this.transformationMatrix = new Matrix(1.00, 0.00, 0.00, -1.00, 0.00, 0.00);\n        }\n    }\n    Object.defineProperty(PdfTransformationMatrix.prototype, \"matrix\", {\n        // Properties\n        /**\n         * Gets or sets the `internal matrix object`.\n         * @private\n         */\n        get: function () {\n            return this.transformationMatrix;\n        },\n        set: function (value) {\n            this.transformationMatrix = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /**\n     * `Translates` coordinates by specified coordinates.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.translate = function (offsetX, offsetY) {\n        this.transformationMatrix.translate(offsetX, offsetY);\n    };\n    /**\n     * `Scales` coordinates by specified coordinates.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.scale = function (scaleX, scaleY) {\n        this.transformationMatrix.elements[0] = scaleX;\n        this.transformationMatrix.elements[3] = scaleY;\n    };\n    /**\n     * `Rotates` coordinate system in counterclockwise direction.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.rotate = function (angle) {\n        //Convert from degree to radian \n        angle = (angle * Math.PI) / 180;\n        //Rotation \n        this.transformationMatrix.elements[0] = Math.cos(angle);\n        this.transformationMatrix.elements[1] = Math.sin(angle);\n        this.transformationMatrix.elements[2] = -Math.sin(angle);\n        this.transformationMatrix.elements[3] = Math.cos(angle);\n    };\n    // Overrides\n    /**\n     * Gets `PDF representation`.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.toString = function () {\n        var builder = '';\n        var whitespace = ' ';\n        for (var i = 0, len = this.transformationMatrix.elements.length; i < len; i++) {\n            var temp = this.matrix.elements[i];\n            builder += PdfNumber.floatToString(this.transformationMatrix.elements[i]);\n            builder += whitespace;\n        }\n        return builder;\n    };\n    // Implementation\n    /**\n     * `Multiplies` matrices (changes coordinate system.)\n     * @private\n     */\n    PdfTransformationMatrix.prototype.multiply = function (matrix) {\n        this.transformationMatrix.multiply(matrix.matrix);\n    };\n    /**\n     * Converts `degrees to radians`.\n     * @private\n     */\n    PdfTransformationMatrix.degreesToRadians = function (degreesX) {\n        return this.degRadFactor * degreesX;\n    };\n    /**\n     * Converts `radians to degrees`.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.radiansToDegrees = function (radians) {\n        return this.radDegFactor * radians;\n    };\n    /**\n     * `Clones` this instance of PdfTransformationMatrix.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.clone = function () {\n        return this;\n    };\n    // Constants\n    /**\n     * Value for `angle converting`.\n     * @default Math.PI / 180.0\n     * @private\n     */\n    PdfTransformationMatrix.degRadFactor = Math.PI / 180.0;\n    return PdfTransformationMatrix;\n}());\nexport { PdfTransformationMatrix };\nvar Matrix = /** @class */ (function () {\n    function Matrix(arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (typeof arg1 === 'undefined') {\n            this.metrixElements = [];\n        }\n        else if (typeof arg1 === 'number') {\n            this.metrixElements = [];\n            this.metrixElements.push(arg1);\n            this.metrixElements.push(arg2);\n            this.metrixElements.push(arg3);\n            this.metrixElements.push(arg4);\n            this.metrixElements.push(arg5);\n            this.metrixElements.push(arg6);\n        }\n        else {\n            this.metrixElements = arg1;\n        }\n    }\n    Object.defineProperty(Matrix.prototype, \"elements\", {\n        // Properties\n        /**\n         * Gets the `elements`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"offsetX\", {\n        /**\n         * Gets the off set `X`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements[4];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"offsetY\", {\n        /**\n         * Gets the off set `Y`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements[5];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Translates` coordinates by specified coordinates.\n     * @private\n     */\n    Matrix.prototype.translate = function (offsetX, offsetY) {\n        this.metrixElements[4] = offsetX;\n        this.metrixElements[5] = offsetY;\n    };\n    /**\n     * `Translates` the specified offset X.\n     * @private\n     */\n    Matrix.prototype.transform = function (point) {\n        var x = point.x;\n        var y = point.y;\n        var x2 = x * this.elements[0] + y * this.elements[2] + this.offsetX;\n        var y2 = x * this.elements[1] + y * this.elements[3] + this.offsetY;\n        return new PointF(x2, y2);\n    };\n    /**\n     * `Multiplies matrices` (changes coordinate system.)\n     * @private\n     */\n    Matrix.prototype.multiply = function (matrix) {\n        var tempMatrix = [];\n        tempMatrix.push(this.elements[0] * matrix.elements[0] + this.elements[1] * matrix.elements[2]);\n        tempMatrix[1] = (this.elements[0] * matrix.elements[1] + this.elements[1] * matrix.elements[3]);\n        tempMatrix[2] = (this.elements[2] * matrix.elements[0] + this.elements[3] * matrix.elements[2]);\n        tempMatrix[3] = (this.elements[2] * matrix.elements[1] + this.elements[3] * matrix.elements[3]);\n        tempMatrix[4] = (this.offsetX * matrix.elements[0] + this.offsetY * matrix.elements[2] + matrix.offsetX);\n        tempMatrix[5] = (this.offsetX * matrix.elements[1] + this.offsetY * matrix.elements[3] + matrix.offsetY);\n        for (var i = 0; i < tempMatrix.length; i++) {\n            this.elements[i] = tempMatrix[i];\n        }\n    };\n    // IDisposable Members\n    /**\n     * `Dispose` this instance of PdfTransformationMatrix class.\n     * @private\n     */\n    Matrix.prototype.dispose = function () {\n        this.metrixElements = null;\n    };\n    // ICloneable Members\n    /**\n     * `Clones` this instance of PdfTransformationMatrix class.\n     * @private\n     */\n    Matrix.prototype.clone = function () {\n        var m = new Matrix(this.metrixElements);\n        return m;\n    };\n    return Matrix;\n}());\nexport { Matrix };\n","/**\n * `constants.ts` class for EJ2-PDF\n * @private\n */\nvar ProcedureSets = /** @class */ (function () {\n    function ProcedureSets() {\n        /**\n         * Specifies the `PDF` procedure set.\n         * @private\n         */\n        this.pdf = 'PDF';\n        /**\n         * Specifies the `Text` procedure set.\n         * @private\n         */\n        this.text = 'Text';\n        /**\n         * Specifies the `ImageB` procedure set.\n         * @private\n         */\n        this.imageB = 'ImageB';\n        /**\n         * Specifies the `ImageC` procedure set.\n         * @private\n         */\n        this.imageC = 'ImageC';\n        /**\n         * Specifies the `ImageI` procedure set.\n         * @private\n         */\n        this.imageI = 'ImageI';\n    }\n    return ProcedureSets;\n}());\nexport { ProcedureSets };\n","/**\n * Dictionary class\n * @private\n * @hidden\n */\nvar TemporaryDictionary = /** @class */ (function () {\n    function TemporaryDictionary() {\n        /**\n         * @hidden\n         * @private\n         */\n        this.mKeys = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.mValues = [];\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.size = function () {\n        return this.mKeys.length;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.add = function (key, value) {\n        if (key === undefined || key === null || value === undefined || value === null) {\n            throw new ReferenceError('Provided key or value is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            this.mKeys.push(key);\n            this.mValues.push(value);\n            return 1;\n        }\n        else {\n            throw new RangeError('An item with the same key has already been added.');\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.keys = function () {\n        return this.mKeys;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.values = function () {\n        return this.mValues;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.getValue = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            throw new RangeError('No item with the specified key has been added.');\n        }\n        else {\n            return this.mValues[index];\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.setValue = function (key, value) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            this.mKeys.push(key);\n            this.mValues.push(value);\n        }\n        else {\n            this.mValues[index] = value;\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.remove = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            throw new RangeError('No item with the specified key has been added.');\n        }\n        else {\n            this.mKeys.splice(index, 1);\n            this.mValues.splice(index, 1);\n            return true;\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.containsKey = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.clear = function () {\n        this.mKeys = [];\n        this.mValues = [];\n    };\n    return TemporaryDictionary;\n}());\nexport { TemporaryDictionary };\n","import { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * Represents a simple `transparency`.\n * @private\n */\nvar PdfTransparency = /** @class */ (function () {\n    // Properties\n    // /**\n    //  * Gets the `stroke` operation alpha value.\n    //  * @private\n    //  */\n    // public get stroke() : number {\n    //     let result : number = this.getNumber(this.dictionaryProperties.CA);\n    //     return result;\n    // }\n    // /**\n    //  * Gets the `fill` operation alpha value.\n    //  * @private\n    //  */\n    // public get fill() : number {\n    //     let result : number = this.getNumber(this.dictionaryProperties.ca);\n    //     return result;\n    // }\n    // /**\n    //  * Gets the `blend mode`.\n    //  * @private\n    //  */\n    // public get mode() : PdfBlendMode {\n    //     let result : string = this.getName(this.dictionaryProperties.ca);\n    //     return PdfBlendMode.Normal;\n    // }\n    // Constructors\n    /**\n     * Initializes a new instance of the `Transparency` class.\n     * @private\n     */\n    function PdfTransparency(stroke, fill, mode) {\n        // Fields\n        /**\n         * Internal variable to store `dictionary`.\n         * @default new PdfDictionary()\n         * @private\n         */\n        this.dictionary = new PdfDictionary();\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @default new DictionaryProperties()\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.dictionary.items.setValue(this.dictionaryProperties.CA, new PdfNumber(stroke));\n        this.dictionary.items.setValue(this.dictionaryProperties.ca, new PdfNumber(fill));\n        this.dictionary.items.setValue(this.dictionaryProperties.BM, new PdfName(mode.toString()));\n    }\n    Object.defineProperty(PdfTransparency.prototype, \"element\", {\n        // // Implementation\n        // /**\n        //  * Gets the `number value`.\n        //  * @private\n        //  */\n        // private getNumber(keyName : string) : number {\n        //     let result : number = 0.0;\n        //     let numb : PdfNumber = this.dictionary.items.getValue(keyName) as PdfNumber;\n        //     result = numb.intValue;\n        //     return result;\n        // }\n        // /**\n        //  * Gets the `name value`.\n        //  * @private\n        //  */\n        // private getName(keyName : string) : string {\n        //     let result : string = null;\n        //     let name : PdfName = this.dictionary.items.getValue(keyName) as PdfName;\n        //     result = name.value;\n        //     return result;\n        // }\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTransparency;\n}());\nexport { PdfTransparency };\n","/**\n * Represent a `collection of automatic fields information`.\n * @private\n */\nvar PdfAutomaticFieldInfoCollection = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the 'PdfPageNumberFieldInfoCollection' class.\n     * @private\n     */\n    function PdfAutomaticFieldInfoCollection() {\n        /**\n         * Internal variable to store instance of `pageNumberFields` class.\n         * @private\n         */\n        this.automaticFieldsInformation = [];\n        //\n    }\n    Object.defineProperty(PdfAutomaticFieldInfoCollection.prototype, \"automaticFields\", {\n        /**\n         * Gets the `page number fields collection`.\n         * @private\n         */\n        get: function () {\n            return this.automaticFieldsInformation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /// Adds the specified field info.\n    /**\n     * Add page number field into collection.\n     * @private\n     */\n    PdfAutomaticFieldInfoCollection.prototype.add = function (fieldInfo) {\n        return this.automaticFields.push(fieldInfo);\n    };\n    return PdfAutomaticFieldInfoCollection;\n}());\nexport { PdfAutomaticFieldInfoCollection };\n","/**\n * Represents a base class for all page graphics elements.\n */\nvar PdfGraphicsElement = /** @class */ (function () {\n    // Constructors\n    function PdfGraphicsElement() {\n        //\n    }\n    /**\n     * `Draws` the page number field.\n     * @public\n     */\n    PdfGraphicsElement.prototype.drawHelper = function (graphics, x, y) {\n        var bNeedSave = (x !== 0 || y !== 0);\n        var gState = null;\n        // Translate co-ordinates.\n        if (bNeedSave) {\n            // Save state.\n            gState = graphics.save();\n            graphics.translateTransform(x, y);\n        }\n        this.drawInternal(graphics);\n        if (bNeedSave) {\n            // Restore state.\n            graphics.restore(gState);\n        }\n    };\n    return PdfGraphicsElement;\n}());\nexport { PdfGraphicsElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfAutomaticField.ts class for EJ2-PDF\n */\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfSolidBrush } from './../../graphics/brushes/pdf-solid-brush';\nimport { PdfColor } from './../../graphics/pdf-color';\nimport { PdfDocument } from './../pdf-document';\nimport { PdfGraphicsElement } from './../../graphics/figures/base/graphics-element';\nimport { PdfAutomaticFieldInfo } from './automatic-field-info';\n/**\n * Represents a fields which is calculated before the document saves.\n */\nvar PdfAutomaticField = /** @class */ (function (_super) {\n    __extends(PdfAutomaticField, _super);\n    // Constructors\n    function PdfAutomaticField() {\n        var _this = _super.call(this) || this;\n        // Fields\n        _this.internalBounds = new RectangleF(0, 0, 0, 0);\n        _this.internalTemplateSize = new SizeF(0, 0);\n        return _this;\n    }\n    Object.defineProperty(PdfAutomaticField.prototype, \"bounds\", {\n        // Properties\n        get: function () {\n            return this.internalBounds;\n        },\n        set: function (value) {\n            this.internalBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"size\", {\n        get: function () {\n            return new SizeF(this.bounds.width, this.bounds.height);\n        },\n        set: function (value) {\n            this.bounds.width = value.width;\n            this.bounds.height = value.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"location\", {\n        get: function () {\n            return new PointF(this.bounds.x, this.bounds.y);\n        },\n        set: function (value) {\n            this.bounds.x = value.x;\n            this.bounds.y = value.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"font\", {\n        get: function () {\n            return this.internalFont;\n        },\n        set: function (value) {\n            this.internalFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"brush\", {\n        get: function () {\n            return this.internalBrush;\n        },\n        set: function (value) {\n            this.internalBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"pen\", {\n        get: function () {\n            return this.internalPen;\n        },\n        set: function (value) {\n            this.internalPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"stringFormat\", {\n        get: function () {\n            return this.internalStringFormat;\n        },\n        set: function (value) {\n            this.internalStringFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAutomaticField.prototype.performDrawHelper = function (graphics, location, scalingX, scalingY) {\n        if (this.bounds.height === 0 || this.bounds.width === 0) {\n            var text = this.getValue(graphics);\n            this.internalTemplateSize = this.getFont().measureString(text, this.size, this.stringFormat);\n        }\n    };\n    PdfAutomaticField.prototype.draw = function (arg1, arg2, arg3) {\n        if (typeof arg2 === 'undefined') {\n            var location_1 = new PointF(0, 0);\n            this.draw(arg1, location_1);\n        }\n        else if (arg2 instanceof PointF) {\n            this.draw(arg1, arg2.x, arg2.y);\n        }\n        else {\n            this.drawHelper(arg1, arg2, arg3);\n            var info = new PdfAutomaticFieldInfo(this, new PointF(arg2, arg3));\n            arg1.automaticFields.add(info);\n        }\n    };\n    PdfAutomaticField.prototype.getSize = function () {\n        if (this.bounds.height === 0 || this.bounds.width === 0) {\n            return this.internalTemplateSize;\n        }\n        else {\n            return this.size;\n        }\n    };\n    PdfAutomaticField.prototype.drawInternal = function (graphics) {\n        //\n    };\n    /* tslint:disable */\n    PdfAutomaticField.prototype.getBrush = function () {\n        return (typeof this.internalBrush === 'undefined' || this.internalBrush == null) ? new PdfSolidBrush(new PdfColor(0, 0, 0)) : this.internalBrush;\n    };\n    PdfAutomaticField.prototype.getFont = function () {\n        return (typeof this.internalFont === 'undefined' || this.internalFont == null) ? PdfDocument.defaultFont : this.internalFont;\n    };\n    /* tslint:enable */\n    PdfAutomaticField.prototype.getPageFromGraphics = function (graphics) {\n        if (typeof graphics.page !== 'undefined' && graphics.page !== null) {\n            var page = graphics.page;\n            return page;\n        }\n        else {\n            var page = graphics.currentPage;\n            return page;\n        }\n    };\n    return PdfAutomaticField;\n}(PdfGraphicsElement));\nexport { PdfAutomaticField };\n","/**\n * PdfAutomaticFieldInfo.ts class for EJ2-PDF\n * @private\n */\nimport { PointF } from './../../drawing/pdf-drawing';\nimport { PdfAutomaticField } from './automatic-field';\n/**\n * Represents information about the automatic field.\n * @private\n */\nvar PdfAutomaticFieldInfo = /** @class */ (function () {\n    function PdfAutomaticFieldInfo(field, location, scaleX, scaleY) {\n        // Fields\n        /**\n         * Internal variable to store location of the field.\n         * @private\n         */\n        this.pageNumberFieldLocation = new PointF();\n        /**\n         * Internal variable to store field.\n         * @private\n         */\n        this.pageNumberField = null;\n        /**\n         * Internal variable to store x scaling factor.\n         * @private\n         */\n        this.scaleX = 1;\n        /**\n         * Internal variable to store y scaling factor.\n         * @private\n         */\n        this.scaleY = 1;\n        if (typeof location === 'undefined' && field instanceof PdfAutomaticFieldInfo) {\n            this.pageNumberField = field.field;\n            this.pageNumberFieldLocation = field.location;\n            this.scaleX = field.scalingX;\n            this.scaleY = field.scalingY;\n        }\n        else if (typeof scaleX === 'undefined' && location instanceof PointF && field instanceof PdfAutomaticField) {\n            this.pageNumberField = field;\n            this.pageNumberFieldLocation = location;\n        }\n        else {\n            this.pageNumberField = field;\n            this.pageNumberFieldLocation = location;\n            this.scaleX = scaleX;\n            this.scaleY = scaleY;\n        }\n    }\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"location\", {\n        /* tslint:enable */\n        // Properties\n        /**\n         * Gets or sets the location.\n         * @private\n         */\n        get: function () {\n            return this.pageNumberFieldLocation;\n        },\n        set: function (value) {\n            this.pageNumberFieldLocation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"field\", {\n        /**\n         * Gets or sets the field.\n         * @private\n         */\n        get: function () {\n            return this.pageNumberField;\n        },\n        set: function (value) {\n            this.pageNumberField = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"scalingX\", {\n        /**\n         * Gets or sets the scaling X factor.\n         * @private\n         */\n        get: function () {\n            return this.scaleX;\n        },\n        set: function (value) {\n            this.scaleX = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"scalingY\", {\n        /**\n         * Gets or sets the scaling Y factor.\n         * @private\n         */\n        get: function () {\n            return this.scaleY;\n        },\n        set: function (value) {\n            this.scaleY = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAutomaticFieldInfo;\n}());\nexport { PdfAutomaticFieldInfo };\n","/**\n * ByteArray class\n * Used to keep information about image stream as byte array.\n * @private\n */\nvar ByteArray = /** @class */ (function () {\n    /**\n     * Initialize the new instance for `byte-array` class\n     * @hidden\n     * @private\n     */\n    function ByteArray(length) {\n        /**\n         * Current stream `position`.\n         * @default 0\n         * @private\n         */\n        this.mPosition = 0;\n        this.buffer = new Uint8Array(length);\n        this.dataView = new DataView(this.buffer.buffer);\n    }\n    Object.defineProperty(ByteArray.prototype, \"position\", {\n        /**\n         * Gets and Sets a current `position` of byte array.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mPosition;\n        },\n        set: function (value) {\n            this.mPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Read` from current stream position.\n     * @default 0\n     * @hidden\n     * @private\n     */\n    ByteArray.prototype.read = function (buffer, offset, count) {\n        for (var index = offset; index < count; index++) {\n            var position = this.position;\n            buffer.buffer[index] = this.readByte(position);\n            this.position++;\n        }\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.getBuffer = function (index) {\n        return this.buffer[index];\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.writeFromBase64String = function (base64) {\n        var arr = this.encodedString(base64);\n        this.buffer = arr;\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.encodedString = function (input) {\n        var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        var chr1;\n        var chr2;\n        var chr3;\n        var enc1;\n        var enc2;\n        var enc3;\n        var enc4;\n        var i = 0;\n        var resultIndex = 0;\n        var dataUrlPrefix = 'data:';\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n        var totalLength = input.length * 3 / 4;\n        if (input.charAt(input.length - 1) === keyStr.charAt(64)) {\n            totalLength--;\n        }\n        var output = new Uint8Array(totalLength | 0);\n        while (i < input.length) {\n            enc1 = keyStr.indexOf(input.charAt(i++));\n            enc2 = keyStr.indexOf(input.charAt(i++));\n            enc3 = keyStr.indexOf(input.charAt(i++));\n            enc4 = keyStr.indexOf(input.charAt(i++));\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n            output[resultIndex++] = chr1;\n            output[resultIndex++] = chr2;\n            output[resultIndex++] = chr3;\n        }\n        return output;\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.readByte = function (offset) {\n        return (this.buffer[offset]);\n    };\n    Object.defineProperty(ByteArray.prototype, \"internalBuffer\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ByteArray.prototype, \"count\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this.buffer.byteLength;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * 'readNextTwoBytes' stream\n     * @hidden\n     * @private\n     */\n    ByteArray.prototype.readNextTwoBytes = function (stream) {\n        var data = stream.readByte(this.position);\n        this.position++;\n        data <<= 8;\n        data |= stream.readByte(this.position);\n        this.position++;\n        return data;\n    };\n    return ByteArray;\n}());\nexport { ByteArray };\n","/**\n * `PdfBoolean` class is used to perform boolean related primitive operations.\n * @private\n */\nvar PdfBoolean = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfBoolean` class.\n     * @private\n     */\n    function PdfBoolean(value) {\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.currentPosition = -1;\n        this.value = value;\n    }\n    Object.defineProperty(PdfBoolean.prototype, \"status\", {\n        //Properties\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.objectStatus;\n        },\n        set: function (value) {\n            this.objectStatus = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.saving;\n        },\n        set: function (value) {\n            this.saving = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index;\n        },\n        set: function (value) {\n            this.index = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.currentPosition;\n        },\n        set: function (value) {\n            this.currentPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var rValue = null;\n            return rValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfBoolean.prototype.save = function (writer) {\n        writer.write(this.boolToStr(this.value));\n    };\n    /**\n     * Creates a `copy of PdfBoolean`.\n     * @private\n     */\n    PdfBoolean.prototype.clone = function (crossTable) {\n        var newNumber = new PdfBoolean(this.value);\n        return newNumber;\n    };\n    // Implementation\n    /**\n     * Converts `boolean to string` - 0/1 'true'/'false'.\n     * @private\n     */\n    PdfBoolean.prototype.boolToStr = function (value) {\n        return value ? 'true' : 'false';\n    };\n    return PdfBoolean;\n}());\nexport { PdfBoolean };\n","/**\n * ImageDecoder class\n */\nimport { ByteArray } from './byte-array';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfBoolean } from './../../primitives/pdf-boolean';\nimport { PdfDictionary } from './../../primitives/pdf-dictionary';\n/**\n * Specifies the image `format`.\n * @private\n */\nexport var ImageFormat;\n(function (ImageFormat) {\n    /**\n     * Specifies the type of `Unknown`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * Specifies the type of `Bmp`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Bmp\"] = 1] = \"Bmp\";\n    /**\n     * Specifies the type of `Emf`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Emf\"] = 2] = \"Emf\";\n    /**\n     * Specifies the type of `Gif`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Gif\"] = 3] = \"Gif\";\n    /**\n     * Specifies the type of `Jpeg`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Jpeg\"] = 4] = \"Jpeg\";\n    /**\n     * Specifies the type of `Png`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Png\"] = 5] = \"Png\";\n    /**\n     * Specifies the type of `Wmf`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Wmf\"] = 6] = \"Wmf\";\n    /**\n     * Specifies the type of `Icon`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Icon\"] = 7] = \"Icon\";\n})(ImageFormat || (ImageFormat = {}));\n/**\n * `Decode the image stream`.\n * @private\n */\nvar ImageDecoder = /** @class */ (function () {\n    /**\n     * Initialize the new instance for `image-decoder` class.\n     * @private\n     */\n    function ImageDecoder(stream) {\n        /**\n         * Start of file markers.\n         * @hidden\n         * @private\n         */\n        this.sof1Marker = 0x00C1;\n        this.sof2Marker = 0x00C2;\n        this.sof3Marker = 0x00C3;\n        this.sof5Marker = 0x00C5;\n        this.sof6Marker = 0x00C6;\n        this.sof7Marker = 0x00C7;\n        this.sof9Marker = 0x00C9;\n        this.sof10Marker = 0x00CA;\n        this.sof11Marker = 0x00CB;\n        this.sof13Marker = 0x00CD;\n        this.sof14Marker = 0x00CE;\n        this.sof15Marker = 0x00CF;\n        /**\n         * Specifies `format` of image.\n         * @hidden\n         * @private\n         */\n        this.mFormat = ImageFormat.Unknown;\n        /**\n         * `Bits per component`.\n         * @default 8\n         * @hidden\n         * @private\n         */\n        this.mbitsPerComponent = 8;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.mStream = stream;\n        this.initialize();\n    }\n    Object.defineProperty(ImageDecoder.prototype, \"height\", {\n        /**\n         * Gets the `height` of image.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"width\", {\n        /**\n         * Gets the `width` of image.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"bitsPerComponent\", {\n        /**\n         * Gets `bits per component`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mbitsPerComponent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"size\", {\n        /**\n         * Gets the `size` of an image data.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"imageData\", {\n        /**\n         * Gets the value of an `image data`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"imageDataAsNumberArray\", {\n        /**\n         * Gets the value of an `image data as number array`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData.internalBuffer.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Initialize` image data and image stream.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.initialize = function () {\n        if (this.mFormat === ImageFormat.Unknown && this.checkIfJpeg()) {\n            this.mFormat = ImageFormat.Jpeg;\n            this.parseJpegImage();\n        }\n        this.reset();\n        this.mImageData = new ByteArray(this.mStream.count);\n        this.mStream.read(this.mImageData, 0, this.mImageData.count);\n    };\n    /**\n     * `Reset` stream position into 0.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.reset = function () {\n        this.mStream.position = 0;\n    };\n    /**\n     * `Parse` Jpeg image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.parseJpegImage = function () {\n        this.reset();\n        var imgData = new ByteArray(this.mStream.count);\n        this.mStream.read(imgData, 0, imgData.count);\n        var i = 4;\n        var isLengthExceed = false;\n        /* tslint:disable */\n        var length = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n        while (i < imgData.count) {\n            i += length;\n            if (i < imgData.count) {\n                if (imgData.getBuffer(i + 1) === 192) {\n                    this.mHeight = imgData.getBuffer(i + 5) * 256 + imgData.getBuffer(i + 6);\n                    this.mWidth = imgData.getBuffer(i + 7) * 256 + imgData.getBuffer(i + 8);\n                    return;\n                }\n                else {\n                    i += 2;\n                    length = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n                }\n            }\n            else {\n                isLengthExceed = true;\n                break;\n            }\n        }\n        if (isLengthExceed) {\n            this.mStream.position = 0;\n            this.skip(this.mStream, 2);\n            this.readExceededJPGImage(this.mStream);\n        }\n        /* tslint:enable */\n    };\n    Object.defineProperty(ImageDecoder.prototype, \"format\", {\n        /**\n         * Gets the image `format`.\n         * @private\n         * @hidden\n         */\n        get: function () {\n            return this.mFormat;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Checks if JPG`.\n     * @private\n     * @hidden\n     */\n    ImageDecoder.prototype.checkIfJpeg = function () {\n        this.reset();\n        for (var i = 0; i < ImageDecoder.mJpegHeader.length; i++) {\n            if (ImageDecoder.mJpegHeader[i] !== this.mStream.readByte(i)) {\n                return false;\n            }\n            this.mStream.position++;\n        }\n        return true;\n    };\n    /**\n     * Return image `dictionary`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getImageDictionary = function () {\n        if (this.mFormat === ImageFormat.Jpeg) {\n            var tempArrayBuffer = this.imageData.internalBuffer.length;\n            this.imageStream = new PdfStream();\n            this.imageStream.isImage = true;\n            var tempString = '';\n            var decodedString = '';\n            for (var i = 0; i < this.imageDataAsNumberArray.byteLength; i++) {\n                tempString += String.fromCharCode(null, this.mStream.readByte(i));\n            }\n            for (var i = 0; i < tempString.length; i++) {\n                if (i % 2 !== 0) {\n                    decodedString += tempString[i];\n                }\n            }\n            this.imageStream.data = [decodedString];\n            this.imageStream.compress = false;\n            this.imageStream.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.xObject));\n            this.imageStream.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.image));\n            this.imageStream.items.setValue(this.dictionaryProperties.width, new PdfNumber(this.width));\n            this.imageStream.items.setValue(this.dictionaryProperties.height, new PdfNumber(this.height));\n            this.imageStream.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n            this.imageStream.items.setValue(this.dictionaryProperties.filter, new PdfName(this.dictionaryProperties.dctdecode));\n            this.imageStream.items.setValue(this.dictionaryProperties.colorSpace, new PdfName(this.getColorSpace()));\n            this.imageStream.items.setValue(this.dictionaryProperties.decodeParms, this.getDecodeParams());\n            return this.imageStream;\n        }\n        else {\n            return this.imageStream;\n        }\n    };\n    /**\n     * Return `colorSpace` of an image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getColorSpace = function () {\n        return this.dictionaryProperties.deviceRgb;\n    };\n    /**\n     * Return `decode parameters` of an image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getDecodeParams = function () {\n        var decodeParams = new PdfDictionary();\n        decodeParams.items.setValue(this.dictionaryProperties.columns, new PdfNumber(this.width));\n        decodeParams.items.setValue(this.dictionaryProperties.blackIs1, new PdfBoolean(true));\n        decodeParams.items.setValue(this.dictionaryProperties.k, new PdfNumber(-1));\n        decodeParams.items.setValue(this.dictionaryProperties.predictor, new PdfNumber(15));\n        decodeParams.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n        return decodeParams;\n    };\n    /**\n     * 'readExceededJPGImage' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.readExceededJPGImage = function (stream) {\n        this.mStream = stream;\n        var isContinueReading = true;\n        while (isContinueReading) {\n            var marker = this.getMarker(stream);\n            switch (marker) {\n                case this.sof1Marker:\n                case this.sof2Marker:\n                case this.sof3Marker:\n                case this.sof5Marker:\n                case this.sof6Marker:\n                case this.sof7Marker:\n                case this.sof9Marker:\n                case this.sof10Marker:\n                case this.sof11Marker:\n                case this.sof13Marker:\n                case this.sof14Marker:\n                case this.sof15Marker:\n                    stream.position += 3;\n                    this.mHeight = this.mStream.readNextTwoBytes(stream);\n                    this.mWidth = this.mStream.readNextTwoBytes(stream);\n                    isContinueReading = false;\n                    break;\n                default:\n                    this.skipStream(stream);\n                    break;\n            }\n        }\n    };\n    /**\n     * 'skip' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.skip = function (stream, noOfBytes) {\n        this.mStream = stream;\n        var temp = new ByteArray(noOfBytes);\n        this.mStream.read(temp, 0, temp.count);\n    };\n    /**\n     * 'getMarker' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getMarker = function (stream) {\n        var skippedByte = 0;\n        var marker = 32;\n        marker = stream.readByte(this.mStream.position);\n        stream.position++;\n        while (marker !== 255) {\n            skippedByte++;\n            marker = stream.readByte(this.mStream.position);\n            stream.position++;\n        }\n        do {\n            marker = stream.readByte(this.mStream.position);\n            stream.position++;\n        } while (marker === 255);\n        return marker;\n    };\n    /**\n     * 'skipStream' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.skipStream = function (stream) {\n        var markerLength = this.mStream.readNextTwoBytes(stream) - 2;\n        if (markerLength > 0) {\n            stream.position += markerLength;\n        }\n    };\n    /**\n     * Number array for `png header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.mPngHeader = [137, 80, 78, 71, 13, 10, 26, 10];\n    /**\n     * Number Array for `jpeg header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.mJpegHeader = [255, 216];\n    /**\n     * Number array for `gif header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.GIF_HEADER = 'G,I,F,8';\n    /**\n     * Number array for `bmp header.`\n     * @hidden\n     * @private\n     */\n    ImageDecoder.BMP_HEADER = 'B,M';\n    return ImageDecoder;\n}());\nexport { ImageDecoder };\n","/**\n * Used to perform `convertion between pixels and points`.\n * @private\n */\nvar PdfUnitConverter = /** @class */ (function () {\n    //constructors\n    /**\n     * Initializes a new instance of the `UnitConvertor` class with DPI value.\n     * @private\n     */\n    function PdfUnitConverter(dpi) {\n        this.updateProportionsHelper(dpi);\n    }\n    /**\n     * `Converts` the value, from one graphics unit to another graphics unit.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertUnits = function (value, from, to) {\n        return this.convertFromPixels(this.convertToPixels(value, from), to);\n    };\n    /**\n     * Converts the value `to pixel` from specified graphics unit.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertToPixels = function (value, from) {\n        var index = from;\n        var result = (value * this.proportions[index]);\n        return result;\n    };\n    /**\n     * Converts value, to specified graphics unit `from Pixel`.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertFromPixels = function (value, to) {\n        var index = to;\n        var result = (value / this.proportions[index]);\n        return result;\n    };\n    /**\n     * `Update proportions` matrix according to Graphics settings.\n     * @private\n     */\n    PdfUnitConverter.prototype.updateProportionsHelper = function (pixelPerInch) {\n        this.proportions = [\n            pixelPerInch / 2.54,\n            pixelPerInch / 6.0,\n            1,\n            pixelPerInch / 72.0,\n            pixelPerInch,\n            pixelPerInch / 300.0,\n            pixelPerInch / 25.4 // Millimeter\n        ];\n    };\n    //Fields\n    /**\n     * Indicates default `horizontal resolution`.\n     * @default 96\n     * @private\n     */\n    PdfUnitConverter.horizontalResolution = 96;\n    /**\n     * Indicates default `vertical resolution`.\n     * @default 96\n     * @private\n     */\n    PdfUnitConverter.verticalResolution = 96;\n    return PdfUnitConverter;\n}());\nexport { PdfUnitConverter };\n","import { SizeF } from './../../drawing/pdf-drawing';\nimport { PdfGraphicsUnit } from './../enum';\nimport { PdfUnitConverter } from './../unit-convertor';\n/**\n * `PdfImage` class represents the base class for images and provides functionality for the 'PdfBitmap' class.\n * @private\n */\nvar PdfImage = /** @class */ (function () {\n    function PdfImage() {\n    }\n    Object.defineProperty(PdfImage.prototype, \"width\", {\n        /**\n         * Gets and Sets the `width` of an image.\n         * @private\n         */\n        get: function () {\n            return this.imageWidth;\n        },\n        set: function (value) {\n            this.imageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"height\", {\n        /**\n         * Gets and Sets the `height` of an image.\n         * @private\n         */\n        get: function () {\n            return this.imageHeight;\n        },\n        set: function (value) {\n            this.imageHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"size\", {\n        /**\n         * Gets or sets the size of the image.\n         * @private\n         */\n        set: function (value) {\n            this.width = value.width;\n            this.height = value.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"physicalDimension\", {\n        /**\n         * Gets the `physical dimension` of an image.\n         * @private\n         */\n        get: function () {\n            this.imagePhysicalDimension = this.getPointSize(this.width, this.height, this.horizontalResolution, this.verticalResolution);\n            return new SizeF(this.width, this.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"element\", {\n        // /**\n        //  * Gets the `image stream as string`.\n        //  * @private\n        //  */\n        // public static fromString(string : string) : PdfImage {\n        //     let image : PdfImage = new PdfBitmap(string);\n        //     return image;\n        // }\n        /**\n         * Gets the `element` image stream.\n         * @private\n         */\n        get: function () {\n            return this.imageStream;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfImage.prototype.getPointSize = function (width, height, horizontalResolution, verticalResolution) {\n        if (typeof horizontalResolution === 'undefined') {\n            var dpiX = PdfUnitConverter.horizontalResolution;\n            var dpiY = PdfUnitConverter.verticalResolution;\n            var size = this.getPointSize(width, height, dpiX, dpiY);\n            return size;\n        }\n        else {\n            var ucX = new PdfUnitConverter(horizontalResolution);\n            var ucY = new PdfUnitConverter(verticalResolution);\n            var ptWidth = ucX.convertUnits(width, PdfGraphicsUnit.Pixel, PdfGraphicsUnit.Point);\n            var ptHeight = ucY.convertUnits(height, PdfGraphicsUnit.Pixel, PdfGraphicsUnit.Point);\n            var size = new SizeF(ptWidth, ptHeight);\n            return size;\n        }\n    };\n    return PdfImage;\n}());\nexport { PdfImage };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfBitmap.ts class for EJ2-PDF\n */\nimport { ImageDecoder } from './../../graphics/images/image-decoder';\nimport { ByteArray } from './../../graphics/images/byte-array';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfImage } from './pdf-image';\n/**\n * The 'PdfBitmap' contains methods and properties to handle the Bitmap images.\n * ```typescript\n * // create a new PDF document.\n * let document : PdfDocument = new PdfDocument();\n * // add a page to the document.\n * let page1 : PdfPage = document.pages.add();\n * // base64 string of an image\n * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\n * // load the image from the base64 string of original image.\n * let image : PdfBitmap = new PdfBitmap(imageString);\n * // draw the image\n * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBitmap = /** @class */ (function (_super) {\n    __extends(PdfBitmap, _super);\n    /**\n     * Create an instance for `PdfBitmap` class.\n     * @param encodedString Base64 string of an image.\n     * ```typescript\n     * // create a new PDF document.\n     * let document : PdfDocument = new PdfDocument();\n     * // add a page to the document.\n     * let page1 : PdfPage = document.pages.add();\n     * // base64 string of an image\n     * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\n     * //\n     * // load the image from the base64 string of original image.\n     * let image : PdfBitmap = new PdfBitmap(imageString);\n     * //\n     * // draw the image\n     * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfBitmap(encodedString) {\n        var _this = _super.call(this) || this;\n        //Fields\n        /**\n         * Specifies the `status` of an image.\n         * @default true.\n         * @hidden\n         * @private\n         */\n        _this.imageStatus = true;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @hidden\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        _this.loadImage(encodedString);\n        return _this;\n    }\n    /**\n     * `Load image`.\n     * @hidden\n     * @private\n     */\n    PdfBitmap.prototype.loadImage = function (encodedString) {\n        var task = this.initializeAsync(encodedString);\n    };\n    /**\n     * `Initialize` image parameters.\n     * @private\n     */\n    PdfBitmap.prototype.initializeAsync = function (encodedString) {\n        var byteArray = new ByteArray(encodedString.length);\n        byteArray.writeFromBase64String(encodedString);\n        this.decoder = new ImageDecoder(byteArray);\n        this.height = this.decoder.height;\n        this.width = this.decoder.width;\n        // FrameCount = BitmapImageDecoder.FrameCount;\n        this.bitsPerComponent = this.decoder.bitsPerComponent;\n    };\n    /**\n     * `Saves` the image into stream.\n     * @private\n     */\n    PdfBitmap.prototype.save = function () {\n        this.imageStatus = true;\n        this.imageStream = this.decoder.getImageDictionary();\n    };\n    return PdfBitmap;\n}(PdfImage));\nexport { PdfBitmap };\n","/**\n * TtfTableInfo.ts class for EJ2-PDF\n */\nvar TtfTableInfo = /** @class */ (function () {\n    function TtfTableInfo() {\n    }\n    Object.defineProperty(TtfTableInfo.prototype, \"empty\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this table is empty.\n         * @private\n         */\n        get: function () {\n            var empty = (this.offset === this.length && this.length === this.checksum && this.checksum === 0);\n            return empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TtfTableInfo;\n}());\nexport { TtfTableInfo };\n","var TtfNameTable = /** @class */ (function () {\n    function TtfNameTable() {\n    }\n    return TtfNameTable;\n}());\nexport { TtfNameTable };\n","/**\n * TtfNameRecord.ts class for EJ2-PDF\n */\nvar TtfNameRecord = /** @class */ (function () {\n    function TtfNameRecord() {\n    }\n    return TtfNameRecord;\n}());\nexport { TtfNameRecord };\n","/**\n * TtfHeadTable.ts class for EJ2-PDF\n */\nvar TtfHeadTable = /** @class */ (function () {\n    function TtfHeadTable() {\n    }\n    return TtfHeadTable;\n}());\nexport { TtfHeadTable };\n","var TtfMetrics = /** @class */ (function () {\n    function TtfMetrics() {\n    }\n    Object.defineProperty(TtfMetrics.prototype, \"isItalic\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this instance is italic.\n         */\n        get: function () {\n            return ((this.macStyle & 2) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfMetrics.prototype, \"isBold\", {\n        /**\n         * Gets a value indicating whether this instance is bold.\n         */\n        get: function () {\n            return ((this.macStyle & 1) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TtfMetrics;\n}());\nexport { TtfMetrics };\n","/**\n * TtfHorizontalHeaderTable.ts class for EJ2-PDF\n */\nvar TtfHorizontalHeaderTable = /** @class */ (function () {\n    function TtfHorizontalHeaderTable() {\n    }\n    return TtfHorizontalHeaderTable;\n}());\nexport { TtfHorizontalHeaderTable };\n","/**\n * TtfOS2Table.ts class for EJ2-PDF\n * The OS/2 table consists of a set of metrics that are required by Windows and OS/2.\n */\nvar TtfOS2Table = /** @class */ (function () {\n    function TtfOS2Table() {\n    }\n    return TtfOS2Table;\n}());\nexport { TtfOS2Table };\n","/**\n * TtfPostTable.ts class for EJ2-PDF\n */\nvar TtfPostTable = /** @class */ (function () {\n    function TtfPostTable() {\n    }\n    return TtfPostTable;\n}());\nexport { TtfPostTable };\n","/**\n * TtfLongHorMetric.ts class for EJ2-PDF\n */\nvar TtfLongHorMetric = /** @class */ (function () {\n    function TtfLongHorMetric() {\n    }\n    return TtfLongHorMetric;\n}());\nexport { TtfLongHorMetric };\n","/**\n * TtfCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfCmapSubTable = /** @class */ (function () {\n    function TtfCmapSubTable() {\n    }\n    return TtfCmapSubTable;\n}());\nexport { TtfCmapSubTable };\n","/**\n * TtfCmapTable.ts class for EJ2-PDF\n */\nvar TtfCmapTable = /** @class */ (function () {\n    function TtfCmapTable() {\n    }\n    return TtfCmapTable;\n}());\nexport { TtfCmapTable };\n","/**\n * TtfGlyphInfo.ts class for EJ2-PDF\n */\nvar TtfGlyphInfo = /** @class */ (function () {\n    function TtfGlyphInfo() {\n    }\n    Object.defineProperty(TtfGlyphInfo.prototype, \"empty\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this TtfGlyphInfo is empty.\n         */\n        get: function () {\n            var empty = (this.index === this.width && this.width === this.charCode && this.charCode === 0);\n            return empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //IComparable implementation\n    /**\n     * Compares two WidthDescriptor objects.\n     */\n    TtfGlyphInfo.prototype.compareTo = function (obj) {\n        var glyph = obj;\n        return this.index - glyph.index;\n    };\n    return TtfGlyphInfo;\n}());\nexport { TtfGlyphInfo };\n","/**\n * TtfLocaTable.ts class for EJ2-PDF\n */\nvar TtfLocaTable = /** @class */ (function () {\n    function TtfLocaTable() {\n    }\n    return TtfLocaTable;\n}());\nexport { TtfLocaTable };\n","/**\n * TtfAppleCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfAppleCmapSubTable = /** @class */ (function () {\n    function TtfAppleCmapSubTable() {\n    }\n    return TtfAppleCmapSubTable;\n}());\nexport { TtfAppleCmapSubTable };\n","/**\n * TtfMicrosoftCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfMicrosoftCmapSubTable = /** @class */ (function () {\n    function TtfMicrosoftCmapSubTable() {\n    }\n    return TtfMicrosoftCmapSubTable;\n}());\nexport { TtfMicrosoftCmapSubTable };\n","/**\n * TtfTrimmedCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfTrimmedCmapSubTable = /** @class */ (function () {\n    function TtfTrimmedCmapSubTable() {\n    }\n    return TtfTrimmedCmapSubTable;\n}());\nexport { TtfTrimmedCmapSubTable };\n","/**\n * TtfLocaTable.ts class for EJ2-PDF\n */\nvar TtfGlyphHeader = /** @class */ (function () {\n    function TtfGlyphHeader() {\n    }\n    return TtfGlyphHeader;\n}());\nexport { TtfGlyphHeader };\n","/**\n * Writes data in BigEndian order.\n */\nvar BigEndianWriter = /** @class */ (function () {\n    //Constructors\n    /**\n     * Creates a new writer.\n     */\n    function BigEndianWriter(capacity) {\n        //Constants\n        /**\n         * Size of Int32 type.\n         */\n        this.int32Size = 4;\n        /**\n         * Size of Int16 type.\n         */\n        this.int16Size = 2;\n        /**\n         * Size of long type.\n         */\n        this.int64Size = 8;\n        this.bufferLength = capacity;\n        this.buffer = [];\n    }\n    Object.defineProperty(BigEndianWriter.prototype, \"data\", {\n        //Properties\n        /**\n         * Gets data written to the writer.\n         */\n        get: function () {\n            if (this.buffer.length < this.bufferLength) {\n                var length_1 = this.bufferLength - this.buffer.length;\n                for (var i = 0; i < length_1; i++) {\n                    this.buffer.push(0);\n                }\n            }\n            return this.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BigEndianWriter.prototype, \"position\", {\n        /// <summary>\n        /// Gets position of the internal buffer.\n        /// </summary>\n        get: function () {\n            if (this.internalPosition === undefined || this.internalPosition === null) {\n                this.internalPosition = 0;\n            }\n            return this.internalPosition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Writes short value.\n     */\n    BigEndianWriter.prototype.writeShort = function (value) {\n        var bytes = [((value & 0x0000ff00) >> 8), value & 0x000000ff];\n        this.flush(bytes);\n    };\n    /**\n     * Writes int value.\n     */\n    BigEndianWriter.prototype.writeInt = function (value) {\n        var i1 = (value & 0xff000000) >> 24;\n        i1 = i1 < 0 ? 256 + i1 : i1;\n        var i2 = (value & 0x00ff0000) >> 16;\n        i2 = i2 < 0 ? 256 + i2 : i2;\n        var i3 = (value & 0x0000ff00) >> 8;\n        i3 = i3 < 0 ? 256 + i3 : i3;\n        var i4 = value & 0x000000ff;\n        i4 = i4 < 0 ? 256 + i4 : i4;\n        var bytes = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this.flush(bytes);\n    };\n    /**\n     * Writes u int value.\n     */\n    BigEndianWriter.prototype.writeUInt = function (value) {\n        var buff = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this.flush(buff);\n    };\n    /**\n     * Writes string value.\n     */\n    BigEndianWriter.prototype.writeString = function (value) {\n        if (value == null) {\n            throw new Error('Argument Null Exception : value');\n        }\n        var bytes = [];\n        for (var i = 0; i < value.length; i++) {\n            bytes.push(value.charCodeAt(i));\n        }\n        this.flush(bytes);\n    };\n    /**\n     * Writes byte[] value.\n     */\n    BigEndianWriter.prototype.writeBytes = function (value) {\n        this.flush(value);\n    };\n    // //Implementation\n    BigEndianWriter.prototype.flush = function (buff) {\n        if (buff === null) {\n            throw new Error('Argument Null Exception : buff');\n        }\n        var position = this.position;\n        for (var i = 0; i < buff.length; i++) {\n            this.buffer[position] = buff[i];\n            position++;\n        }\n        this.internalPosition += buff.length;\n    };\n    return BigEndianWriter;\n}());\nexport { BigEndianWriter };\n","/**\n * TtfReader.ts class for EJ2-PDF\n */\nimport { TtfTableInfo } from './ttf-table-info';\nimport { Dictionary } from './../../collections/dictionary';\nimport { TtfNameTable } from './ttf-name-table';\nimport { TtfNameRecord } from './ttf-name-record';\nimport { TtfHeadTable } from './ttf-head-table';\nimport { TtfMetrics } from './ttf-metrics';\nimport { TtfHorizontalHeaderTable } from './ttf-horizontal-header-table';\nimport { TtfOS2Table } from './ttf-OS2-Table';\nimport { TtfPostTable } from './ttf-post-table';\nimport { TtfLongHorMetric } from './ttf-long-hor-metric';\nimport { TtfCmapSubTable } from './ttf-cmap-sub-table';\nimport { TtfCmapTable } from './ttf-cmap-table';\nimport { TtfGlyphInfo } from './ttf-glyph-info';\nimport { TtfLocaTable } from './ttf-loca-table';\nimport { TtfAppleCmapSubTable } from './ttf-apple-cmap-sub-table';\nimport { TtfMicrosoftCmapSubTable } from './ttf-microsoft-cmap-sub-table';\nimport { TtfTrimmedCmapSubTable } from './ttf-trimmed-cmap-sub-table';\nimport { TtfGlyphHeader } from './ttf-glyph-header';\nimport { Rectangle } from './../../drawing/pdf-drawing';\nimport { StringTokenizer } from './string-tokenizer';\nimport { TtfCmapFormat, TtfCmapEncoding, TtfPlatformID } from './enum';\nimport { TtfMicrosoftEncodingID, TtfMacintoshEncodingID, TtfCompositeGlyphFlags } from './enum';\nimport { BigEndianWriter } from './../../input-output/big-endian-writer';\nvar TtfReader = /** @class */ (function () {\n    //Constructors\n    function TtfReader(fontData) {\n        this.int32Size = 4;\n        this.isTtcFont = false;\n        this.isMacTtf = false;\n        this.metricsName = '';\n        this.isMacTTF = false;\n        this.missedGlyphs = 0;\n        this.tableNames = ['cvt ', 'fpgm', 'glyf', 'head', 'hhea', 'hmtx', 'loca', 'maxp', 'prep'];\n        this.entrySelectors = [0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4];\n        this.fontData = fontData;\n        this.initialize();\n    }\n    Object.defineProperty(TtfReader.prototype, \"macintosh\", {\n        //Properties\n        /**\n         * Gets glyphs for Macintosh or Symbol fonts (char - key, glyph - value).\n         */\n        get: function () {\n            if (this.macintoshDictionary === null || this.macintoshDictionary === undefined) {\n                this.macintoshDictionary = new Dictionary();\n            }\n            return this.macintoshDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"microsoft\", {\n        /**\n         * Gets glyphs for Microsoft or Symbol fonts (char - key, glyph - value).\n         */\n        get: function () {\n            if (this.microsoftDictionary === null || this.microsoftDictionary === undefined) {\n                this.microsoftDictionary = new Dictionary();\n            }\n            return this.microsoftDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"macintoshGlyphs\", {\n        /**\n         * Gets glyphs for Macintosh or Symbol fonts (glyph index - key, glyph - value).\n         */\n        get: function () {\n            if (this.internalMacintoshGlyphs === null || this.internalMacintoshGlyphs === undefined) {\n                this.internalMacintoshGlyphs = new Dictionary();\n            }\n            return this.internalMacintoshGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"microsoftGlyphs\", {\n        /**\n         * Gets glyphs for Microsoft Unicode fonts (glyph index - key, glyph - value).\n         */\n        get: function () {\n            if (this.internalMicrosoftGlyphs === null || this.internalMicrosoftGlyphs === undefined) {\n                this.internalMicrosoftGlyphs = new Dictionary();\n            }\n            return this.internalMicrosoftGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    TtfReader.prototype.initialize = function () {\n        if (this.metrics === undefined) {\n            this.metrics = new TtfMetrics();\n        }\n        this.readFontDictionary();\n        var nameTable = this.readNameTable();\n        var headTable = this.readHeadTable();\n        this.initializeFontName(nameTable);\n        this.metrics.macStyle = headTable.macStyle;\n    };\n    TtfReader.prototype.readFontDictionary = function () {\n        this.offset = 0;\n        var version = this.checkPreambula();\n        //this.offset += 4;\n        var numTables = this.readInt16(this.offset);\n        var searchRange = this.readInt16(this.offset);\n        var entrySelector = this.readInt16(this.offset);\n        var rangeShift = this.readInt16(this.offset);\n        if (this.tableDirectory === undefined) {\n            this.tableDirectory = new Dictionary();\n        }\n        for (var i = 0; i < numTables; ++i) {\n            var table = new TtfTableInfo();\n            var tableKey = this.readString(this.int32Size);\n            table.checksum = this.readInt32(this.offset);\n            table.offset = this.readInt32(this.offset);\n            table.length = this.readInt32(this.offset);\n            this.tableDirectory.setValue(tableKey, table);\n        }\n        this.lowestPosition = this.offset;\n        if (!this.isTtcFont) {\n            this.fixOffsets();\n        }\n    };\n    TtfReader.prototype.fixOffsets = function () {\n        var minOffset = Number.MAX_VALUE;\n        // Search for a smallest offset and compare it with the lowest position found.\n        var tableKeys = this.tableDirectory.keys();\n        for (var i = 0; i < tableKeys.length; i++) {\n            var value = this.tableDirectory.getValue(tableKeys[i]);\n            var offset = value.offset;\n            if (minOffset > offset) {\n                minOffset = offset;\n                if (minOffset <= this.lowestPosition) {\n                    break;\n                }\n            }\n        }\n        var shift = minOffset - this.lowestPosition;\n        if (shift !== 0) {\n            var table = new Dictionary();\n            for (var i = 0; i < tableKeys.length; i++) {\n                var value = this.tableDirectory.getValue(tableKeys[i]);\n                value.offset -= shift;\n                table.setValue(tableKeys[i], value);\n            }\n            this.tableDirectory = table;\n        }\n    };\n    TtfReader.prototype.checkPreambula = function () {\n        var version = this.readInt32(this.offset);\n        this.isMacTtf = (version === 0x74727565) ? true : false;\n        if (version !== 0x10000 && version !== 0x74727565 && version !== 0x4f54544f) {\n            this.isTtcFont = true;\n            this.offset = 0;\n            var fontTag = this.readString(4);\n            if (fontTag !== 'ttcf') {\n                throw new Error('Can not read TTF font data');\n            }\n            //skip 4\n            this.offset += 4;\n            var ttcIdentificationNumber = this.readInt32(this.offset);\n            if (ttcIdentificationNumber < 0) {\n                throw new Error('Can not read TTF font data');\n            }\n            this.offset = this.readInt32(this.offset);\n            version = this.readInt32(this.offset);\n        }\n        return version;\n    };\n    TtfReader.prototype.readNameTable = function () {\n        var tableInfo = this.getTable('name');\n        this.offset = tableInfo.offset;\n        var table = new TtfNameTable();\n        table.formatSelector = this.readUInt16(this.offset);\n        table.recordsCount = this.readUInt16(this.offset);\n        table.offset = this.readUInt16(this.offset);\n        table.nameRecords = [];\n        var recordSize = 12;\n        var position = this.offset;\n        for (var i = 0; i < table.recordsCount; i++) {\n            this.offset = position;\n            var record = new TtfNameRecord();\n            record.platformID = this.readUInt16(this.offset);\n            record.encodingID = this.readUInt16(this.offset);\n            record.languageID = this.readUInt16(this.offset);\n            record.nameID = this.readUInt16(this.offset);\n            record.length = this.readUInt16(this.offset);\n            record.offset = this.readUInt16(this.offset);\n            this.offset = tableInfo.offset + table.offset + record.offset;\n            var unicode = (record.platformID === 0 || record.platformID === 3);\n            record.name = this.readString(record.length, unicode);\n            table.nameRecords[i] = record;\n            position += recordSize;\n        }\n        return table;\n    };\n    TtfReader.prototype.readHeadTable = function () {\n        var tableInfo = this.getTable('head');\n        this.offset = tableInfo.offset;\n        var table = new TtfHeadTable();\n        table.version = this.readFixed(this.offset);\n        table.fontRevision = this.readFixed(this.offset);\n        table.checkSumAdjustment = this.readUInt32(this.offset);\n        table.magicNumber = this.readUInt32(this.offset);\n        table.flags = this.readUInt16(this.offset);\n        table.unitsPerEm = this.readUInt16(this.offset);\n        table.created = this.readInt64(this.offset);\n        table.modified = this.readInt64(this.offset);\n        table.xMin = this.readInt16(this.offset);\n        table.yMin = this.readInt16(this.offset);\n        table.xMax = this.readInt16(this.offset);\n        table.yMax = this.readInt16(this.offset);\n        table.macStyle = this.readUInt16(this.offset);\n        table.lowestReadableSize = this.readUInt16(this.offset);\n        table.fontDirectionHint = this.readInt16(this.offset);\n        table.indexToLocalFormat = this.readInt16(this.offset);\n        table.glyphDataFormat = this.readInt16(this.offset);\n        return table;\n    };\n    TtfReader.prototype.readHorizontalHeaderTable = function () {\n        var tableInfo = this.getTable('hhea');\n        this.offset = tableInfo.offset;\n        var table = new TtfHorizontalHeaderTable();\n        table.version = this.readFixed(this.offset);\n        table.ascender = this.readInt16(this.offset);\n        table.descender = this.readInt16(this.offset);\n        table.lineGap = this.readInt16(this.offset);\n        table.advanceWidthMax = this.readUInt16(this.offset);\n        table.minLeftSideBearing = this.readInt16(this.offset);\n        table.minRightSideBearing = this.readInt16(this.offset);\n        table.xMaxExtent = this.readInt16(this.offset);\n        table.caretSlopeRise = this.readInt16(this.offset);\n        table.caretSlopeRun = this.readInt16(this.offset);\n        //skip 2 * 5\n        this.offset += 10;\n        table.metricDataFormat = this.readInt16(this.offset);\n        table.numberOfHMetrics = this.readUInt16(this.offset);\n        return table;\n    };\n    TtfReader.prototype.readOS2Table = function () {\n        var tableInfo = this.getTable('OS/2');\n        this.offset = tableInfo.offset;\n        var table = new TtfOS2Table();\n        table.version = this.readUInt16(this.offset);\n        table.xAvgCharWidth = this.readInt16(this.offset);\n        table.usWeightClass = this.readUInt16(this.offset);\n        table.usWidthClass = this.readUInt16(this.offset);\n        table.fsType = this.readInt16(this.offset);\n        table.ySubscriptXSize = this.readInt16(this.offset);\n        table.ySubscriptYSize = this.readInt16(this.offset);\n        table.ySubscriptXOffset = this.readInt16(this.offset);\n        table.ySubscriptYOffset = this.readInt16(this.offset);\n        table.ySuperscriptXSize = this.readInt16(this.offset);\n        table.ySuperscriptYSize = this.readInt16(this.offset);\n        table.ySuperscriptXOffset = this.readInt16(this.offset);\n        table.ySuperscriptYOffset = this.readInt16(this.offset);\n        table.yStrikeoutSize = this.readInt16(this.offset);\n        table.yStrikeoutPosition = this.readInt16(this.offset);\n        table.sFamilyClass = this.readInt16(this.offset);\n        table.panose = this.readBytes(10);\n        table.ulUnicodeRange1 = this.readUInt32(this.offset);\n        table.ulUnicodeRange2 = this.readUInt32(this.offset);\n        table.ulUnicodeRange3 = this.readUInt32(this.offset);\n        table.ulUnicodeRange4 = this.readUInt32(this.offset);\n        table.vendorIdentifier = this.readBytes(4);\n        table.fsSelection = this.readUInt16(this.offset);\n        table.usFirstCharIndex = this.readUInt16(this.offset);\n        table.usLastCharIndex = this.readUInt16(this.offset);\n        table.sTypoAscender = this.readInt16(this.offset);\n        table.sTypoDescender = this.readInt16(this.offset);\n        table.sTypoLineGap = this.readInt16(this.offset);\n        table.usWinAscent = this.readUInt16(this.offset);\n        table.usWinDescent = this.readUInt16(this.offset);\n        table.ulCodePageRange1 = this.readUInt32(this.offset);\n        table.ulCodePageRange2 = this.readUInt32(this.offset);\n        if (table.version > 1) {\n            table.sxHeight = this.readInt16(this.offset);\n            table.sCapHeight = this.readInt16(this.offset);\n            table.usDefaultChar = this.readUInt16(this.offset);\n            table.usBreakChar = this.readUInt16(this.offset);\n            table.usMaxContext = this.readUInt16(this.offset);\n        }\n        else {\n            table.sxHeight = 0;\n            table.sCapHeight = 0;\n            table.usDefaultChar = 0;\n            table.usBreakChar = 0;\n            table.usMaxContext = 0;\n        }\n        return table;\n    };\n    TtfReader.prototype.readPostTable = function () {\n        var tableInfo = this.getTable('post');\n        this.offset = tableInfo.offset;\n        var table = new TtfPostTable();\n        table.formatType = this.readFixed(this.offset);\n        table.italicAngle = this.readFixed(this.offset);\n        table.underlinePosition = this.readInt16(this.offset);\n        table.underlineThickness = this.readInt16(this.offset);\n        table.isFixedPitch = this.readUInt32(this.offset);\n        table.minType42 = this.readUInt32(this.offset);\n        table.maxType42 = this.readUInt32(this.offset);\n        table.minType1 = this.readUInt32(this.offset);\n        table.maxType1 = this.readUInt32(this.offset);\n        return table;\n    };\n    /**\n     * Reads Width of the glyphs.\n     */\n    TtfReader.prototype.readWidthTable = function (glyphCount, unitsPerEm) {\n        var tableInfo = this.getTable('hmtx');\n        this.offset = tableInfo.offset;\n        var width = [];\n        for (var i = 0; i < glyphCount; i++) {\n            var glyph = new TtfLongHorMetric();\n            glyph.advanceWidth = this.readUInt16(this.offset);\n            glyph.lsb = this.readInt16(this.offset);\n            var glyphWidth = glyph.advanceWidth * 1000 / unitsPerEm;\n            width.push(Math.floor(glyphWidth));\n        }\n        return width;\n    };\n    /**\n     * Reads the cmap table.\n     */\n    TtfReader.prototype.readCmapTable = function () {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset;\n        var table = new TtfCmapTable();\n        table.version = this.readUInt16(this.offset);\n        table.tablesCount = this.readUInt16(this.offset);\n        var position = this.offset;\n        var subTables = [];\n        for (var i = 0; i < table.tablesCount; i++) {\n            this.offset = position;\n            var subTable = new TtfCmapSubTable();\n            subTable.platformID = this.readUInt16(this.offset);\n            subTable.encodingID = this.readUInt16(this.offset);\n            subTable.offset = this.readUInt32(this.offset);\n            position = this.offset;\n            this.readCmapSubTable(subTable);\n            subTables[i] = subTable;\n        }\n        return subTables;\n    };\n    /**\n     * Reads the cmap sub table.\n     */\n    TtfReader.prototype.readCmapSubTable = function (subTable) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var format = this.readUInt16(this.offset);\n        var encoding = this.getCmapEncoding(subTable.platformID, subTable.encodingID);\n        var platform = (encoding === TtfCmapEncoding.Macintosh) ? TtfPlatformID.Macintosh : TtfPlatformID.Microsoft;\n        if (encoding !== TtfCmapEncoding.Unknown) {\n            switch (format) {\n                case TtfCmapFormat.Apple:\n                    this.readAppleCmapTable(subTable, encoding);\n                    break;\n                case TtfCmapFormat.Microsoft:\n                    this.readMicrosoftCmapTable(subTable, encoding);\n                    break;\n                case TtfCmapFormat.Trimmed:\n                    this.readTrimmedCmapTable(subTable, encoding);\n                    break;\n            }\n        }\n    };\n    /**\n     * Reads Symbol cmap table.\n     */\n    TtfReader.prototype.readAppleCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var table = new TtfAppleCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        if (this.maxMacIndex === null || this.maxMacIndex === undefined) {\n            this.maxMacIndex = 0;\n        }\n        for (var i = 0; i < 256; ++i) {\n            var glyphInfo = new TtfGlyphInfo();\n            glyphInfo.index = this.readByte(this.offset);\n            glyphInfo.width = this.getWidth(glyphInfo.index);\n            glyphInfo.charCode = i;\n            this.macintosh.setValue(i, glyphInfo);\n            this.addGlyph(glyphInfo, encoding);\n            // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n            this.maxMacIndex = Math.max(i, this.maxMacIndex);\n        }\n    };\n    /**\n     * Reads Symbol cmap table.\n     */\n    TtfReader.prototype.readMicrosoftCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var collection = (encoding === TtfCmapEncoding.Unicode) ? this.microsoft : this.macintosh;\n        var table = new TtfMicrosoftCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        table.segCountX2 = this.readUInt16(this.offset);\n        table.searchRange = this.readUInt16(this.offset);\n        table.entrySelector = this.readUInt16(this.offset);\n        table.rangeShift = this.readUInt16(this.offset);\n        var segCount = table.segCountX2 / 2;\n        table.endCount = this.readUshortArray(segCount);\n        table.reservedPad = this.readUInt16(this.offset);\n        table.startCount = this.readUshortArray(segCount);\n        table.idDelta = this.readUshortArray(segCount);\n        table.idRangeOffset = this.readUshortArray(segCount);\n        var length = (table.length / 2 - 8) - (segCount * 4);\n        table.glyphID = this.readUshortArray(length);\n        // Process glyphIdArray array.\n        var codeOffset = 0;\n        var index = 0;\n        for (var j = 0; j < segCount; j++) {\n            for (var k = table.startCount[j]; k <= table.endCount[j] && k !== 65535; k++) {\n                if (table.idRangeOffset[j] === 0) {\n                    codeOffset = (k + table.idDelta[j]) & 65535;\n                }\n                else {\n                    index = j + table.idRangeOffset[j] / 2 - segCount + k - table.startCount[j];\n                    if (index >= table.glyphID.length) {\n                        continue;\n                    }\n                    codeOffset = (table.glyphID[index] + table.idDelta[j]) & 65535;\n                }\n                var glyph = new TtfGlyphInfo();\n                glyph.index = codeOffset;\n                glyph.width = this.getWidth(glyph.index);\n                var id = (encoding === TtfCmapEncoding.Symbol) ? ((k & 0xff00) === 0xf000 ? k & 0xff : k) : k;\n                glyph.charCode = id;\n                collection.setValue(id, glyph);\n                this.addGlyph(glyph, encoding);\n            }\n        }\n    };\n    /**\n     * Reads Trimed cmap table.\n     */\n    TtfReader.prototype.readTrimmedCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var table = new TtfTrimmedCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        table.firstCode = this.readUInt16(this.offset);\n        table.entryCount = this.readUInt16(this.offset);\n        for (var i = 0; i < table.entryCount; ++i) {\n            var glyphInfo = new TtfGlyphInfo();\n            glyphInfo.index = this.readUInt16(this.offset);\n            glyphInfo.width = this.getWidth(glyphInfo.index);\n            glyphInfo.charCode = i + table.firstCode;\n            this.macintosh.setValue(i, glyphInfo);\n            this.addGlyph(glyphInfo, encoding);\n            // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n            this.maxMacIndex = Math.max(i, this.maxMacIndex);\n        }\n    };\n    TtfReader.prototype.initializeFontName = function (nameTable) {\n        for (var i = 0; i < nameTable.recordsCount; i++) {\n            var record = nameTable.nameRecords[i];\n            if (record.nameID === 1) {\n                //font family\n                this.metrics.fontFamily = record.name;\n            }\n            else if (record.nameID === 6) {\n                //post script name\n                this.metrics.postScriptName = record.name;\n            }\n            /* tslint:disable */\n            if (this.metrics.fontFamily !== null && this.metrics.fontFamily !== undefined && this.metrics.postScriptName !== null && this.metrics.postScriptName !== undefined) {\n                break;\n            }\n            /* tslint:disable */\n        }\n    };\n    TtfReader.prototype.getTable = function (name) {\n        // if (name === null) {\n        //     throw new Error('Argument Null Exception : name');\n        // }\n        var table = new TtfTableInfo();\n        var obj;\n        if (this.tableDirectory.containsKey(name)) {\n            obj = this.tableDirectory.getValue(name);\n        }\n        if (obj !== null && obj !== undefined) {\n            table = obj;\n        }\n        return table;\n    };\n    /**\n     * Returns width of the glyph.\n     */\n    TtfReader.prototype.getWidth = function (glyphCode) {\n        glyphCode = (glyphCode < this.width.length) ? glyphCode : this.width.length - 1;\n        return this.width[glyphCode];\n    };\n    /**\n     * Gets CMAP encoding based on platform ID and encoding ID.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.getCmapEncoding = function (platformID, encodingID) {\n        var format = TtfCmapEncoding.Unknown;\n        if (platformID == TtfPlatformID.Microsoft && encodingID == TtfMicrosoftEncodingID.Undefined) {\n            // When building a symbol font for Windows,\n            // the platform ID should be 3 and the encoding ID should be 0.\n            format = TtfCmapEncoding.Symbol;\n        }\n        else if (platformID == TtfPlatformID.Microsoft && encodingID == TtfMicrosoftEncodingID.Unicode) {\n            // When building a Unicode font for Windows,\n            // the platform ID should be 3 and the encoding ID should be 1.\n            format = TtfCmapEncoding.Unicode;\n        }\n        else if (platformID == TtfPlatformID.Macintosh && encodingID == TtfMacintoshEncodingID.Roman) {\n            // When building a font that will be used on the Macintosh,\n            // the platform ID should be 1 and the encoding ID should be 0.\n            format = TtfCmapEncoding.Macintosh;\n        }\n        return format;\n    };\n    /* tslint:enable */\n    /**\n     * Adds glyph to the collection.\n     */\n    TtfReader.prototype.addGlyph = function (glyph, encoding) {\n        var collection = null;\n        switch (encoding) {\n            case TtfCmapEncoding.Unicode:\n                collection = this.microsoftGlyphs;\n                break;\n            case TtfCmapEncoding.Macintosh:\n            case TtfCmapEncoding.Symbol:\n                collection = this.macintoshGlyphs;\n                break;\n        }\n        collection.setValue(glyph.index, glyph);\n    };\n    /**\n     * Initializes metrics.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.initializeMetrics = function (nameTable, headTable, horizontalHeadTable, os2Table, postTable, cmapTables) {\n        /* tslint:enable */\n        // if (cmapTables === null) {\n        //     throw new Error('ArgumentNullException : cmapTables');\n        // }\n        this.initializeFontName(nameTable);\n        // Get font encoding.\n        var bSymbol = false;\n        for (var i = 0; i < cmapTables.length; i++) {\n            var subTable = cmapTables[i];\n            var encoding = this.getCmapEncoding(subTable.platformID, subTable.encodingID);\n            if (encoding === TtfCmapEncoding.Symbol) {\n                bSymbol = true;\n                break;\n            }\n        }\n        this.metrics.isSymbol = bSymbol;\n        this.metrics.macStyle = headTable.macStyle;\n        this.metrics.isFixedPitch = (postTable.isFixedPitch !== 0);\n        this.metrics.italicAngle = postTable.italicAngle;\n        var factor = 1000 / headTable.unitsPerEm;\n        this.metrics.winAscent = os2Table.sTypoAscender * factor;\n        this.metrics.macAscent = horizontalHeadTable.ascender * factor;\n        //m_metrics.MacAscent = os2Table.UsWinAscent * factor;\n        // NOTE: This is stange workaround. The value is good if os2Table.SCapHeight != 0, otherwise it should be properly computed.\n        this.metrics.capHeight = (os2Table.sCapHeight !== 0) ? os2Table.sCapHeight : 0.7 * headTable.unitsPerEm * factor;\n        this.metrics.winDescent = os2Table.sTypoDescender * factor;\n        this.metrics.macDescent = horizontalHeadTable.descender * factor;\n        //m_metrics.MacDescent = -os2Table.UsWinDescent * factor;\n        this.metrics.leading = (os2Table.sTypoAscender - os2Table.sTypoDescender + os2Table.sTypoLineGap) * factor;\n        this.metrics.lineGap = Math.ceil(horizontalHeadTable.lineGap * factor);\n        var left = headTable.xMin * factor;\n        var top = Math.ceil(this.metrics.macAscent + this.metrics.lineGap);\n        var right = headTable.xMax * factor;\n        var bottom = this.metrics.macDescent;\n        this.metrics.fontBox = new Rectangle(left, top, right, bottom);\n        // NOTE: Strange!\n        this.metrics.stemV = 80;\n        this.metrics.widthTable = this.updateWidth();\n        this.metrics.contains = this.tableDirectory.containsKey('CFF');\n        this.metrics.subScriptSizeFactor = headTable.unitsPerEm / os2Table.ySubscriptYSize;\n        this.metrics.superscriptSizeFactor = headTable.unitsPerEm / os2Table.ySuperscriptYSize;\n    };\n    /**\n     * Updates chars structure which is used in the case of ansi encoding (256 bytes).\n     */\n    TtfReader.prototype.updateWidth = function () {\n        var count = 256;\n        var bytes = [];\n        if (this.metrics.isSymbol) {\n            for (var i = 0; i < count; i++) {\n                var glyphInfo = this.getGlyph(String.fromCharCode(i));\n                bytes[i] = (glyphInfo.empty) ? 0 : glyphInfo.width;\n            }\n        }\n        else {\n            var byteToProcess = [];\n            var unknown = '?';\n            var space = String.fromCharCode(32);\n            for (var i = 0; i < count; i++) {\n                byteToProcess[0] = i;\n                var text = this.getString(byteToProcess, 0, byteToProcess.length);\n                var ch = (text.length > 0) ? text[0] : unknown;\n                var glyphInfo = this.getGlyph(ch);\n                if (!glyphInfo.empty) {\n                    bytes[i] = glyphInfo.width;\n                }\n                else {\n                    glyphInfo = this.getGlyph(space);\n                    bytes[i] = (glyphInfo.empty) ? 0 : glyphInfo.width;\n                }\n            }\n        }\n        return bytes;\n    };\n    /**\n     * Returns default glyph.\n     */\n    TtfReader.prototype.getDefaultGlyph = function () {\n        var glyph = this.getGlyph(StringTokenizer.whiteSpace);\n        return glyph;\n    };\n    /**\n     * Reads unicode string from byte array.\n     */\n    TtfReader.prototype.getString = function (byteToProcess, start, length) {\n        var result = '';\n        for (var index = 0; index < length; index++) {\n            result += String.fromCharCode(byteToProcess[index + start]);\n        }\n        return result;\n    };\n    /**\n     * Reads loca table.\n     */\n    TtfReader.prototype.readLocaTable = function (bShort) {\n        var tableInfo = this.getTable('loca');\n        this.offset = tableInfo.offset;\n        var table = new TtfLocaTable();\n        var buffer = null;\n        if (bShort) {\n            var len = tableInfo.length / 2;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[i] = this.readUInt16(this.offset) * 2;\n            }\n        }\n        else {\n            var len = tableInfo.length / 4;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[i] = this.readUInt32(this.offset);\n            }\n        }\n        table.offsets = buffer;\n        return table;\n    };\n    /**\n     * Updates hash table of used glyphs.\n     */\n    TtfReader.prototype.updateGlyphChars = function (glyphChars, locaTable) {\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        // Add zero key.\n        if (!glyphChars.containsKey(0)) {\n            glyphChars.setValue(0, 0);\n        }\n        var clone = new Dictionary();\n        var glyphCharKeys = glyphChars.keys();\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            clone.setValue(glyphCharKeys[i], glyphChars.getValue(glyphCharKeys[i]));\n        }\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            var nextKey = glyphCharKeys[i];\n            this.processCompositeGlyph(glyphChars, nextKey, locaTable);\n        }\n    };\n    /**\n     * Checks if glyph is composite or not.\n     */\n    TtfReader.prototype.processCompositeGlyph = function (glyphChars, glyph, locaTable) {\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        // Is in range.\n        if (glyph < locaTable.offsets.length - 1) {\n            var glyphOffset = locaTable.offsets[glyph];\n            if (glyphOffset !== locaTable.offsets[glyph + 1]) {\n                var tableInfo = this.getTable('glyf');\n                this.offset = tableInfo.offset + glyphOffset;\n                var glyphHeader = new TtfGlyphHeader();\n                glyphHeader.numberOfContours = this.readInt16(this.offset);\n                glyphHeader.xMin = this.readInt16(this.offset);\n                glyphHeader.yMin = this.readInt16(this.offset);\n                glyphHeader.xMax = this.readInt16(this.offset);\n                glyphHeader.yMax = this.readInt16(this.offset);\n                // Glyph is composite.\n                if (glyphHeader.numberOfContours < 0) {\n                    var skipBytes = 0;\n                    var entry = true;\n                    while (entry) {\n                        var flags = this.readUInt16(this.offset);\n                        var glyphIndex = this.readUInt16(this.offset);\n                        if (!glyphChars.containsKey(glyphIndex)) {\n                            glyphChars.setValue(glyphIndex, 0);\n                        }\n                        if ((flags & TtfCompositeGlyphFlags.MoreComponents) === 0) {\n                            break;\n                        }\n                        skipBytes = ((flags & TtfCompositeGlyphFlags.Arg1And2AreWords) !== 0) ? 4 : 2;\n                        if ((flags & TtfCompositeGlyphFlags.WeHaveScale) !== 0) {\n                            skipBytes += 2;\n                        }\n                        else if ((flags & TtfCompositeGlyphFlags.WeHaveAnXyScale) !== 0) {\n                            skipBytes += 4;\n                        }\n                        else if ((flags & TtfCompositeGlyphFlags.WeHaveTwoByTwo) !== 0) {\n                            skipBytes += 2 * 4;\n                        }\n                        this.offset += skipBytes;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Creates new glyph tables based on chars that are used for output.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.generateGlyphTable = function (glyphChars, locaTable, newLocaTable, newGlyphTable) {\n        /* tslint:enable */\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        newLocaTable = [];\n        // Sorting used glyphs keys.\n        var activeGlyphs = glyphChars.keys();\n        activeGlyphs.sort(function (a, b) { return a - b; });\n        var glyphSize = 0;\n        for (var i = 0; i < activeGlyphs.length; i++) {\n            var glyphIndex = activeGlyphs[i];\n            if (locaTable.offsets.length > 0) {\n                glyphSize += locaTable.offsets[glyphIndex + 1] - locaTable.offsets[glyphIndex];\n            }\n        }\n        var glyphSizeAligned = this.align(glyphSize);\n        newGlyphTable = [];\n        for (var i = 0; i < glyphSizeAligned; i++) {\n            newGlyphTable.push(0);\n        }\n        var nextGlyphOffset = 0;\n        var nextGlyphIndex = 0;\n        var table = this.getTable('glyf');\n        // Creating NewLocaTable - that would hold offsets for filtered glyphs.\n        for (var i = 0; i < locaTable.offsets.length; i++) {\n            newLocaTable.push(nextGlyphOffset);\n            if (nextGlyphIndex < activeGlyphs.length && activeGlyphs[nextGlyphIndex] === i) {\n                ++nextGlyphIndex;\n                newLocaTable[i] = nextGlyphOffset;\n                var oldGlyphOffset = locaTable.offsets[i];\n                var oldNextGlyphOffset = locaTable.offsets[i + 1] - oldGlyphOffset;\n                if (oldNextGlyphOffset > 0) {\n                    this.offset = table.offset + oldGlyphOffset;\n                    var result = this.read(newGlyphTable, nextGlyphOffset, oldNextGlyphOffset);\n                    newGlyphTable = result.buffer;\n                    nextGlyphOffset += oldNextGlyphOffset;\n                }\n            }\n        }\n        return { glyphTableSize: glyphSize, newLocaTable: newLocaTable, newGlyphTable: newGlyphTable };\n    };\n    /**\n     * Updates new Loca table.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.updateLocaTable = function (newLocaTable, bLocaIsShort, newLocaTableOut) {\n        /* tslint:enable */\n        if (newLocaTable === null) {\n            throw new Error('Argument Null Exception : newLocaTable');\n        }\n        var size = (bLocaIsShort) ? newLocaTable.length * 2 : newLocaTable.length * 4;\n        var count = this.align(size);\n        //BigEndianWiter\n        var writer = new BigEndianWriter(count);\n        for (var i = 0; i < newLocaTable.length; i++) {\n            var value = newLocaTable[i];\n            if (bLocaIsShort) {\n                value /= 2;\n                writer.writeShort(value);\n            }\n            else {\n                writer.writeInt(value);\n            }\n        }\n        return { newLocaUpdated: writer.data, newLocaSize: size };\n    };\n    /**\n     * Aligns number to be divisible on 4.\n     */\n    TtfReader.prototype.align = function (value) {\n        return (value + 3) & (~3);\n    };\n    /**\n     * Returns font program data.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.getFontProgram = function (newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        /* tslint:enable */\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        var result = this.getFontProgramLength(newLocaTableOut, newGlyphTable, 0);\n        var fontProgramLength = result.fontProgramLength;\n        var numTables = result.numTables;\n        var writer = new BigEndianWriter(fontProgramLength);\n        writer.writeInt(0x10000);\n        writer.writeShort(numTables);\n        var entrySelector = this.entrySelectors[numTables];\n        writer.writeShort((1 << (entrySelector & 31)) * 16);\n        writer.writeShort(entrySelector);\n        writer.writeShort((numTables - (1 << (entrySelector & 31))) * 16);\n        // Writing to destination buffer - checksums && sizes of used tables.\n        this.writeCheckSums(writer, numTables, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize);\n        // // Writing to destination buffer - used glyphs.\n        this.writeGlyphs(writer, newLocaTableOut, newGlyphTable);\n        return writer.data;\n    };\n    /* tslint:disable */\n    TtfReader.prototype.getFontProgramLength = function (newLocaTableOut, newGlyphTable, numTables) {\n        /* tslint:enable */\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        // glyf and loca are used by default;\n        numTables = 2;\n        var tableNames = this.tableNames;\n        var fontProgramLength = 0;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            if (tableName !== 'glyf' && tableName !== 'loca') {\n                var table = this.getTable(tableName);\n                if (!table.empty) {\n                    ++numTables;\n                    fontProgramLength += this.align(table.length);\n                }\n            }\n        }\n        fontProgramLength += newLocaTableOut.length;\n        fontProgramLength += newGlyphTable.length;\n        var usedTablesSize = numTables * 16 + (3 * 4);\n        fontProgramLength += usedTablesSize;\n        return { fontProgramLength: fontProgramLength, numTables: numTables };\n    };\n    /**\n     * Writing to destination buffer - checksums and sizes of used tables.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.writeCheckSums = function (writer, numTables, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        /* tslint:enable */\n        if (writer === null) {\n            throw new Error('Argument Null Exception : writer');\n        }\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        var usedTablesSize = numTables * 16 + (3 * 4);\n        var nextTableSize = 0;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            var tableInfo = this.getTable(tableName);\n            if (tableInfo.empty) {\n                continue;\n            }\n            writer.writeString(tableName);\n            if (tableName === 'glyf') {\n                var checksum = this.calculateCheckSum(newGlyphTable);\n                writer.writeInt(checksum);\n                nextTableSize = glyphTableSize;\n            }\n            else if (tableName === 'loca') {\n                var checksum = this.calculateCheckSum(newLocaTableOut);\n                writer.writeInt(checksum);\n                nextTableSize = locaTableSize;\n            }\n            else {\n                writer.writeInt(tableInfo.checksum);\n                nextTableSize = tableInfo.length;\n            }\n            writer.writeUInt(usedTablesSize);\n            writer.writeUInt(nextTableSize);\n            usedTablesSize += this.align(nextTableSize);\n        }\n    };\n    /**\n     * Gets checksum from source buffer.\n     */\n    TtfReader.prototype.calculateCheckSum = function (bytes) {\n        if (bytes === null) {\n            throw new Error('Argument Null Exception : bytes');\n        }\n        var pos = 0;\n        var byte1 = 0;\n        var byte2 = 0;\n        var byte3 = 0;\n        var byte4 = 0;\n        for (var i = 0; i < (bytes.length + 1) / 4; i++) {\n            byte4 += (bytes[pos++] & 255);\n            byte3 += (bytes[pos++] & 255);\n            byte2 += (bytes[pos++] & 255);\n            byte1 += (bytes[pos++] & 255);\n        }\n        var result = byte1;\n        result += (byte2 << 8);\n        result += (byte3 << 16);\n        result += (byte4 << 24);\n        return result;\n    };\n    /**\n     * Writing to destination buffer - used glyphs.\n     */\n    TtfReader.prototype.writeGlyphs = function (writer, newLocaTable, newGlyphTable) {\n        if (writer === null) {\n            throw new Error('Argument Null Exception : writer');\n        }\n        if (newLocaTable === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            var tableInfo = this.getTable(tableName);\n            if (tableInfo.empty) {\n                continue;\n            }\n            if (tableName === 'glyf') {\n                writer.writeBytes(newGlyphTable);\n            }\n            else if (tableName === 'loca') {\n                writer.writeBytes(newLocaTable);\n            }\n            else {\n                var count = this.align(tableInfo.length);\n                var buff = [];\n                for (var i_1 = 0; i_1 < count; i_1++) {\n                    buff.push(0);\n                }\n                this.offset = tableInfo.offset;\n                var result = this.read(buff, 0, tableInfo.length);\n                writer.writeBytes(result.buffer);\n            }\n        }\n    };\n    //public methods\n    /**\n     * Sets position value of font data.\n     */\n    TtfReader.prototype.setOffset = function (offset) {\n        this.offset = offset;\n    };\n    /**\n     * Creates font Internals\n     * @private\n     */\n    TtfReader.prototype.createInternals = function () {\n        this.metrics = new TtfMetrics();\n        var nameTable = this.readNameTable();\n        var headTable = this.readHeadTable();\n        this.bIsLocaShort = (headTable.indexToLocalFormat === 0);\n        var horizontalHeadTable = this.readHorizontalHeaderTable();\n        var os2Table = this.readOS2Table();\n        var postTable = this.readPostTable();\n        this.width = this.readWidthTable(horizontalHeadTable.numberOfHMetrics, headTable.unitsPerEm);\n        var subTables = this.readCmapTable();\n        this.initializeMetrics(nameTable, headTable, horizontalHeadTable, os2Table, postTable, subTables);\n    };\n    TtfReader.prototype.getGlyph = function (charCode) {\n        if (typeof charCode === 'number') {\n            var obj1 = null;\n            if (!this.metrics.isSymbol && this.microsoftGlyphs != null) {\n                if (this.microsoftGlyphs.containsKey(charCode)) {\n                    obj1 = this.microsoftGlyphs.getValue(charCode);\n                }\n            }\n            else if (this.metrics.isSymbol && this.macintoshGlyphs != null) {\n                if (this.macintoshGlyphs.containsKey(charCode)) {\n                    obj1 = this.macintoshGlyphs.getValue(charCode);\n                }\n            }\n            var glyph = (obj1 != null) ? obj1 : this.getDefaultGlyph();\n            return glyph;\n        }\n        else {\n            var obj = null;\n            var code = charCode.charCodeAt(0);\n            if (!this.metrics.isSymbol && this.microsoft !== null) {\n                if (this.microsoft.containsKey(code)) {\n                    obj = this.microsoft.getValue(code);\n                    if (code !== StringTokenizer.whiteSpace.charCodeAt(0)) {\n                        this.isFontPresent = true;\n                    }\n                }\n                else if (code !== StringTokenizer.whiteSpace.charCodeAt(0)) {\n                    this.isFontPresent = false;\n                }\n            }\n            else if (this.metrics.isSymbol && this.macintosh !== null || this.isMacTTF) {\n                // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n                if (this.maxMacIndex !== 0) {\n                    code %= this.maxMacIndex + 1;\n                }\n                else {\n                    code = ((code & 0xff00) === 0xf000 ? code & 0xff : code);\n                }\n                if (this.macintosh.containsKey(code)) {\n                    obj = this.macintosh.getValue(code);\n                    this.isFontPresent = true;\n                }\n            }\n            // Fix for StackOverFlow exception in XPS to PDF converter\n            if (charCode === StringTokenizer.whiteSpace && obj === null) {\n                obj = new TtfGlyphInfo();\n            }\n            var glyph = (obj !== null) ? obj : this.getDefaultGlyph();\n            return glyph;\n        }\n    };\n    /**\n     * Gets hash table with chars indexed by glyph index.\n     */\n    TtfReader.prototype.getGlyphChars = function (chars) {\n        if (chars === null || chars === undefined) {\n            throw new Error('Argument Null Exception : chars');\n        }\n        var dictionary = new Dictionary();\n        var charKeys = chars.keys();\n        for (var i = 0; i < charKeys.length; i++) {\n            var ch = charKeys[i];\n            var glyph = this.getGlyph(ch);\n            if (!glyph.empty) {\n                dictionary.setValue(glyph.index, ch.charCodeAt(0));\n            }\n        }\n        return dictionary;\n    };\n    /**\n     * Gets all glyphs.\n     */\n    TtfReader.prototype.getAllGlyphs = function () {\n        var allGlyphInfo = [];\n        var info = new TtfGlyphInfo();\n        var index = 0;\n        for (var i = 0; i < this.width.length; i++) {\n            var width = this.width[i];\n            info.index = index;\n            info.width = width;\n            allGlyphInfo.push(info);\n            index++;\n        }\n        return allGlyphInfo;\n    };\n    /**\n     * Reads a font's program.\n     * @private\n     */\n    TtfReader.prototype.readFontProgram = function (chars) {\n        var glyphChars = this.getGlyphChars(chars);\n        var locaTable = this.readLocaTable(this.bIsLocaShort);\n        if (glyphChars.size() < chars.size()) {\n            this.missedGlyphs = chars.size() - glyphChars.size();\n        }\n        this.updateGlyphChars(glyphChars, locaTable);\n        /* tslint:disable */\n        var result1 = this.generateGlyphTable(glyphChars, locaTable, null, null);\n        /* tslint:enable */\n        var glyphTableSize = result1.glyphTableSize;\n        var newLocaTable = result1.newLocaTable;\n        var newGlyphTable = result1.newGlyphTable;\n        var result2 = this.updateLocaTable(newLocaTable, this.bIsLocaShort, null);\n        var newLocaSize = result2.newLocaSize;\n        var newLocaUpdated = result2.newLocaUpdated;\n        var fontProgram = this.getFontProgram(newLocaUpdated, newGlyphTable, glyphTableSize, newLocaSize);\n        return fontProgram;\n    };\n    /**\n     * Reconverts string to be in proper format saved into PDF file.\n     */\n    TtfReader.prototype.convertString = function (text) {\n        if (text === null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        var glyph = '';\n        var i = 0;\n        for (var k = 0; k < text.length; k++) {\n            var ch = text[k];\n            var glyphInfo = this.getGlyph(ch);\n            if (!glyphInfo.empty) {\n                glyph += String.fromCharCode(glyphInfo.index);\n                i++;\n            }\n        }\n        return glyph;\n    };\n    /**\n     * Gets char width.\n     */\n    TtfReader.prototype.getCharWidth = function (code) {\n        var glyphInfo = this.getGlyph(code);\n        glyphInfo = (!glyphInfo.empty) ? glyphInfo : this.getDefaultGlyph();\n        var codeWidth = (!glyphInfo.empty) ? glyphInfo.width : 0;\n        return codeWidth;\n    };\n    TtfReader.prototype.readString = function (length, isUnicode) {\n        if (isUnicode === undefined) {\n            return this.readString(length, false);\n        }\n        else {\n            //let buffer : number[] = this.readBytes(length);\n            var result = '';\n            if (isUnicode) {\n                for (var i = 0; i < length; i++) {\n                    if (i % 2 !== 0) {\n                        result += String.fromCharCode(this.fontData[this.offset]);\n                    }\n                    this.offset += 1;\n                }\n            }\n            else {\n                for (var i = 0; i < length; i++) {\n                    result += String.fromCharCode(this.fontData[this.offset]);\n                    this.offset += 1;\n                }\n            }\n            return result;\n        }\n    };\n    TtfReader.prototype.readFixed = function (offset) {\n        var integer = this.readInt16(offset);\n        var sFraction = this.readInt16(offset + 2);\n        var fraction = sFraction / 16384;\n        return integer + fraction;\n    };\n    TtfReader.prototype.readInt32 = function (offset) {\n        var i1 = this.fontData[offset + 3];\n        var i2 = this.fontData[offset + 2];\n        var i3 = this.fontData[offset + 1];\n        var i4 = this.fontData[offset];\n        this.offset += 4;\n        return i1 + (i2 << 8) + (i3 << 16) + (i4 << 24);\n    };\n    TtfReader.prototype.readUInt32 = function (offset) {\n        var i1 = this.fontData[offset + 3];\n        var i2 = this.fontData[offset + 2];\n        var i3 = this.fontData[offset + 1];\n        var i4 = this.fontData[offset];\n        this.offset += 4;\n        return (i1 | i2 << 8 | i3 << 16 | i4 << 24);\n    };\n    // private readInt16(offset : number) : number {\n    //     let result : number = (this.fontData[offset] << 8) + this.fontData[offset + 1];\n    //     this.offset += 2;\n    //     return result;\n    // }\n    TtfReader.prototype.readInt16 = function (offset) {\n        var result = (this.fontData[offset] << 8) + this.fontData[offset + 1];\n        result = result & (1 << 15) ? result - 0x10000 : result;\n        this.offset += 2;\n        return result;\n    };\n    TtfReader.prototype.readInt64 = function (offset) {\n        var low = this.readInt32(offset + 4);\n        var n = this.readInt32(offset) * 4294967296.0 + low;\n        if (low < 0) {\n            n += 4294967296;\n        }\n        return n;\n    };\n    TtfReader.prototype.readUInt16 = function (offset) {\n        var result = (this.fontData[offset] << 8) | this.fontData[offset + 1];\n        this.offset += 2;\n        return result;\n    };\n    /**\n     * Reads ushort array.\n     */\n    TtfReader.prototype.readUshortArray = function (length) {\n        var buffer = [];\n        for (var i = 0; i < length; i++) {\n            buffer[i] = this.readUInt16(this.offset);\n        }\n        return buffer;\n    };\n    TtfReader.prototype.readBytes = function (length) {\n        var result = [];\n        for (var i = 0; i < length; i++) {\n            result.push(this.fontData[this.offset]);\n            this.offset += 1;\n        }\n        return result;\n    };\n    TtfReader.prototype.readByte = function (offset) {\n        var result = this.fontData[offset];\n        this.offset += 1;\n        return result;\n    };\n    /**\n     * Reads bytes to array in BigEndian order.\n     * @private\n     */\n    TtfReader.prototype.read = function (buffer, index, count) {\n        if (buffer === null) {\n            throw new Error('Argument Null Exception : buffer');\n        }\n        var written = 0;\n        var read = 0;\n        do {\n            for (var i = 0; (i < count - written) && (this.offset + i < this.fontData.length); i++) {\n                buffer[index + i] = this.fontData[this.offset + i];\n            }\n            read = count - written;\n            this.offset += read;\n            written += read;\n        } while (written < count);\n        return { buffer: buffer, written: written };\n    };\n    return TtfReader;\n}());\nexport { TtfReader };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfFont } from './pdf-font';\nimport { PdfSubSuperScript } from './enum';\nimport { PdfArray } from './../../primitives/pdf-array';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar PdfFontMetrics = /** @class */ (function () {\n    function PdfFontMetrics() {\n        /**\n         * `Line gap`.\n         * @private\n         */\n        this.lineGap = 0;\n    }\n    //  Public methods\n    /**\n     * Returns `ascent` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getAscent = function (format) {\n        var returnValue = this.ascent * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `descent` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getDescent = function (format) {\n        var returnValue = this.descent * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `Line gap` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getLineGap = function (format) {\n        var returnValue = this.lineGap * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `height` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getHeight = function (format) {\n        var height;\n        var clearTypeFonts = ['cambria', 'candara', 'constantia', 'corbel', 'cariadings'];\n        var clearTypeFontCollection = [];\n        for (var index = 0; index < clearTypeFonts.length; index++) {\n            var font = clearTypeFonts[index];\n            clearTypeFontCollection.push(font);\n        }\n        if (this.getDescent(format) < 0) {\n            // if ((clearTypeFontCollection.indexOf(this.name.toLowerCase()) !== -1) && !this.isUnicodeFont) {\n            //     height = (this.GetAscent(format) - this.GetDescent(format) - this.GetLineGap(format));\n            // } else {\n            height = (this.getAscent(format) - this.getDescent(format) + this.getLineGap(format));\n            // }\n        }\n        else {\n            height = (this.getAscent(format) + this.getDescent(format) + this.getLineGap(format));\n        }\n        return height;\n    };\n    /**\n     * Calculates `size` of the font depending on the subscript/superscript value.\n     * @private\n     */\n    PdfFontMetrics.prototype.getSize = function (format) {\n        var size = this.size;\n        if (format != null) {\n            switch (format.subSuperScript) {\n                case PdfSubSuperScript.SubScript:\n                    size /= this.subScriptSizeFactor;\n                    break;\n                case PdfSubSuperScript.SuperScript:\n                    size /= this.superscriptSizeFactor;\n                    break;\n            }\n        }\n        return size;\n    };\n    /**\n     * `Clones` the metrics.\n     * @private\n     */\n    PdfFontMetrics.prototype.clone = function () {\n        var metrics = this;\n        metrics.widthTable = WidthTable.clone();\n        return metrics;\n    };\n    Object.defineProperty(PdfFontMetrics.prototype, \"widthTable\", {\n        //  Properies\n        /**\n         * Gets or sets the `width table`.\n         * @private\n         */\n        get: function () {\n            return this.internalWidthTable;\n        },\n        set: function (value) {\n            this.internalWidthTable = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFontMetrics;\n}());\nexport { PdfFontMetrics };\nvar WidthTable = /** @class */ (function () {\n    function WidthTable() {\n    }\n    /**\n     * Static `clones` this instance of the WidthTable class.\n     * @private\n     */\n    WidthTable.clone = function () {\n        return null;\n    };\n    return WidthTable;\n}());\nexport { WidthTable };\nvar StandardWidthTable = /** @class */ (function (_super) {\n    __extends(StandardWidthTable, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `StandardWidthTable` class.\n     * @private\n     */\n    function StandardWidthTable(widths) {\n        var _this = _super.call(this) || this;\n        if (widths == null) {\n            throw new Error('ArgumentNullException:widths');\n        }\n        _this.widths = widths;\n        return _this;\n    }\n    //Properties\n    /**\n     * Gets the `32 bit number` at the specified index.\n     * @private\n     */\n    StandardWidthTable.prototype.items = function (index) {\n        if (index < 0 || index >= this.widths.length) {\n            throw new Error('ArgumentOutOfRangeException:index, The character is not supported by the font.');\n        }\n        var result = this.widths[index];\n        return result;\n    };\n    Object.defineProperty(StandardWidthTable.prototype, \"length\", {\n        /**\n         * Gets the `length` of the internal array.\n         * @private\n         */\n        get: function () {\n            return this.widths.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Overrides\n    /**\n     * `Clones` this instance of the WidthTable class.\n     * @private\n     */\n    StandardWidthTable.prototype.clone = function () {\n        var swt = this;\n        swt.widths = this.widths;\n        return swt;\n    };\n    /**\n     * Converts width table to a `PDF array`.\n     * @private\n     */\n    StandardWidthTable.prototype.toArray = function () {\n        var arr = new PdfArray(this.widths);\n        return arr;\n    };\n    return StandardWidthTable;\n}(WidthTable));\nexport { StandardWidthTable };\n","/**\n * TrueTypeFont.ts class for EJ2-PDF\n */\nimport { ByteArray } from './../../graphics/images/index';\nimport { TtfReader } from './ttf-reader';\nimport { PdfDictionary, SaveDescendantFontEventHandler, SaveFontDictionaryEventHandler } from './../../primitives/pdf-dictionary';\nimport { SaveFontProgramEventHandler, SaveCmapEventHandler } from './../../primitives/pdf-stream';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfString } from './../../primitives/pdf-string';\nimport { PdfReferenceHolder } from './../../primitives/pdf-reference';\nimport { PdfFontMetrics } from './pdf-font-metrics';\nimport { StandardWidthTable } from './pdf-font-metrics';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { Dictionary } from './../../collections/dictionary';\nimport { FontDescriptorFlags } from './enum';\nimport { RectangleF } from './../../drawing/pdf-drawing';\nimport { Operators } from './../../input-output/pdf-operators';\nvar UnicodeTrueTypeFont = /** @class */ (function () {\n    /* tslint:enable */\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfTrueTypeFont` class.\n     * @private\n     */\n    function UnicodeTrueTypeFont(base64String, size) {\n        // Fields\n        this.nameString = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Indicates whether the font program is compressed or not.\n         * @private\n         */\n        this.isCompress = false;\n        /**\n         * Indicates whether the font is embedded or not.\n         */\n        this.isEmbedFont = false;\n        /**\n         * Cmap table's start prefix.\n         */\n        /* tslint:disable */\n        this.cmapPrefix = '/CIDInit /ProcSet findresource begin\\n12 dict begin\\nbegincmap' + Operators.newLine + '/CIDSystemInfo << /Registry (Adobe)/Ordering (UCS)/Supplement 0>> def\\n/CMapName ' + '/Adobe-Identity-UCS def\\n/CMapType 2 def\\n1 begincodespacerange' + Operators.newLine;\n        /* tslint:enable */\n        /**\n         * Cmap table's start suffix.\n         */\n        this.cmapEndCodespaceRange = 'endcodespacerange' + Operators.newLine;\n        /**\n         * Cmap's begin range marker.\n         */\n        this.cmapBeginRange = 'beginbfrange' + Operators.newLine;\n        /**\n         * Cmap's end range marker.\n         */\n        this.cmapEndRange = 'endbfrange' + Operators.newLine;\n        /**\n         * Cmap table's end\n         */\n        /* tslint:disable */\n        this.cmapSuffix = 'endbfrange\\nendcmap\\nCMapName currentdict ' + '/CMap defineresource pop\\nend end' + Operators.newLine;\n        if (base64String === null || base64String === undefined) {\n            throw new Error('ArgumentNullException:base64String');\n        }\n        this.fontSize = size;\n        this.fontString = base64String;\n        this.Initialize();\n    }\n    //Implementation\n    /**\n     * Returns width of the char symbol.\n     */\n    UnicodeTrueTypeFont.prototype.getCharWidth = function (charCode) {\n        var codeWidth = this.ttfReader.getCharWidth(charCode);\n        return codeWidth;\n    };\n    /**\n     * Returns width of the text line.\n     */\n    UnicodeTrueTypeFont.prototype.getLineWidth = function (line) {\n        // if (line == null) {\n        //     throw new Error('ArgumentNullException : line');\n        // }\n        var width = 0;\n        for (var i = 0, len = line.length; i < len; i++) {\n            var ch = line[i];\n            var charWidth = this.getCharWidth(ch);\n            width += charWidth;\n        }\n        return width;\n    };\n    /**\n     * Initializes a new instance of the `PdfTrueTypeFont` class.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.Initialize = function () {\n        var byteArray = new ByteArray(this.fontString.length);\n        byteArray.writeFromBase64String(this.fontString);\n        this.fontData = byteArray.internalBuffer;\n        this.ttfReader = new TtfReader(this.fontData);\n        this.ttfMetrics = this.ttfReader.metrics;\n    };\n    UnicodeTrueTypeFont.prototype.createInternals = function () {\n        this.fontDictionary = new PdfDictionary();\n        this.fontProgram = new PdfStream();\n        this.cmap = new PdfStream();\n        this.descendantFont = new PdfDictionary();\n        this.metrics = new PdfFontMetrics();\n        this.ttfReader.createInternals();\n        this.ttfMetrics = this.ttfReader.metrics;\n        this.initializeMetrics();\n        // Create all the dictionaries of the font.\n        this.subsetName = this.getFontName();\n        this.createDescendantFont();\n        this.createCmap();\n        this.createFontDictionary();\n        this.createFontProgram();\n    };\n    UnicodeTrueTypeFont.prototype.getInternals = function () {\n        return this.fontDictionary;\n    };\n    /**\n     * Initializes metrics.\n     */\n    UnicodeTrueTypeFont.prototype.initializeMetrics = function () {\n        var ttfMetrics = this.ttfReader.metrics;\n        this.metrics.ascent = ttfMetrics.macAscent;\n        this.metrics.descent = ttfMetrics.macDescent;\n        this.metrics.height = ttfMetrics.macAscent - ttfMetrics.macDescent + ttfMetrics.lineGap;\n        this.metrics.name = ttfMetrics.fontFamily;\n        this.metrics.postScriptName = ttfMetrics.postScriptName;\n        this.metrics.size = this.fontSize;\n        this.metrics.widthTable = new StandardWidthTable(ttfMetrics.widthTable);\n        this.metrics.lineGap = ttfMetrics.lineGap;\n        this.metrics.subScriptSizeFactor = ttfMetrics.subScriptSizeFactor;\n        this.metrics.superscriptSizeFactor = ttfMetrics.superscriptSizeFactor;\n        this.metrics.isBold = ttfMetrics.isBold;\n    };\n    /**\n     * Gets random string.\n     */\n    UnicodeTrueTypeFont.prototype.getFontName = function () {\n        var builder = '';\n        var name;\n        // if (this.isEmbed === false) {\n        for (var i = 0; i < 6; i++) {\n            var index = Math.floor(Math.random() * (25 - 0 + 1)) + 0;\n            builder += this.nameString[index];\n        }\n        builder += '+';\n        // }\n        builder += this.ttfReader.metrics.postScriptName;\n        name = builder.toString();\n        // if (name === '') {\n        //     name = this.ttfReader.metrics.fontFamily;\n        // }\n        name = this.formatName(name);\n        return name;\n    };\n    /**\n     * Generates name of the font.\n     */\n    UnicodeTrueTypeFont.prototype.formatName = function (fontName) {\n        // if (fontName === null) {\n        //     throw new Error('ArgumentNullException : fontName');\n        // }\n        // if (fontName === '') {\n        //     throw new Error('ArgumentOutOfRangeException : fontName, Parameter can not be empty');\n        // }\n        var ret = fontName.replace('(', '#28');\n        ret = ret.replace(')', '#29');\n        ret = ret.replace('[', '#5B');\n        ret = ret.replace(']', '#5D');\n        ret = ret.replace('<', '#3C');\n        ret = ret.replace('>', '#3E');\n        ret = ret.replace('{', '#7B');\n        ret = ret.replace('}', '#7D');\n        ret = ret.replace('/', '#2F');\n        ret = ret.replace('%', '#25');\n        return ret.replace(' ', '#20');\n    };\n    /**\n     * Creates descendant font.\n     */\n    UnicodeTrueTypeFont.prototype.createDescendantFont = function () {\n        // Set property used to clone Font every time\n        this.descendantFont.isFont = true;\n        this.descendantFont.descendantFontBeginSave = new SaveDescendantFontEventHandler(this);\n        this.descendantFont.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        this.descendantFont.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.cIDFontType2));\n        this.descendantFont.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.subsetName));\n        this.descendantFont.items.setValue(this.dictionaryProperties.cIDToGIDMap, new PdfName(this.dictionaryProperties.identity));\n        this.descendantFont.items.setValue(this.dictionaryProperties.dw, new PdfNumber(1000));\n        this.fontDescriptor = this.createFontDescriptor();\n        this.descendantFont.items.setValue(this.dictionaryProperties.fontDescriptor, new PdfReferenceHolder(this.fontDescriptor));\n        var systemInfo = this.createSystemInfo();\n        this.descendantFont.items.setValue(this.dictionaryProperties.cIDSystemInfo, systemInfo);\n    };\n    /**\n     * Creates font descriptor.\n     */\n    UnicodeTrueTypeFont.prototype.createFontDescriptor = function () {\n        var descriptor = new PdfDictionary();\n        var metrics = this.ttfReader.metrics;\n        // Set property used to clone Font every time\n        descriptor.isFont = true;\n        descriptor.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.fontDescriptor));\n        descriptor.items.setValue(this.dictionaryProperties.fontName, new PdfName(this.subsetName));\n        descriptor.items.setValue(this.dictionaryProperties.flags, new PdfNumber(this.getDescriptorFlags()));\n        descriptor.items.setValue(this.dictionaryProperties.fontBBox, PdfArray.fromRectangle(this.getBoundBox()));\n        descriptor.items.setValue(this.dictionaryProperties.missingWidth, new PdfNumber(metrics.widthTable[32]));\n        descriptor.items.setValue(this.dictionaryProperties.stemV, new PdfNumber(metrics.stemV));\n        descriptor.items.setValue(this.dictionaryProperties.italicAngle, new PdfNumber(metrics.italicAngle));\n        descriptor.items.setValue(this.dictionaryProperties.capHeight, new PdfNumber(metrics.capHeight));\n        descriptor.items.setValue(this.dictionaryProperties.ascent, new PdfNumber(metrics.winAscent));\n        descriptor.items.setValue(this.dictionaryProperties.descent, new PdfNumber(metrics.winDescent));\n        descriptor.items.setValue(this.dictionaryProperties.leading, new PdfNumber(metrics.leading));\n        descriptor.items.setValue(this.dictionaryProperties.avgWidth, new PdfNumber(metrics.widthTable[32]));\n        descriptor.items.setValue(this.dictionaryProperties.fontFile2, new PdfReferenceHolder(this.fontProgram));\n        descriptor.items.setValue(this.dictionaryProperties.maxWidth, new PdfNumber(metrics.widthTable[32]));\n        descriptor.items.setValue(this.dictionaryProperties.xHeight, new PdfNumber(0));\n        descriptor.items.setValue(this.dictionaryProperties.stemH, new PdfNumber(0));\n        return descriptor;\n    };\n    /**\n     * Generates cmap.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.createCmap = function () {\n        this.cmap.cmapBeginSave = new SaveCmapEventHandler(this);\n    };\n    /**\n     * Generates font dictionary.\n     */\n    UnicodeTrueTypeFont.prototype.createFontDictionary = function () {\n        // Set property used to clone Font every time\n        this.fontDictionary.isFont = true;\n        this.fontDictionary.fontDictionaryBeginSave = new SaveFontDictionaryEventHandler(this);\n        this.fontDictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.subsetName));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.type0));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.encoding, new PdfName(this.dictionaryProperties.identityH));\n        var descFonts = new PdfArray();\n        var reference = new PdfReferenceHolder(this.descendantFont);\n        // Set property used to clone Font every time\n        descFonts.isFont = true;\n        descFonts.add(reference);\n        this.fontDictionary.items.setValue(this.dictionaryProperties.descendantFonts, descFonts);\n    };\n    /**\n     * Creates font program.\n     */\n    UnicodeTrueTypeFont.prototype.createFontProgram = function () {\n        this.fontProgram.fontProgramBeginSave = new SaveFontProgramEventHandler(this);\n    };\n    /**\n     * Creates system info dictionary for CID font.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.createSystemInfo = function () {\n        var systemInfo = new PdfDictionary();\n        systemInfo.items.setValue(this.dictionaryProperties.registry, new PdfString('Adobe'));\n        systemInfo.items.setValue(this.dictionaryProperties.ordering, new PdfString(this.dictionaryProperties.identity));\n        systemInfo.items.setValue(this.dictionaryProperties.supplement, new PdfNumber(0));\n        return systemInfo;\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    UnicodeTrueTypeFont.prototype.descendantFontBeginSave = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var width = this.getDescendantWidth();\n            if (width !== null) {\n                this.descendantFont.items.setValue(this.dictionaryProperties.w, width);\n            }\n        }\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    UnicodeTrueTypeFont.prototype.cmapBeginSave = function () {\n        this.generateCmap();\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    /* tslint:disable */\n    UnicodeTrueTypeFont.prototype.fontDictionaryBeginSave = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0 && !this.fontDictionary.containsKey(this.dictionaryProperties.toUnicode)) {\n            this.fontDictionary.items.setValue(this.dictionaryProperties.toUnicode, new PdfReferenceHolder(this.cmap));\n        }\n    };\n    /* tslint:enable */\n    /**\n     * Runs before font program stream save.\n     */\n    UnicodeTrueTypeFont.prototype.fontProgramBeginSave = function () {\n        this.isCompress = true;\n        this.generateFontProgram();\n    };\n    /**\n     * Gets width description pad array for c i d font.\n     */\n    UnicodeTrueTypeFont.prototype.getDescendantWidth = function () {\n        var array = new PdfArray();\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var glyphInfo = [];\n            // if (!this.isEmbedFont) {\n            var keys = this.usedChars.keys();\n            for (var i = 0; i < keys.length; i++) {\n                var chLen = keys[i];\n                var glyph = this.ttfReader.getGlyph(chLen);\n                if (glyph.empty) {\n                    continue;\n                }\n                glyphInfo.push(glyph);\n            }\n            // } else {\n            //     glyphInfo = this.ttfReader.getAllGlyphs();\n            // }\n            glyphInfo.sort(function (a, b) { return a.index - b.index; });\n            var firstGlyphIndex = 0;\n            var lastGlyphIndex = 0;\n            var firstGlyphIndexWasSet = false;\n            var widthDetails = new PdfArray();\n            // if (!this.isEmbedFont) {\n            for (var i = 0; i < glyphInfo.length; i++) {\n                var glyph = glyphInfo[i];\n                if (!firstGlyphIndexWasSet) {\n                    firstGlyphIndexWasSet = true;\n                    firstGlyphIndex = glyph.index;\n                    lastGlyphIndex = glyph.index - 1;\n                }\n                if ((lastGlyphIndex + 1 !== glyph.index || (i + 1 === glyphInfo.length)) && glyphInfo.length > 1) {\n                    // Add glyph index / width.\n                    array.add(new PdfNumber(firstGlyphIndex));\n                    if (i !== 0) {\n                        array.add(widthDetails);\n                    }\n                    firstGlyphIndex = glyph.index;\n                    widthDetails = new PdfArray();\n                }\n                widthDetails.add(new PdfNumber(glyph.width));\n                if (i + 1 === glyphInfo.length) {\n                    array.add(new PdfNumber(firstGlyphIndex));\n                    array.add(widthDetails);\n                }\n                lastGlyphIndex = glyph.index;\n            }\n            // } else {\n            //     for (let i : number = 0; i < glyphInfo.length; i++) {\n            //         let glyph : TtfGlyphInfo = glyphInfo[i];\n            //         if (!firstGlyphIndexWasSet) {\n            //             firstGlyphIndexWasSet = true;\n            //             lastGlyphIndex = glyph.index - 1;\n            //         }\n            //         firstGlyphIndex = glyph.index;\n            //         if ((lastGlyphIndex + 1 === glyph.index || (i + 1 === glyphInfo.length)) && glyphInfo.length > 1) {\n            //             // Add glyph index / width.\n            //             widthDetails.add(new PdfNumber(glyph.width));\n            //             array.add(new PdfNumber(firstGlyphIndex));\n            //             array.add(widthDetails);\n            //             widthDetails = new PdfArray();\n            //         }\n            //         lastGlyphIndex = glyph.index;\n            //     }\n            // }\n        }\n        return array;\n    };\n    /**\n     * Creates cmap.\n     */\n    UnicodeTrueTypeFont.prototype.generateCmap = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var glyphChars = this.ttfReader.getGlyphChars(this.usedChars);\n            if (glyphChars.size() > 0) {\n                var keys = glyphChars.keys().sort();\n                // add first and last glyph indexes\n                var first = keys[0];\n                var last = keys[keys.length - 1];\n                var middlePart = this.toHexString(first, false) + this.toHexString(last, false) + Operators.newLine;\n                var builder = '';\n                builder += this.cmapPrefix;\n                builder += middlePart;\n                builder += this.cmapEndCodespaceRange;\n                var nextRange = 0;\n                for (var i = 0; i < keys.length; i++) {\n                    if (nextRange === 0) {\n                        if (i !== 0) {\n                            builder += this.cmapEndRange;\n                        }\n                        nextRange = Math.min(100, keys.length - i);\n                        builder += nextRange;\n                        builder += Operators.whiteSpace;\n                        builder += this.cmapBeginRange;\n                    }\n                    nextRange -= 1;\n                    var key = keys[i];\n                    /* tslint:disable */\n                    builder += this.toHexString(key, true) + this.toHexString(key, true) + this.toHexString(glyphChars.getValue(key), true) + '\\n';\n                    /* tslint:enable */\n                }\n                builder += this.cmapSuffix;\n                this.cmap.clearStream();\n                this.cmap.isFont = true;\n                this.cmap.write(builder);\n            }\n        }\n    };\n    /**\n     * Generates font program.\n     */\n    UnicodeTrueTypeFont.prototype.generateFontProgram = function () {\n        var fontProgram = null;\n        this.usedChars = (this.usedChars === null || this.usedChars === undefined) ? new Dictionary() : this.usedChars;\n        this.ttfReader.setOffset(0);\n        fontProgram = this.ttfReader.readFontProgram(this.usedChars);\n        this.fontProgram.clearStream();\n        this.fontProgram.isFont = true;\n        this.fontProgram.writeBytes(fontProgram);\n    };\n    /**\n     * Calculates flags for the font descriptor.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.getDescriptorFlags = function () {\n        var flags = 0;\n        var metrics = this.ttfReader.metrics;\n        if (metrics.isFixedPitch) {\n            flags |= FontDescriptorFlags.FixedPitch;\n        }\n        if (metrics.isSymbol) {\n            flags |= FontDescriptorFlags.Symbolic;\n        }\n        else {\n            flags |= FontDescriptorFlags.Nonsymbolic;\n        }\n        if (metrics.isItalic) {\n            flags |= FontDescriptorFlags.Italic;\n        }\n        if (metrics.isBold) {\n            flags |= FontDescriptorFlags.ForceBold;\n        }\n        return flags;\n    };\n    /**\n     * Calculates BoundBox of the descriptor.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.getBoundBox = function () {\n        var rect = this.ttfReader.metrics.fontBox;\n        var width = Math.abs(rect.right - rect.left);\n        var height = Math.abs(rect.top - rect.bottom);\n        var rectangle = new RectangleF(rect.left, rect.bottom, width, height);\n        return rectangle;\n    };\n    /**\n     * Converts integer of decimal system to hex integer.\n     */\n    UnicodeTrueTypeFont.prototype.toHexString = function (n, isCaseChange) {\n        var s = n.toString(16);\n        if (isCaseChange) {\n            s = s.toUpperCase();\n        }\n        return '<0000'.substring(0, 5 - s.length) + s + '>';\n    };\n    /**\n     * Stores used symbols.\n     */\n    UnicodeTrueTypeFont.prototype.setSymbols = function (text) {\n        if (text === null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        if (this.usedChars === null || this.usedChars === undefined) {\n            this.usedChars = new Dictionary();\n        }\n        for (var i = 0; i < text.length; i++) {\n            var ch = text[i];\n            this.usedChars.setValue(ch, String.fromCharCode(0));\n        }\n        // else {\n        //     if (text === null) {\n        //         throw new Error('Argument Null Exception : glyphs');\n        //     }\n        //     if (this.usedChars === null || this.usedChars === undefined) {\n        //             this.usedChars = new Dictionary<string, string>();\n        //     }\n        //     for (let i : number = 0; i < text.length; i++) {\n        //         let glyphIndex : number = text[i];\n        //         let glyph : TtfGlyphInfo =  this.ttfReader.getGlyph(glyphIndex);\n        //         if (!glyph == null) {\n        //             let c : string = glyph.charCode.toLocaleString();\n        //             this.usedChars.setValue(c, String.fromCharCode(0));\n        //         }\n        //     }\n        // }\n        if (this.isEmbedFont === false) {\n            this.getDescendantWidth();\n        }\n    };\n    return UnicodeTrueTypeFont;\n}());\nexport { UnicodeTrueTypeFont };\n","/**\n * ArabicShapeRenderer.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../../../collections/dictionary';\nvar ArabicShapeRenderer = /** @class */ (function () {\n    //#endregion\n    //#region Constructor\n    function ArabicShapeRenderer() {\n        //#region Constants\n        this.arabicCharTable = [['\\u0621', '\\uFE80'], ['\\u0622', '\\uFE81', '\\uFE82'],\n            ['\\u0623', '\\uFE83', '\\uFE84'],\n            ['\\u0624', '\\uFE85', '\\uFE86'],\n            ['\\u0625', '\\uFE87', '\\uFE88'],\n            ['\\u0626', '\\uFE89', '\\uFE8A', '\\uFE8B', '\\uFE8C'],\n            ['\\u0627', '\\uFE8D', '\\uFE8E'],\n            ['\\u0628', '\\uFE8F', '\\uFE90', '\\uFE91', '\\uFE92'],\n            ['\\u0629', '\\uFE93', '\\uFE94'],\n            ['\\u062A', '\\uFE95', '\\uFE96', '\\uFE97', '\\uFE98'],\n            ['\\u062B', '\\uFE99', '\\uFE9A', '\\uFE9B', '\\uFE9C'],\n            ['\\u062C', '\\uFE9D', '\\uFE9E', '\\uFE9F', '\\uFEA0'],\n            ['\\u062D', '\\uFEA1', '\\uFEA2', '\\uFEA3', '\\uFEA4'],\n            ['\\u062E', '\\uFEA5', '\\uFEA6', '\\uFEA7', '\\uFEA8'],\n            ['\\u062F', '\\uFEA9', '\\uFEAA'],\n            ['\\u0630', '\\uFEAB', '\\uFEAC'],\n            ['\\u0631', '\\uFEAD', '\\uFEAE'],\n            ['\\u0632', '\\uFEAF', '\\uFEB0'],\n            ['\\u0633', '\\uFEB1', '\\uFEB2', '\\uFEB3', '\\uFEB4'],\n            ['\\u0634', '\\uFEB5', '\\uFEB6', '\\uFEB7', '\\uFEB8'],\n            ['\\u0635', '\\uFEB9', '\\uFEBA', '\\uFEBB', '\\uFEBC'],\n            ['\\u0636', '\\uFEBD', '\\uFEBE', '\\uFEBF', '\\uFEC0'],\n            ['\\u0637', '\\uFEC1', '\\uFEC2', '\\uFEC3', '\\uFEC4'],\n            ['\\u0638', '\\uFEC5', '\\uFEC6', '\\uFEC7', '\\uFEC8'],\n            ['\\u0639', '\\uFEC9', '\\uFECA', '\\uFECB', '\\uFECC'],\n            ['\\u063A', '\\uFECD', '\\uFECE', '\\uFECF', '\\uFED0'],\n            ['\\u0640', '\\u0640', '\\u0640', '\\u0640', '\\u0640'],\n            ['\\u0641', '\\uFED1', '\\uFED2', '\\uFED3', '\\uFED4'],\n            ['\\u0642', '\\uFED5', '\\uFED6', '\\uFED7', '\\uFED8'],\n            ['\\u0643', '\\uFED9', '\\uFEDA', '\\uFEDB', '\\uFEDC'],\n            ['\\u0644', '\\uFEDD', '\\uFEDE', '\\uFEDF', '\\uFEE0'],\n            ['\\u0645', '\\uFEE1', '\\uFEE2', '\\uFEE3', '\\uFEE4'],\n            ['\\u0646', '\\uFEE5', '\\uFEE6', '\\uFEE7', '\\uFEE8'],\n            ['\\u0647', '\\uFEE9', '\\uFEEA', '\\uFEEB', '\\uFEEC'],\n            ['\\u0648', '\\uFEED', '\\uFEEE'],\n            ['\\u0649', '\\uFEEF', '\\uFEF0', '\\uFBE8', '\\uFBE9'],\n            ['\\u064A', '\\uFEF1', '\\uFEF2', '\\uFEF3', '\\uFEF4'],\n            ['\\u0671', '\\uFB50', '\\uFB51'],\n            ['\\u0679', '\\uFB66', '\\uFB67', '\\uFB68', '\\uFB69'],\n            ['\\u067A', '\\uFB5E', '\\uFB5F', '\\uFB60', '\\uFB61'],\n            ['\\u067B', '\\uFB52', '\\uFB53', '\\uFB54', '\\uFB55'],\n            ['\\u067E', '\\uFB56', '\\uFB57', '\\uFB58', '\\uFB59'],\n            ['\\u067F', '\\uFB62', '\\uFB63', '\\uFB64', '\\uFB65'],\n            ['\\u0680', '\\uFB5A', '\\uFB5B', '\\uFB5C', '\\uFB5D'],\n            ['\\u0683', '\\uFB76', '\\uFB77', '\\uFB78', '\\uFB79'],\n            ['\\u0684', '\\uFB72', '\\uFB73', '\\uFB74', '\\uFB75'],\n            ['\\u0686', '\\uFB7A', '\\uFB7B', '\\uFB7C', '\\uFB7D'],\n            ['\\u0687', '\\uFB7E', '\\uFB7F', '\\uFB80', '\\uFB81'],\n            ['\\u0688', '\\uFB88', '\\uFB89'],\n            ['\\u068C', '\\uFB84', '\\uFB85'],\n            ['\\u068D', '\\uFB82', '\\uFB83'],\n            ['\\u068E', '\\uFB86', '\\uFB87'],\n            ['\\u0691', '\\uFB8C', '\\uFB8D'],\n            ['\\u0698', '\\uFB8A', '\\uFB8B'],\n            ['\\u06A4', '\\uFB6A', '\\uFB6B', '\\uFB6C', '\\uFB6D'],\n            ['\\u06A6', '\\uFB6E', '\\uFB6F', '\\uFB70', '\\uFB71'],\n            ['\\u06A9', '\\uFB8E', '\\uFB8F', '\\uFB90', '\\uFB91'],\n            ['\\u06AD', '\\uFBD3', '\\uFBD4', '\\uFBD5', '\\uFBD6'],\n            ['\\u06AF', '\\uFB92', '\\uFB93', '\\uFB94', '\\uFB95'],\n            ['\\u06B1', '\\uFB9A', '\\uFB9B', '\\uFB9C', '\\uFB9D'],\n            ['\\u06B3', '\\uFB96', '\\uFB97', '\\uFB98', '\\uFB99'],\n            ['\\u06BA', '\\uFB9E', '\\uFB9F'],\n            ['\\u06BB', '\\uFBA0', '\\uFBA1', '\\uFBA2', '\\uFBA3'],\n            ['\\u06BE', '\\uFBAA', '\\uFBAB', '\\uFBAC', '\\uFBAD'],\n            ['\\u06C0', '\\uFBA4', '\\uFBA5'],\n            ['\\u06C1', '\\uFBA6', '\\uFBA7', '\\uFBA8', '\\uFBA9'],\n            ['\\u06C5', '\\uFBE0', '\\uFBE1'],\n            ['\\u06C6', '\\uFBD9', '\\uFBDA'],\n            ['\\u06C7', '\\uFBD7', '\\uFBD8'],\n            ['\\u06C8', '\\uFBDB', '\\uFBDC'],\n            ['\\u06C9', '\\uFBE2', '\\uFBE3'],\n            ['\\u06CB', '\\uFBDE', '\\uFBDF'],\n            ['\\u06CC', '\\uFBFC', '\\uFBFD', '\\uFBFE', '\\uFBFF'],\n            ['\\u06D0', '\\uFBE4', '\\uFBE5', '\\uFBE6', '\\uFBE7'],\n            ['\\u06D2', '\\uFBAE', '\\uFBAF'],\n            ['\\u06D3', '\\uFBB0', '\\uFBB1']\n        ];\n        this.alef = '\\u0627';\n        this.alefHamza = '\\u0623';\n        this.alefHamzaBelow = '\\u0625';\n        this.alefMadda = '\\u0622';\n        this.lam = '\\u0644';\n        this.hamza = '\\u0621';\n        this.zeroWidthJoiner = '\\u200D';\n        this.hamzaAbove = '\\u0654';\n        this.hamzaBelow = '\\u0655';\n        this.wawHamza = '\\u0624';\n        this.yehHamza = '\\u0626';\n        this.waw = '\\u0648';\n        this.alefMaksura = '\\u0649';\n        this.yeh = '\\u064A';\n        this.farsiYeh = '\\u06CC';\n        this.shadda = '\\u0651';\n        this.madda = '\\u0653';\n        this.lwa = '\\uFEFB';\n        this.lwawh = '\\uFEF7';\n        this.lwawhb = '\\uFEF9';\n        this.lwawm = '\\uFEF5';\n        this.bwhb = '\\u06D3';\n        this.fathatan = '\\u064B';\n        this.superScriptalef = '\\u0670';\n        this.vowel = 0x1;\n        // #endregion\n        //#region Fields\n        this.arabicMapTable = new Dictionary();\n        for (var i = 0; i < this.arabicCharTable.length; i++) {\n            this.arabicMapTable.setValue(this.arabicCharTable[i][0], this.arabicCharTable[i]);\n        }\n    }\n    //#endregion\n    //#region implementation\n    ArabicShapeRenderer.prototype.getCharacterShape = function (input, index) {\n        if ((input >= this.hamza) && (input <= this.bwhb)) {\n            var value = [];\n            if (this.arabicMapTable.getValue(input)) {\n                value = this.arabicMapTable.getValue(input);\n                return value[index + 1];\n            }\n        }\n        else if (input >= this.lwawm && input <= this.lwa) {\n            return (input);\n        }\n        return input;\n    };\n    ArabicShapeRenderer.prototype.shape = function (text, level) {\n        var builder = '';\n        var str2 = '';\n        for (var i = 0; i < text.length; i++) {\n            var c = text[i];\n            if (c >= '؀' && c <= 'ۿ') {\n                //if(c>= 0x0600.toString() && c<= 0x06FF.toString()) {\n                str2 = str2 + c;\n            }\n            else {\n                if (str2.length > 0) {\n                    var st = this.doShape(str2.toString(), 0);\n                    builder = builder + st;\n                    str2 = '';\n                }\n                builder = builder + c;\n            }\n        }\n        if (str2.length > 0) {\n            var st = this.doShape(str2.toString(), 0);\n            builder = builder + st;\n        }\n        return builder.toString();\n    };\n    ArabicShapeRenderer.prototype.doShape = function (input, level) {\n        var str = '';\n        var ligature = 0;\n        var len = 0;\n        var i = 0;\n        var next = '';\n        var previous = new ArabicShape();\n        var present = new ArabicShape();\n        while (i < input.length) {\n            next = input[i++];\n            ligature = this.ligature(next, present);\n            if (ligature === 0) {\n                var shapeCount = this.getShapeCount(next);\n                len = (shapeCount === 1) ? 0 : 2;\n                if (previous.Shapes > 2) {\n                    len += 1;\n                }\n                len = len % (present.Shapes);\n                present.Value = this.getCharacterShape(present.Value, len);\n                str = this.append(str, previous, level);\n                previous = present;\n                present = new ArabicShape();\n                present.Value = next;\n                present.Shapes = shapeCount;\n                present.Ligature++;\n            }\n        }\n        len = (previous.Shapes > 2) ? 1 : 0;\n        len = len % (present.Shapes);\n        present.Value = this.getCharacterShape(present.Value, len);\n        str = this.append(str, previous, level);\n        str = this.append(str, present, level);\n        return str.toString();\n    };\n    ArabicShapeRenderer.prototype.append = function (builder, shape, level) {\n        if (shape.Value !== '') {\n            builder = builder + shape.Value;\n            shape.Ligature -= 1;\n            if (shape.Type !== '') {\n                if ((level & this.vowel) === 0) {\n                    builder = builder + shape.Type;\n                    shape.Ligature -= 1;\n                }\n                else {\n                    shape.Ligature -= 1;\n                }\n            }\n            if (shape.vowel !== '') {\n                if ((level & this.vowel) === 0) {\n                    builder = builder + shape.vowel;\n                    shape.Ligature -= 1;\n                }\n                else {\n                    shape.Ligature -= 1;\n                }\n            }\n        }\n        return builder;\n    };\n    ArabicShapeRenderer.prototype.ligature = function (value, shape) {\n        if (shape.Value !== '') {\n            var result = 0;\n            if ((value >= this.fathatan && value <= this.hamzaBelow) || value === this.superScriptalef) {\n                result = 1;\n                if ((shape.vowel !== '') && (value !== this.shadda)) {\n                    result = 2;\n                }\n                if (value === this.shadda) {\n                    if (shape.Type == null) {\n                        shape.Type = this.shadda;\n                    }\n                    else {\n                        return 0;\n                    }\n                }\n                else if (value === this.hamzaBelow) {\n                    if (shape.Value === this.alef) {\n                        shape.Value = this.alefHamzaBelow;\n                        result = 2;\n                    }\n                    else if (value === this.lwa) {\n                        shape.Value = this.lwawhb;\n                        result = 2;\n                    }\n                    else {\n                        shape.Type = this.hamzaBelow;\n                    }\n                }\n                else if (value === this.hamzaAbove) {\n                    if (shape.Value === this.alef) {\n                        shape.Value = this.alefHamza;\n                        result = 2;\n                    }\n                    else if (shape.Value === this.lwa) {\n                        shape.Value = this.lwawh;\n                        result = 2;\n                    }\n                    else if (shape.Value === this.waw) {\n                        shape.Value = this.wawHamza;\n                        result = 2;\n                    }\n                    else if (shape.Value === this.yeh || shape.Value === this.alefMaksura || shape.Value === this.farsiYeh) {\n                        shape.Value = this.yehHamza;\n                        result = 2;\n                    }\n                    else {\n                        shape.Type = this.hamzaAbove;\n                    }\n                }\n                else if (value === this.madda) {\n                    if (shape.Value === this.alef) {\n                        shape.Value = this.alefMadda;\n                        result = 2;\n                    }\n                }\n                else {\n                    shape.vowel = value;\n                }\n                if (result === 1) {\n                    shape.Ligature++;\n                }\n                return result;\n            }\n            if (shape.vowel !== '') {\n                return 0;\n            }\n            if (shape.Value === this.lam) {\n                if (value === this.alef) {\n                    shape.Value = this.lwa;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n                else if (value === this.alefHamza) {\n                    shape.Value = this.lwawh;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n                else if (value === this.alefHamzaBelow) {\n                    shape.Value = this.lwawhb;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n                else if (value === this.alefMadda) {\n                    shape.Value = this.lwawm;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n            }\n            // else if (shape.Value === '') {\n            //     shape.Value = value;\n            //     shape.Shapes = this.getShapeCount(value);\n            //     result = 1;\n            // }\n            return result;\n        }\n        else {\n            return 0;\n        }\n    };\n    ArabicShapeRenderer.prototype.getShapeCount = function (shape) {\n        if ((shape >= this.hamza) && (shape <= this.bwhb) && !((shape >= this.fathatan && shape <= this.hamzaBelow)\n            || shape === this.superScriptalef)) {\n            var c = [];\n            if (this.arabicMapTable.getValue(shape)) {\n                c = this.arabicMapTable.getValue(shape);\n                return c.length - 1;\n            }\n        }\n        else if (shape === this.zeroWidthJoiner) {\n            return 4;\n        }\n        return 1;\n    };\n    return ArabicShapeRenderer;\n}());\nexport { ArabicShapeRenderer };\n//#endregion\n//#region Internals\nvar ArabicShape = /** @class */ (function () {\n    function ArabicShape() {\n        //#region Fields\n        this.shapeValue = '';\n        this.shapeType = '';\n        this.shapeVowel = '';\n        this.shapeLigature = 0;\n        this.shapeShapes = 1;\n        //#endregion\n    }\n    Object.defineProperty(ArabicShape.prototype, \"Value\", {\n        //#endregion\n        //#region Properties \n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeValue;\n        },\n        set: function (value) {\n            this.shapeValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"Type\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeType;\n        },\n        set: function (value) {\n            this.shapeType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"vowel\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeVowel;\n        },\n        set: function (value) {\n            this.shapeVowel = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"Ligature\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeLigature;\n        },\n        set: function (value) {\n            this.shapeLigature = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"Shapes\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeShapes;\n        },\n        set: function (value) {\n            this.shapeShapes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ArabicShape;\n}());\nexport { ArabicShape };\n//#endregion\n","/**\n * Bidi.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../../../collections/dictionary';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar Bidi = /** @class */ (function () {\n    //#endregion\n    //#region Constructor\n    function Bidi() {\n        //#region Fields\n        this.indexes = [];\n        this.indexLevels = [];\n        this.mirroringShapeCharacters = new Dictionary();\n        this.update();\n    }\n    //#endregion\n    //#region implementation\n    Bidi.prototype.doMirrorShaping = function (text) {\n        var result = [];\n        for (var i = 0; i < text.length; i++) {\n            if (((this.indexLevels[i] & 1) === 1) && this.mirroringShapeCharacters.containsKey(text[i].charCodeAt(0))) {\n                result[i] = String.fromCharCode(this.mirroringShapeCharacters.getValue(text[i].charCodeAt(0)));\n            }\n            else {\n                result[i] = text[i].toString();\n            }\n        }\n        var res = '';\n        for (var j = 0; j < result.length; j++) {\n            res = res + result[j];\n        }\n        return res;\n    };\n    Bidi.prototype.getLogicalToVisualString = function (inputText, isRtl) {\n        var rtlCharacters = new RtlCharacters();\n        this.indexLevels = rtlCharacters.getVisualOrder(inputText, isRtl);\n        this.setDefaultIndexLevel();\n        this.doOrder(0, this.indexLevels.length - 1);\n        var text = this.doMirrorShaping(inputText);\n        //let text : string = inputText;\n        var resultBuilder = '';\n        for (var i = 0; i < this.indexes.length; i++) {\n            var index = this.indexes[i];\n            resultBuilder += text[index];\n        }\n        return resultBuilder.toString();\n    };\n    Bidi.prototype.setDefaultIndexLevel = function () {\n        for (var i = 0; i < this.indexLevels.length; i++) {\n            this.indexes[i] = i;\n        }\n    };\n    Bidi.prototype.doOrder = function (sIndex, eIndex) {\n        var max = this.indexLevels[sIndex];\n        var min = max;\n        var odd = max;\n        var even = max;\n        for (var i = sIndex + 1; i <= eIndex; ++i) {\n            var data = this.indexLevels[i];\n            if (data > max) {\n                max = data;\n            }\n            else if (data < min) {\n                min = data;\n            }\n            odd &= data;\n            even |= data;\n        }\n        if ((even & 1) === 0) {\n            return;\n        }\n        if ((odd & 1) === 1) {\n            this.reArrange(sIndex, eIndex + 1);\n            return;\n        }\n        min |= 1;\n        while (max >= min) {\n            var pstart = sIndex;\n            /*tslint:disable:no-constant-condition */\n            while (true) {\n                while (pstart <= eIndex) {\n                    if (this.indexLevels[pstart] >= max) {\n                        break;\n                    }\n                    pstart += 1;\n                }\n                if (pstart > eIndex) {\n                    break;\n                }\n                var pend = pstart + 1;\n                while (pend <= eIndex) {\n                    if (this.indexLevels[pend] < max) {\n                        break;\n                    }\n                    pend += 1;\n                }\n                this.reArrange(pstart, pend);\n                pstart = pend + 1;\n            }\n            max -= 1;\n        }\n    };\n    Bidi.prototype.reArrange = function (i, j) {\n        var length = (i + j) / 2;\n        --j;\n        for (; i < length; ++i, --j) {\n            var temp = this.indexes[i];\n            this.indexes[i] = this.indexes[j];\n            this.indexes[j] = temp;\n        }\n    };\n    Bidi.prototype.update = function () {\n        this.mirroringShapeCharacters.setValue(40, 41);\n        this.mirroringShapeCharacters.setValue(41, 40);\n        this.mirroringShapeCharacters.setValue(60, 62);\n        this.mirroringShapeCharacters.setValue(62, 60);\n        this.mirroringShapeCharacters.setValue(91, 93);\n        this.mirroringShapeCharacters.setValue(93, 91);\n        this.mirroringShapeCharacters.setValue(123, 125);\n        this.mirroringShapeCharacters.setValue(125, 123);\n        this.mirroringShapeCharacters.setValue(171, 187);\n        this.mirroringShapeCharacters.setValue(187, 171);\n        this.mirroringShapeCharacters.setValue(8249, 8250);\n        this.mirroringShapeCharacters.setValue(8250, 8249);\n        this.mirroringShapeCharacters.setValue(8261, 8262);\n        this.mirroringShapeCharacters.setValue(8262, 8261);\n        this.mirroringShapeCharacters.setValue(8317, 8318);\n        this.mirroringShapeCharacters.setValue(8318, 8317);\n        this.mirroringShapeCharacters.setValue(8333, 8334);\n        this.mirroringShapeCharacters.setValue(8334, 8333);\n        this.mirroringShapeCharacters.setValue(8712, 8715);\n        this.mirroringShapeCharacters.setValue(8713, 8716);\n        this.mirroringShapeCharacters.setValue(8714, 8717);\n        this.mirroringShapeCharacters.setValue(8715, 8712);\n        this.mirroringShapeCharacters.setValue(8716, 8713);\n        this.mirroringShapeCharacters.setValue(8717, 8714);\n        this.mirroringShapeCharacters.setValue(8725, 10741);\n        this.mirroringShapeCharacters.setValue(8764, 8765);\n        this.mirroringShapeCharacters.setValue(8765, 8764);\n        this.mirroringShapeCharacters.setValue(8771, 8909);\n        this.mirroringShapeCharacters.setValue(8786, 8787);\n        this.mirroringShapeCharacters.setValue(8787, 8786);\n        this.mirroringShapeCharacters.setValue(8788, 8789);\n        this.mirroringShapeCharacters.setValue(8789, 8788);\n        this.mirroringShapeCharacters.setValue(8804, 8805);\n        this.mirroringShapeCharacters.setValue(8805, 8804);\n        this.mirroringShapeCharacters.setValue(8806, 8807);\n        this.mirroringShapeCharacters.setValue(8807, 8806);\n        this.mirroringShapeCharacters.setValue(8808, 8809);\n        this.mirroringShapeCharacters.setValue(8809, 8808);\n        this.mirroringShapeCharacters.setValue(8810, 8811);\n        this.mirroringShapeCharacters.setValue(8811, 8810);\n        this.mirroringShapeCharacters.setValue(8814, 8815);\n        this.mirroringShapeCharacters.setValue(8815, 8814);\n        this.mirroringShapeCharacters.setValue(8816, 8817);\n        this.mirroringShapeCharacters.setValue(8817, 8816);\n        this.mirroringShapeCharacters.setValue(8818, 8819);\n        this.mirroringShapeCharacters.setValue(8819, 8818);\n        this.mirroringShapeCharacters.setValue(8820, 8821);\n        this.mirroringShapeCharacters.setValue(8821, 8820);\n        this.mirroringShapeCharacters.setValue(8822, 8823);\n        this.mirroringShapeCharacters.setValue(8823, 8822);\n        this.mirroringShapeCharacters.setValue(8824, 8825);\n        this.mirroringShapeCharacters.setValue(8825, 8824);\n        this.mirroringShapeCharacters.setValue(8826, 8827);\n        this.mirroringShapeCharacters.setValue(8827, 8826);\n        this.mirroringShapeCharacters.setValue(8828, 8829);\n        this.mirroringShapeCharacters.setValue(8829, 8828);\n        this.mirroringShapeCharacters.setValue(8830, 8831);\n        this.mirroringShapeCharacters.setValue(8831, 8830);\n        this.mirroringShapeCharacters.setValue(8832, 8833);\n        this.mirroringShapeCharacters.setValue(8833, 8832);\n        this.mirroringShapeCharacters.setValue(8834, 8835);\n        this.mirroringShapeCharacters.setValue(8835, 8834);\n        this.mirroringShapeCharacters.setValue(8836, 8837);\n        this.mirroringShapeCharacters.setValue(8837, 8836);\n        this.mirroringShapeCharacters.setValue(8838, 8839);\n        this.mirroringShapeCharacters.setValue(8839, 8838);\n        this.mirroringShapeCharacters.setValue(8840, 8841);\n        this.mirroringShapeCharacters.setValue(8841, 8840);\n        this.mirroringShapeCharacters.setValue(8842, 8843);\n        this.mirroringShapeCharacters.setValue(8843, 8842);\n        this.mirroringShapeCharacters.setValue(8847, 8848);\n        this.mirroringShapeCharacters.setValue(8848, 8847);\n        this.mirroringShapeCharacters.setValue(8849, 8850);\n        this.mirroringShapeCharacters.setValue(8850, 8849);\n        this.mirroringShapeCharacters.setValue(8856, 10680);\n        this.mirroringShapeCharacters.setValue(8866, 8867);\n        this.mirroringShapeCharacters.setValue(8867, 8866);\n        this.mirroringShapeCharacters.setValue(8870, 10974);\n        this.mirroringShapeCharacters.setValue(8872, 10980);\n        this.mirroringShapeCharacters.setValue(8873, 10979);\n        this.mirroringShapeCharacters.setValue(8875, 10981);\n        this.mirroringShapeCharacters.setValue(8880, 8881);\n        this.mirroringShapeCharacters.setValue(8881, 8880);\n        this.mirroringShapeCharacters.setValue(8882, 8883);\n        this.mirroringShapeCharacters.setValue(8883, 8882);\n        this.mirroringShapeCharacters.setValue(8884, 8885);\n        this.mirroringShapeCharacters.setValue(8885, 8884);\n        /*tslint:disable:max-func-body-length */\n        this.mirroringShapeCharacters.setValue(8886, 8887);\n        this.mirroringShapeCharacters.setValue(8887, 8886);\n        this.mirroringShapeCharacters.setValue(8905, 8906);\n        this.mirroringShapeCharacters.setValue(8906, 8905);\n        this.mirroringShapeCharacters.setValue(8907, 8908);\n        this.mirroringShapeCharacters.setValue(8908, 8907);\n        this.mirroringShapeCharacters.setValue(8909, 8771);\n        this.mirroringShapeCharacters.setValue(8912, 8913);\n        this.mirroringShapeCharacters.setValue(8913, 8912);\n        this.mirroringShapeCharacters.setValue(8918, 8919);\n        this.mirroringShapeCharacters.setValue(8919, 8918);\n        this.mirroringShapeCharacters.setValue(8920, 8921);\n        this.mirroringShapeCharacters.setValue(8921, 8920);\n        this.mirroringShapeCharacters.setValue(8922, 8923);\n        this.mirroringShapeCharacters.setValue(8923, 8922);\n        this.mirroringShapeCharacters.setValue(8924, 8925);\n        this.mirroringShapeCharacters.setValue(8925, 8924);\n        this.mirroringShapeCharacters.setValue(8926, 8927);\n        this.mirroringShapeCharacters.setValue(8927, 8926);\n        this.mirroringShapeCharacters.setValue(8928, 8929);\n        this.mirroringShapeCharacters.setValue(8929, 8928);\n        this.mirroringShapeCharacters.setValue(8930, 8931);\n        this.mirroringShapeCharacters.setValue(8931, 8930);\n        this.mirroringShapeCharacters.setValue(8932, 8933);\n        this.mirroringShapeCharacters.setValue(8933, 8932);\n        this.mirroringShapeCharacters.setValue(8934, 8935);\n        this.mirroringShapeCharacters.setValue(8935, 8934);\n        this.mirroringShapeCharacters.setValue(8936, 8937);\n        this.mirroringShapeCharacters.setValue(8937, 8936);\n        this.mirroringShapeCharacters.setValue(8938, 8939);\n        this.mirroringShapeCharacters.setValue(8939, 8938);\n        this.mirroringShapeCharacters.setValue(8940, 8941);\n        this.mirroringShapeCharacters.setValue(8941, 8940);\n        this.mirroringShapeCharacters.setValue(8944, 8945);\n        this.mirroringShapeCharacters.setValue(8945, 8944);\n        this.mirroringShapeCharacters.setValue(8946, 8954);\n        this.mirroringShapeCharacters.setValue(8947, 8955);\n        this.mirroringShapeCharacters.setValue(8948, 8956);\n        this.mirroringShapeCharacters.setValue(8950, 8957);\n        this.mirroringShapeCharacters.setValue(8951, 8958);\n        this.mirroringShapeCharacters.setValue(8954, 8946);\n        this.mirroringShapeCharacters.setValue(8955, 8947);\n        this.mirroringShapeCharacters.setValue(8956, 8948);\n        this.mirroringShapeCharacters.setValue(8957, 8950);\n        this.mirroringShapeCharacters.setValue(8958, 8951);\n        this.mirroringShapeCharacters.setValue(8968, 8969);\n        this.mirroringShapeCharacters.setValue(8969, 8968);\n        this.mirroringShapeCharacters.setValue(8970, 8971);\n        this.mirroringShapeCharacters.setValue(8971, 8970);\n        this.mirroringShapeCharacters.setValue(9001, 9002);\n        this.mirroringShapeCharacters.setValue(9002, 9001);\n        this.mirroringShapeCharacters.setValue(10088, 10089);\n        this.mirroringShapeCharacters.setValue(10089, 10088);\n        this.mirroringShapeCharacters.setValue(10090, 10091);\n        this.mirroringShapeCharacters.setValue(10091, 10090);\n        this.mirroringShapeCharacters.setValue(10092, 10093);\n        this.mirroringShapeCharacters.setValue(10093, 10092);\n        this.mirroringShapeCharacters.setValue(10094, 10095);\n        this.mirroringShapeCharacters.setValue(10095, 10094);\n        this.mirroringShapeCharacters.setValue(10096, 10097);\n        this.mirroringShapeCharacters.setValue(10097, 10096);\n        this.mirroringShapeCharacters.setValue(10098, 10099);\n        this.mirroringShapeCharacters.setValue(10099, 10098);\n        this.mirroringShapeCharacters.setValue(10100, 10101);\n        this.mirroringShapeCharacters.setValue(10101, 10100);\n        this.mirroringShapeCharacters.setValue(10197, 10198);\n        this.mirroringShapeCharacters.setValue(10198, 10197);\n        this.mirroringShapeCharacters.setValue(10205, 10206);\n        this.mirroringShapeCharacters.setValue(10206, 10205);\n        this.mirroringShapeCharacters.setValue(10210, 10211);\n        this.mirroringShapeCharacters.setValue(10211, 10210);\n        this.mirroringShapeCharacters.setValue(10212, 10213);\n        this.mirroringShapeCharacters.setValue(10213, 10212);\n        this.mirroringShapeCharacters.setValue(10214, 10215);\n        this.mirroringShapeCharacters.setValue(10215, 10214);\n        this.mirroringShapeCharacters.setValue(10216, 10217);\n        this.mirroringShapeCharacters.setValue(10217, 10216);\n        this.mirroringShapeCharacters.setValue(10218, 10219);\n        this.mirroringShapeCharacters.setValue(10219, 10218);\n        this.mirroringShapeCharacters.setValue(10627, 10628);\n        this.mirroringShapeCharacters.setValue(10628, 10627);\n        this.mirroringShapeCharacters.setValue(10629, 10630);\n        this.mirroringShapeCharacters.setValue(10630, 10629);\n        this.mirroringShapeCharacters.setValue(10631, 10632);\n        this.mirroringShapeCharacters.setValue(10632, 10631);\n        this.mirroringShapeCharacters.setValue(10633, 10634);\n        this.mirroringShapeCharacters.setValue(10634, 10633);\n        this.mirroringShapeCharacters.setValue(10635, 10636);\n        this.mirroringShapeCharacters.setValue(10636, 10635);\n        this.mirroringShapeCharacters.setValue(10637, 10640);\n        this.mirroringShapeCharacters.setValue(10638, 10639);\n        this.mirroringShapeCharacters.setValue(10639, 10638);\n        this.mirroringShapeCharacters.setValue(10640, 10637);\n        this.mirroringShapeCharacters.setValue(10641, 10642);\n        this.mirroringShapeCharacters.setValue(10642, 10641);\n        this.mirroringShapeCharacters.setValue(10643, 10644);\n        this.mirroringShapeCharacters.setValue(10644, 10643);\n        this.mirroringShapeCharacters.setValue(10645, 10646);\n        this.mirroringShapeCharacters.setValue(10646, 10645);\n        this.mirroringShapeCharacters.setValue(10647, 10648);\n        this.mirroringShapeCharacters.setValue(10648, 10647);\n        this.mirroringShapeCharacters.setValue(10680, 8856);\n        this.mirroringShapeCharacters.setValue(10688, 10689);\n        this.mirroringShapeCharacters.setValue(10689, 10688);\n        this.mirroringShapeCharacters.setValue(10692, 10693);\n        this.mirroringShapeCharacters.setValue(10693, 10692);\n        this.mirroringShapeCharacters.setValue(10703, 10704);\n        this.mirroringShapeCharacters.setValue(10704, 10703);\n        this.mirroringShapeCharacters.setValue(10705, 10706);\n        this.mirroringShapeCharacters.setValue(10706, 10705);\n        this.mirroringShapeCharacters.setValue(10708, 10709);\n        this.mirroringShapeCharacters.setValue(10709, 10708);\n        this.mirroringShapeCharacters.setValue(10712, 10713);\n        this.mirroringShapeCharacters.setValue(10713, 10712);\n        this.mirroringShapeCharacters.setValue(10714, 10715);\n        this.mirroringShapeCharacters.setValue(10715, 10714);\n        this.mirroringShapeCharacters.setValue(10741, 8725);\n        this.mirroringShapeCharacters.setValue(10744, 10745);\n        this.mirroringShapeCharacters.setValue(10745, 10744);\n        this.mirroringShapeCharacters.setValue(10748, 10749);\n        this.mirroringShapeCharacters.setValue(10749, 10748);\n        this.mirroringShapeCharacters.setValue(10795, 10796);\n        this.mirroringShapeCharacters.setValue(10796, 10795);\n        this.mirroringShapeCharacters.setValue(10797, 10796);\n        this.mirroringShapeCharacters.setValue(10798, 10797);\n        this.mirroringShapeCharacters.setValue(10804, 10805);\n        this.mirroringShapeCharacters.setValue(10805, 10804);\n        this.mirroringShapeCharacters.setValue(10812, 10813);\n        this.mirroringShapeCharacters.setValue(10813, 10812);\n        this.mirroringShapeCharacters.setValue(10852, 10853);\n        this.mirroringShapeCharacters.setValue(10853, 10852);\n        this.mirroringShapeCharacters.setValue(10873, 10874);\n        this.mirroringShapeCharacters.setValue(10874, 10873);\n        this.mirroringShapeCharacters.setValue(10877, 10878);\n        this.mirroringShapeCharacters.setValue(10878, 10877);\n        this.mirroringShapeCharacters.setValue(10879, 10880);\n        this.mirroringShapeCharacters.setValue(10880, 10879);\n        this.mirroringShapeCharacters.setValue(10881, 10882);\n        this.mirroringShapeCharacters.setValue(10882, 10881);\n        this.mirroringShapeCharacters.setValue(10883, 10884);\n        this.mirroringShapeCharacters.setValue(10884, 10883);\n        this.mirroringShapeCharacters.setValue(10891, 10892);\n        this.mirroringShapeCharacters.setValue(10892, 10891);\n        this.mirroringShapeCharacters.setValue(10897, 10898);\n        this.mirroringShapeCharacters.setValue(10898, 10897);\n        this.mirroringShapeCharacters.setValue(10899, 10900);\n        this.mirroringShapeCharacters.setValue(10900, 10899);\n        this.mirroringShapeCharacters.setValue(10901, 10902);\n        this.mirroringShapeCharacters.setValue(10902, 10901);\n        this.mirroringShapeCharacters.setValue(10903, 10904);\n        this.mirroringShapeCharacters.setValue(10904, 10903);\n        this.mirroringShapeCharacters.setValue(10905, 10906);\n        this.mirroringShapeCharacters.setValue(10906, 10905);\n        this.mirroringShapeCharacters.setValue(10907, 10908);\n        this.mirroringShapeCharacters.setValue(10908, 10907);\n        this.mirroringShapeCharacters.setValue(10913, 10914);\n        this.mirroringShapeCharacters.setValue(10914, 10913);\n        this.mirroringShapeCharacters.setValue(10918, 10919);\n        this.mirroringShapeCharacters.setValue(10919, 10918);\n        this.mirroringShapeCharacters.setValue(10920, 10921);\n        this.mirroringShapeCharacters.setValue(10921, 10920);\n        this.mirroringShapeCharacters.setValue(10922, 10923);\n        this.mirroringShapeCharacters.setValue(10923, 10922);\n        this.mirroringShapeCharacters.setValue(10924, 10925);\n        this.mirroringShapeCharacters.setValue(10925, 10924);\n        this.mirroringShapeCharacters.setValue(10927, 10928);\n        this.mirroringShapeCharacters.setValue(10928, 10927);\n        this.mirroringShapeCharacters.setValue(10931, 10932);\n        this.mirroringShapeCharacters.setValue(10932, 10931);\n        this.mirroringShapeCharacters.setValue(10939, 10940);\n        this.mirroringShapeCharacters.setValue(10940, 10939);\n        this.mirroringShapeCharacters.setValue(10941, 10942);\n        this.mirroringShapeCharacters.setValue(10942, 10941);\n        this.mirroringShapeCharacters.setValue(10943, 10944);\n        this.mirroringShapeCharacters.setValue(10944, 10943);\n        this.mirroringShapeCharacters.setValue(10945, 10946);\n        this.mirroringShapeCharacters.setValue(10946, 10945);\n        this.mirroringShapeCharacters.setValue(10947, 10948);\n        this.mirroringShapeCharacters.setValue(10948, 10947);\n        this.mirroringShapeCharacters.setValue(10949, 10950);\n        this.mirroringShapeCharacters.setValue(10950, 10949);\n        this.mirroringShapeCharacters.setValue(10957, 10958);\n        this.mirroringShapeCharacters.setValue(10958, 10957);\n        this.mirroringShapeCharacters.setValue(10959, 10960);\n        this.mirroringShapeCharacters.setValue(10960, 10959);\n        this.mirroringShapeCharacters.setValue(10961, 10962);\n        this.mirroringShapeCharacters.setValue(10962, 10961);\n        this.mirroringShapeCharacters.setValue(10963, 10964);\n        this.mirroringShapeCharacters.setValue(10964, 10963);\n        this.mirroringShapeCharacters.setValue(10965, 10966);\n        this.mirroringShapeCharacters.setValue(10966, 10965);\n        this.mirroringShapeCharacters.setValue(10974, 8870);\n        this.mirroringShapeCharacters.setValue(10979, 8873);\n        this.mirroringShapeCharacters.setValue(10980, 8872);\n        this.mirroringShapeCharacters.setValue(10981, 8875);\n        this.mirroringShapeCharacters.setValue(10988, 10989);\n        this.mirroringShapeCharacters.setValue(10989, 10988);\n        this.mirroringShapeCharacters.setValue(10999, 11000);\n        this.mirroringShapeCharacters.setValue(11000, 10999);\n        this.mirroringShapeCharacters.setValue(11001, 11002);\n        this.mirroringShapeCharacters.setValue(11002, 11001);\n        this.mirroringShapeCharacters.setValue(12296, 12297);\n        this.mirroringShapeCharacters.setValue(12297, 12296);\n        this.mirroringShapeCharacters.setValue(12298, 12299);\n        this.mirroringShapeCharacters.setValue(12299, 12298);\n        this.mirroringShapeCharacters.setValue(12300, 12301);\n        this.mirroringShapeCharacters.setValue(12301, 12300);\n        this.mirroringShapeCharacters.setValue(12302, 12303);\n        this.mirroringShapeCharacters.setValue(12303, 12302);\n        this.mirroringShapeCharacters.setValue(12304, 12305);\n        this.mirroringShapeCharacters.setValue(12305, 12304);\n        this.mirroringShapeCharacters.setValue(12308, 12309);\n        this.mirroringShapeCharacters.setValue(12309, 12308);\n        this.mirroringShapeCharacters.setValue(12310, 12311);\n        this.mirroringShapeCharacters.setValue(12311, 12310);\n        this.mirroringShapeCharacters.setValue(12312, 12313);\n        this.mirroringShapeCharacters.setValue(12313, 12312);\n        this.mirroringShapeCharacters.setValue(12314, 12315);\n        this.mirroringShapeCharacters.setValue(12315, 12314);\n        this.mirroringShapeCharacters.setValue(65288, 65289);\n        this.mirroringShapeCharacters.setValue(65289, 65288);\n        this.mirroringShapeCharacters.setValue(65308, 65310);\n        this.mirroringShapeCharacters.setValue(65310, 65308);\n        this.mirroringShapeCharacters.setValue(65339, 65341);\n        this.mirroringShapeCharacters.setValue(65341, 65339);\n        this.mirroringShapeCharacters.setValue(65371, 65373);\n        this.mirroringShapeCharacters.setValue(65373, 65371);\n        this.mirroringShapeCharacters.setValue(65375, 65376);\n        this.mirroringShapeCharacters.setValue(65376, 65375);\n        this.mirroringShapeCharacters.setValue(65378, 65379);\n        this.mirroringShapeCharacters.setValue(65379, 65378);\n    };\n    return Bidi;\n}());\nexport { Bidi };\nvar RtlCharacters = /** @class */ (function () {\n    //#endregion\n    //#region constructors\n    function RtlCharacters() {\n        //#region fields\n        /// <summary>\n        /// Specifies the character types.\n        /// </summary>\n        this.types = [];\n        /// <summary>\n        /// Specifies the text order (RTL or LTR).\n        /// </summary>\n        this.textOrder = -1;\n        /// <summary>\n        /// Specifies the RTL character types.\n        /// </summary>\n        /* tslint:disable-next-line:prefer-array-literal */\n        this.rtlCharacterTypes = new Array(65536);\n        //#endregion\n        //#region constants\n        /// <summary>\n        /// Left-to-Right (Non-European or non-Arabic digits).\n        /// </summary>\n        this.L = 0;\n        /// <summary>\n        /// Left-to-Right Embedding\n        /// </summary>\n        this.LRE = 1;\n        /// <summary>\n        /// Left-to-Right Override\n        /// </summary>\n        this.LRO = 2;\n        /// <summary>\n        /// Right-to-Left (Hebrew alphabet, and related punctuation).\n        /// </summary>\n        this.R = 3;\n        /// <summary>\n        /// Right-to-Left Arabic \n        /// </summary>\n        this.AL = 4;\n        /// <summary>\n        /// Right-to-Left Embedding.\n        /// </summary>\n        this.RLE = 5;\n        /// <summary>\n        /// Right-to-Left Override\n        /// </summary>\n        this.RLO = 6;\n        /// <summary>\n        /// Pop Directional Format\n        /// </summary>\n        this.PDF = 7;\n        /// <summary>\n        /// European Number (European digits, Eastern Arabic-Indic digits).\n        /// </summary>\n        this.EN = 8;\n        /// <summary>\n        /// European Number Separator (Plus sign, Minus sign).\n        /// </summary>\n        this.ES = 9;\n        /// <summary>\n        /// European Number Terminator (Degree sign, currency symbols).\n        /// </summary>\n        this.ET = 10;\n        /// <summary>\n        /// Arabic Number (Arabic-Indic digits, Arabic decimal and thousands separators).\n        /// </summary>\n        this.AN = 11;\n        /// <summary>\n        /// Common Number Separator (Colon, Comma, Full Stop, No-Break Space.\n        /// </summary>\n        this.CS = 12;\n        /// <summary>\n        /// Nonspacing Mark (Characters with the General_Category values).\n        /// </summary>\n        this.NSM = 13;\n        /// <summary>\n        /// Boundary Neutral (Default ignorables, non-characters, and control characters, other than those explicitly given other types.)\n        /// </summary>\n        this.BN = 14;\n        /// <summary>\n        /// Paragraph Separator (Paragraph separator, appropriate Newline Functions, higher-level protocol paragraph determination).\n        /// </summary>\n        this.B = 15;\n        /// <summary>\n        /// \tSegment Separator (tab).\n        /// </summary>\n        this.S = 16;\n        /// <summary>\n        /// Whitespace (Space, Figure space, Line separator, Form feed, General Punctuation spaces).\n        /// </summary>\n        this.WS = 17;\n        /// <summary>\n        /// Other Neutrals (All other characters, including object replacement character).\n        /// </summary>\n        this.ON = 18;\n        /// <summary>\n        /// RTL character types.\n        /// </summary>\n        this.charTypes = [\n            this.L, this.EN, this.BN, this.ES, this.ES, this.S, this.ET, this.ET, this.B, this.AN, this.AN, this.S, this.CS, this.CS,\n            this.WS, this.NSM, this.NSM, this.B, this.BN, 27, this.BN, 28, 30, this.B, 31, 31, this.S, 32, 32, this.WS, 33, 34,\n            this.ON, 35, 37, this.ET, 38, 42, this.ON, 43, 43, this.ET, 44, 44, this.CS, 45, 45, this.ET, 46, 46, this.CS,\n            47, 47, this.CS, 48, 57, this.EN, 58, 58, this.CS, 59, 64, this.ON, 65, 90, this.L, 91, 96, this.ON, 97, 122, this.L,\n            123, 126, this.ON, 127, 132, this.BN, 133, 133, this.B, 134, 159, this.BN, 160, 160, this.CS,\n            161, 161, this.ON, 162, 165, this.ET, 166, 169, this.ON, 170, 170, this.L, 171, 175, this.ON,\n            176, 177, this.ET, 178, 179, this.EN, 180, 180, this.ON, 181, 181, this.L, 182, 184, this.ON,\n            185, 185, this.EN, 186, 186, this.L, 187, 191, this.ON, 192, 214, this.L, 215, 215, this.ON,\n            216, 246, this.L, 247, 247, this.ON, 248, 696, this.L, 697, 698, this.ON, 699, 705, this.L,\n            706, 719, this.ON, 720, 721, this.L, 722, 735, this.ON, 736, 740, this.L, 741, 749, this.ON,\n            750, 750, this.L, 751, 767, this.ON, 768, 855, this.NSM, 856, 860, this.L, 861, 879, this.NSM,\n            880, 883, this.L, 884, 885, this.ON, 886, 893, this.L, 894, 894, this.ON, 895, 899, this.L,\n            900, 901, this.ON, 902, 902, this.L, 903, 903, this.ON, 904, 1013, this.L, 1014, 1014, this.ON,\n            1015, 1154, this.L, 1155, 1158, this.NSM, 1159, 1159, this.L, 1160, 1161, this.NSM,\n            1162, 1417, this.L, 1418, 1418, this.ON, 1419, 1424, this.L, 1425, 1441, this.NSM,\n            1442, 1442, this.L, 1443, 1465, this.NSM, 1466, 1466, this.L, 1467, 1469, this.NSM,\n            1470, 1470, this.R, 1471, 1471, this.NSM, 1472, 1472, this.R, 1473, 1474, this.NSM,\n            1475, 1475, this.R, 1476, 1476, this.NSM, 1477, 1487, this.L, 1488, 1514, this.R,\n            1515, 1519, this.L, 1520, 1524, this.R, 1525, 1535, this.L, 1536, 1539, this.AL,\n            1540, 1547, this.L, 1548, 1548, this.CS, 1549, 1549, this.AL, 1550, 1551, this.ON,\n            1552, 1557, this.NSM, 1558, 1562, this.L, 1563, 1563, this.AL, 1564, 1566, this.L,\n            1567, 1567, this.AL, 1568, 1568, this.L, 1569, 1594, this.AL, 1595, 1599, this.L,\n            1600, 1610, this.AL, 1611, 1624, this.NSM, 1625, 1631, this.L, 1632, 1641, this.AN,\n            1642, 1642, this.ET, 1643, 1644, this.AN, 1645, 1647, this.AL, 1648, 1648, this.NSM,\n            1649, 1749, this.AL, 1750, 1756, this.NSM, 1757, 1757, this.AL, 1758, 1764, this.NSM,\n            1765, 1766, this.AL, 1767, 1768, this.NSM, 1769, 1769, this.ON, 1770, 1773, this.NSM,\n            1774, 1775, this.AL, 1776, 1785, this.EN, 1786, 1805, this.AL, 1806, 1806, this.L,\n            1807, 1807, this.BN, 1808, 1808, this.AL, 1809, 1809, this.NSM, 1810, 1839, this.AL,\n            1840, 1866, this.NSM, 1867, 1868, this.L, 1869, 1871, this.AL, 1872, 1919, this.L,\n            1920, 1957, this.AL, 1958, 1968, this.NSM, 1969, 1969, this.AL, 1970, 2304, this.L,\n            2305, 2306, this.NSM, 2307, 2363, this.L, 2364, 2364, this.NSM, 2365, 2368, this.L,\n            2369, 2376, this.NSM, 2377, 2380, this.L, 2381, 2381, this.NSM, 2382, 2384, this.L,\n            2385, 2388, this.NSM, 2389, 2401, this.L, 2402, 2403, this.NSM, 2404, 2432, this.L,\n            2433, 2433, this.NSM, 2434, 2491, this.L, 2492, 2492, this.NSM, 2493, 2496, this.L,\n            2497, 2500, this.NSM, 2501, 2508, this.L, 2509, 2509, this.NSM, 2510, 2529, this.L,\n            2530, 2531, this.NSM, 2532, 2545, this.L, 2546, 2547, this.ET, 2548, 2560, this.L,\n            2561, 2562, this.NSM, 2563, 2619, this.L, 2620, 2620, this.NSM, 2621, 2624, this.L,\n            2625, 2626, this.NSM, 2627, 2630, this.L, 2631, 2632, this.NSM, 2633, 2634, this.L,\n            2635, 2637, this.NSM, 2638, 2671, this.L, 2672, 2673, this.NSM, 2674, 2688, this.L,\n            2689, 2690, this.NSM, 2691, 2747, this.L, 2748, 2748, this.NSM, 2749, 2752, this.L,\n            2753, 2757, this.NSM, 2758, 2758, this.L, 2759, 2760, this.NSM, 2761, 2764, this.L,\n            2765, 2765, this.NSM, 2766, 2785, this.L, 2786, 2787, this.NSM, 2788, 2800, this.L,\n            2801, 2801, this.ET, 2802, 2816, this.L, 2817, 2817, this.NSM, 2818, 2875, this.L,\n            2876, 2876, this.NSM, 2877, 2878, this.L, 2879, 2879, this.NSM, 2880, 2880, this.L,\n            2881, 2883, this.NSM, 2884, 2892, this.L, 2893, 2893, this.NSM, 2894, 2901, this.L,\n            2902, 2902, this.NSM, 2903, 2945, this.L, 2946, 2946, this.NSM, 2947, 3007, this.L,\n            3008, 3008, this.NSM, 3009, 3020, this.L, 3021, 3021, this.NSM, 3022, 3058, this.L,\n            3059, 3064, this.ON, 3065, 3065, this.ET, 3066, 3066, this.ON, 3067, 3133, this.L,\n            3134, 3136, this.NSM, 3137, 3141, this.L, 3142, 3144, this.NSM, 3145, 3145, this.L,\n            3146, 3149, this.NSM, 3150, 3156, this.L, 3157, 3158, this.NSM, 3159, 3259, this.L,\n            3260, 3260, this.NSM, 3261, 3275, this.L, 3276, 3277, this.NSM, 3278, 3392, this.L,\n            3393, 3395, this.NSM, 3396, 3404, this.L, 3405, 3405, this.NSM, 3406, 3529, this.L,\n            3530, 3530, this.NSM, 3531, 3537, this.L, 3538, 3540, this.NSM, 3541, 3541, this.L,\n            3542, 3542, this.NSM, 3543, 3632, this.L, 3633, 3633, this.NSM, 3634, 3635, this.L,\n            3636, 3642, this.NSM, 3643, 3646, this.L, 3647, 3647, this.ET, 3648, 3654, this.L,\n            3655, 3662, this.NSM, 3663, 3760, this.L, 3761, 3761, this.NSM, 3762, 3763, this.L,\n            3764, 3769, this.NSM, 3770, 3770, this.L, 3771, 3772, this.NSM, 3773, 3783, this.L,\n            3784, 3789, this.NSM, 3790, 3863, this.L, 3864, 3865, this.NSM, 3866, 3892, this.L,\n            3893, 3893, this.NSM, 3894, 3894, this.L, 3895, 3895, this.NSM, 3896, 3896, this.L,\n            3897, 3897, this.NSM, 3898, 3901, this.ON, 3902, 3952, this.L, 3953, 3966, this.NSM,\n            3967, 3967, this.L, 3968, 3972, this.NSM, 3973, 3973, this.L, 3974, 3975, this.NSM,\n            3976, 3983, this.L, 3984, 3991, this.NSM, 3992, 3992, this.L, 3993, 4028, this.NSM,\n            4029, 4037, this.L, 4038, 4038, this.NSM, 4039, 4140, this.L, 4141, 4144, this.NSM,\n            4145, 4145, this.L, 4146, 4146, this.NSM, 4147, 4149, this.L, 4150, 4151, this.NSM,\n            4152, 4152, this.L, 4153, 4153, this.NSM, 4154, 4183, this.L, 4184, 4185, this.NSM,\n            4186, 5759, this.L, 5760, 5760, this.WS, 5761, 5786, this.L, 5787, 5788, this.ON,\n            5789, 5905, this.L, 5906, 5908, this.NSM, 5909, 5937, this.L, 5938, 5940, this.NSM,\n            5941, 5969, this.L, 5970, 5971, this.NSM, 5972, 6001, this.L, 6002, 6003, this.NSM,\n            6004, 6070, this.L, 6071, 6077, this.NSM, 6078, 6085, this.L, 6086, 6086, this.NSM,\n            6087, 6088, this.L, 6089, 6099, this.NSM, 6100, 6106, this.L, 6107, 6107, this.ET,\n            6108, 6108, this.L, 6109, 6109, this.NSM, 6110, 6127, this.L, 6128, 6137, this.ON,\n            6138, 6143, this.L, 6144, 6154, this.ON, 6155, 6157, this.NSM, 6158, 6158, this.WS,\n            6159, 6312, this.L, 6313, 6313, this.NSM, 6314, 6431, this.L, 6432, 6434, this.NSM,\n            6435, 6438, this.L, 6439, 6443, this.NSM, 6444, 6449, this.L, 6450, 6450, this.NSM,\n            6451, 6456, this.L, 6457, 6459, this.NSM, 6460, 6463, this.L, 6464, 6464, this.ON,\n            6465, 6467, this.L, 6468, 6469, this.ON, 6470, 6623, this.L, 6624, 6655, this.ON,\n            6656, 8124, this.L, 8125, 8125, this.ON, 8126, 8126, this.L, 8127, 8129, this.ON,\n            8130, 8140, this.L, 8141, 8143, this.ON, 8144, 8156, this.L, 8157, 8159, this.ON,\n            8160, 8172, this.L, 8173, 8175, this.ON, 8176, 8188, this.L, 8189, 8190, this.ON,\n            8191, 8191, this.L, 8192, 8202, this.WS, 8203, 8205, this.BN, 8206, 8206, this.L,\n            8207, 8207, this.R, 8208, 8231, this.ON, 8232, 8232, this.WS, 8233, 8233, this.B,\n            8234, 8234, this.LRE, 8235, 8235, this.RLE, 8236, 8236, this.PDF, 8237, 8237, this.LRO,\n            8238, 8238, this.RLO, 8239, 8239, this.WS, 8240, 8244, this.ET, 8245, 8276, this.ON,\n            8277, 8278, this.L, 8279, 8279, this.ON, 8280, 8286, this.L, 8287, 8287, this.WS,\n            8288, 8291, this.BN, 8292, 8297, this.L, 8298, 8303, this.BN, 8304, 8304, this.EN,\n            8305, 8307, this.L, 8308, 8313, this.EN, 8314, 8315, this.ET, 8316, 8318, this.ON,\n            8319, 8319, this.L, 8320, 8329, this.EN, 8330, 8331, this.ET, 8332, 8334, this.ON,\n            8335, 8351, this.L, 8352, 8369, this.ET, 8370, 8399, this.L, 8400, 8426, this.NSM,\n            8427, 8447, this.L, 8448, 8449, this.ON, 8450, 8450, this.L, 8451, 8454, this.ON,\n            8455, 8455, this.L, 8456, 8457, this.ON, 8458, 8467, this.L, 8468, 8468, this.ON,\n            8469, 8469, this.L, 8470, 8472, this.ON, 8473, 8477, this.L, 8478, 8483, this.ON,\n            8484, 8484, this.L, 8485, 8485, this.ON, 8486, 8486, this.L, 8487, 8487, this.ON,\n            8488, 8488, this.L, 8489, 8489, this.ON, 8490, 8493, this.L, 8494, 8494, this.ET,\n            8495, 8497, this.L, 8498, 8498, this.ON, 8499, 8505, this.L, 8506, 8507, this.ON,\n            8508, 8511, this.L, 8512, 8516, this.ON, 8517, 8521, this.L, 8522, 8523, this.ON,\n            8524, 8530, this.L, 8531, 8543, this.ON, 8544, 8591, this.L, 8592, 8721, this.ON,\n            8722, 8723, this.ET, 8724, 9013, this.ON, 9014, 9082, this.L, 9083, 9108, this.ON,\n            9109, 9109, this.L, 9110, 9168, this.ON, 9169, 9215, this.L, 9216, 9254, this.ON,\n            9255, 9279, this.L, 9280, 9290, this.ON, 9291, 9311, this.L, 9312, 9371, this.EN,\n            9372, 9449, this.L, 9450, 9450, this.EN, 9451, 9751, this.ON, 9752, 9752, this.L,\n            9753, 9853, this.ON, 9854, 9855, this.L, 9856, 9873, this.ON, 9874, 9887, this.L,\n            9888, 9889, this.ON, 9890, 9984, this.L, 9985, 9988, this.ON, 9989, 9989, this.L,\n            9990, 9993, this.ON, 9994, 9995, this.L, 9996, 10023, this.ON, 10024, 10024, this.L,\n            10025, 10059, this.ON, 10060, 10060, this.L, 10061, 10061, this.ON, 10062, 10062, this.L,\n            10063, 10066, this.ON, 10067, 10069, this.L, 10070, 10070, this.ON, 10071, 10071, this.L,\n            10072, 10078, this.ON, 10079, 10080, this.L, 10081, 10132, this.ON, 10133, 10135, this.L,\n            10136, 10159, this.ON, 10160, 10160, this.L, 10161, 10174, this.ON, 10175, 10191, this.L,\n            10192, 10219, this.ON, 10220, 10223, this.L, 10224, 11021, this.ON, 11022, 11903, this.L,\n            11904, 11929, this.ON, 11930, 11930, this.L, 11931, 12019, this.ON, 12020, 12031, this.L,\n            12032, 12245, this.ON, 12246, 12271, this.L, 12272, 12283, this.ON, 12284, 12287, this.L,\n            12288, 12288, this.WS, 12289, 12292, this.ON, 12293, 12295, this.L, 12296, 12320, this.ON,\n            12321, 12329, this.L, 12330, 12335, this.NSM, 12336, 12336, this.ON, 12337, 12341, this.L,\n            12342, 12343, this.ON, 12344, 12348, this.L, 12349, 12351, this.ON, 12352, 12440, this.L,\n            12441, 12442, this.NSM, 12443, 12444, this.ON, 12445, 12447, this.L, 12448, 12448, this.ON,\n            12449, 12538, this.L, 12539, 12539, this.ON, 12540, 12828, this.L, 12829, 12830, this.ON,\n            12831, 12879, this.L, 12880, 12895, this.ON, 12896, 12923, this.L, 12924, 12925, this.ON,\n            12926, 12976, this.L, 12977, 12991, this.ON, 12992, 13003, this.L, 13004, 13007, this.ON,\n            13008, 13174, this.L, 13175, 13178, this.ON, 13179, 13277, this.L, 13278, 13279, this.ON,\n            13280, 13310, this.L, 13311, 13311, this.ON, 13312, 19903, this.L, 19904, 19967, this.ON,\n            19968, 42127, this.L, 42128, 42182, this.ON, 42183, 64284, this.L, 64285, 64285, this.R,\n            64286, 64286, this.NSM, 64287, 64296, this.R, 64297, 64297, this.ET, 64298, 64310, this.R,\n            64311, 64311, this.L, 64312, 64316, this.R, 64317, 64317, this.L, 64318, 64318, this.R,\n            64319, 64319, this.L, 64320, 64321, this.R, 64322, 64322, this.L, 64323, 64324, this.R,\n            64325, 64325, this.L, 64326, 64335, this.R, 64336, 64433, this.AL, 64434, 64466, this.L,\n            64467, 64829, this.AL, 64830, 64831, this.ON, 64832, 64847, this.L, 64848, 64911, this.AL,\n            64912, 64913, this.L, 64914, 64967, this.AL, 64968, 65007, this.L, 65008, 65020, this.AL,\n            65021, 65021, this.ON, 65022, 65023, this.L, 65024, 65039, this.NSM, 65040, 65055, this.L,\n            65056, 65059, this.NSM, 65060, 65071, this.L, 65072, 65103, this.ON, 65104, 65104, this.CS,\n            65105, 65105, this.ON, 65106, 65106, this.CS, 65107, 65107, this.L, 65108, 65108, this.ON,\n            65109, 65109, this.CS, 65110, 65118, this.ON, 65119, 65119, this.ET, 65120, 65121, this.ON,\n            65122, 65123, this.ET, 65124, 65126, this.ON, 65127, 65127, this.L, 65128, 65128, this.ON,\n            65129, 65130, this.ET, 65131, 65131, this.ON, 65132, 65135, this.L, 65136, 65140, this.AL,\n            65141, 65141, this.L, 65142, 65276, this.AL, 65277, 65278, this.L, 65279, 65279, this.BN,\n            65280, 65280, this.L, 65281, 65282, this.ON, 65283, 65285, this.ET, 65286, 65290, this.ON,\n            65291, 65291, this.ET, 65292, 65292, this.CS, 65293, 65293, this.ET, 65294, 65294, this.CS,\n            65295, 65295, this.ES, 65296, 65305, this.EN, 65306, 65306, this.CS, 65307, 65312, this.ON,\n            65313, 65338, this.L, 65339, 65344, this.ON, 65345, 65370, this.L, 65371, 65381, this.ON,\n            65382, 65503, this.L, 65504, 65505, this.ET, 65506, 65508, this.ON, 65509, 65510, this.ET,\n            65511, 65511, this.L, 65512, 65518, this.ON, 65519, 65528, this.L, 65529, 65531, this.BN,\n            65532, 65533, this.ON, 65534, 65535, this.L\n        ];\n        for (var i = 0; i < this.charTypes.length; ++i) {\n            var start = this.charTypes[i];\n            var end = this.charTypes[++i];\n            var b = this.charTypes[++i];\n            while (start <= end) {\n                this.rtlCharacterTypes[start++] = b;\n            }\n        }\n    }\n    //#endregion\n    //#region implementation\n    RtlCharacters.prototype.getVisualOrder = function (inputText, isRtl) {\n        this.types = this.getCharacterCode(inputText);\n        this.textOrder = isRtl ? this.LRE : this.L;\n        this.doVisualOrder();\n        var result = [];\n        for (var i = 0; i < this.levels.length; i++) {\n            result[i] = this.levels[i];\n        }\n        return result;\n    };\n    RtlCharacters.prototype.getCharacterCode = function (text) {\n        var characterCodes = [];\n        for (var i = 0; i < text.length; i++) {\n            characterCodes[i] = this.rtlCharacterTypes[text[i].charCodeAt(0)];\n        }\n        return characterCodes;\n    };\n    RtlCharacters.prototype.setDefaultLevels = function () {\n        for (var i = 0; i < this.length; i++) {\n            this.levels[i] = this.textOrder;\n        }\n    };\n    RtlCharacters.prototype.setLevels = function () {\n        this.setDefaultLevels();\n        for (var n = 0; n < this.length; ++n) {\n            var level = this.levels[n];\n            if ((level & 0x80) !== 0) {\n                level &= 0x7f;\n                this.result[n] = ((level & 0x1) === 0) ? this.L : this.R;\n            }\n            this.levels[n] = level;\n        }\n    };\n    RtlCharacters.prototype.updateLevels = function (index, level, length) {\n        if ((level & 1) === 0) {\n            for (var i = index; i < length; ++i) {\n                if (this.result[i] === this.R) {\n                    this.levels[i] += 1;\n                }\n                else if (this.result[i] !== this.L) {\n                    this.levels[i] += 2;\n                }\n            }\n        }\n        else {\n            for (var i = index; i < length; ++i) {\n                if (this.result[i] !== this.R) {\n                    this.levels[i] += 1;\n                }\n            }\n        }\n    };\n    RtlCharacters.prototype.doVisualOrder = function () {\n        this.length = this.types.length;\n        this.result = this.types;\n        this.levels = [];\n        this.setLevels();\n        this.length = this.getEmbeddedCharactersLength();\n        var preview = this.textOrder;\n        var i = 0;\n        while (i < this.length) {\n            var level = this.levels[i];\n            var preType = ((Math.max(preview, level) & 0x1) === 0) ? this.L : this.R;\n            var length_1 = i + 1;\n            while (length_1 < this.length && this.levels[length_1] === level) {\n                ++length_1;\n            }\n            var success = length_1 < this.length ? this.levels[length_1] : this.textOrder;\n            var type = ((Math.max(success, level) & 0x1) === 0) ? this.L : this.R;\n            this.checkNSM(i, length_1, level, preType, type);\n            this.updateLevels(i, level, length_1);\n            preview = level;\n            i = length_1;\n        }\n        this.checkEmbeddedCharacters(this.length);\n    };\n    RtlCharacters.prototype.getEmbeddedCharactersLength = function () {\n        var index = 0;\n        for (var i = 0; i < this.length; ++i) {\n            if (!(this.types[i] === this.LRE || this.types[i] === this.RLE || this.types[i] === this.LRO ||\n                this.types[i] === this.RLO || this.types[i] === this.PDF || this.types[i] === this.BN)) {\n                this.result[index] = this.result[i];\n                this.levels[index] = this.levels[i];\n                index++;\n            }\n        }\n        return index;\n    };\n    RtlCharacters.prototype.checkEmbeddedCharacters = function (length) {\n        for (var i = this.types.length - 1; i >= 0; --i) {\n            if (this.types[i] === this.LRE || this.types[i] === this.RLE || this.types[i] === this.LRO ||\n                this.types[i] === this.RLO || this.types[i] === this.PDF || this.types[i] === this.BN) {\n                this.result[i] = this.types[i];\n                this.levels[i] = -1;\n            }\n            else {\n                length -= 1;\n                this.result[i] = this.result[length];\n                this.levels[i] = this.levels[length];\n            }\n        }\n        for (var i = 0; i < this.types.length; i++) {\n            if (this.levels[i] === -1) {\n                if (i === 0) {\n                    this.levels[i] = this.textOrder;\n                }\n                else {\n                    this.levels[i] = this.levels[i - 1];\n                }\n            }\n        }\n    };\n    RtlCharacters.prototype.checkNSM = function (index, length, level, startType, endType) {\n        var charType = startType;\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.NSM) {\n                this.result[i] = charType;\n            }\n            else {\n                charType = this.result[i];\n            }\n        }\n        this.checkEuropeanDigits(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkEuropeanDigits = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.EN) {\n                for (var j = i - 1; j >= index; --j) {\n                    if (this.result[j] === this.L || this.result[j] === this.R || this.result[j] === this.AL) {\n                        if (this.result[j] === this.AL) {\n                            this.result[i] = this.AN;\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n        this.checkArabicCharacters(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkArabicCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.AL) {\n                this.result[i] = this.R;\n            }\n        }\n        this.checkEuropeanNumberSeparator(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkEuropeanNumberSeparator = function (index, length, level, startType, endType) {\n        for (var i = index + 1; i < length - 1; ++i) {\n            if (this.result[i] === this.ES || this.result[i] === this.CS) {\n                var preview = this.result[i - 1];\n                var success = this.result[i + 1];\n                if (preview === this.EN && success === this.EN) {\n                    this.result[i] = this.EN;\n                }\n                else if (this.result[i] === this.CS && preview === this.AN && success === this.AN) {\n                    this.result[i] = this.AN;\n                }\n            }\n        }\n        this.checkEuropeanNumberTerminator(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkEuropeanNumberTerminator = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.ET) {\n                var s = i;\n                var b = [];\n                b.push(this.ET);\n                var l = this.getLength(s, length, b);\n                var data = s === index ? startType : this.result[s - 1];\n                if (data !== this.EN) {\n                    data = (l === length) ? endType : this.result[l];\n                }\n                if (data === this.EN) {\n                    for (var j = s; j < l; ++j) {\n                        this.result[j] = this.EN;\n                    }\n                }\n                i = l;\n            }\n        }\n        this.checkOtherNeutrals(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkOtherNeutrals = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.ES || this.result[i] === this.ET || this.result[i] === this.CS) {\n                this.result[i] = this.ON;\n            }\n        }\n        this.checkOtherCharacters(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkOtherCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.EN) {\n                var pst = startType;\n                for (var j = i - 1; j >= index; --j) {\n                    if (this.result[j] === this.L || this.result[j] === this.R) {\n                        pst = this.result[j];\n                        break;\n                    }\n                }\n                if (pst === this.L) {\n                    this.result[i] = this.L;\n                }\n            }\n        }\n        this.checkCommanCharacters(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.getLength = function (index, length, validSet) {\n        --index;\n        while (++index < length) {\n            var t = this.result[index];\n            for (var i = 0; i < validSet.length; ++i) {\n                if (t === validSet[i]) {\n                    index = this.getLength(++index, length, validSet);\n                }\n            }\n            return index;\n        }\n        return length;\n    };\n    RtlCharacters.prototype.checkCommanCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.WS || this.result[i] === this.ON || this.result[i] === this.B ||\n                this.result[i] === this.S) {\n                var s = i;\n                var byte = [this.B, this.S, this.WS, this.ON];\n                var l = this.getLength(s, length, byte);\n                var lt = 0;\n                var tt = 0;\n                var rt = 0;\n                if (s === index) {\n                    lt = startType;\n                }\n                else {\n                    lt = this.result[s - 1];\n                    if (lt === this.AN) {\n                        lt = this.R;\n                    }\n                    else if (lt === this.EN) {\n                        lt = this.R;\n                    }\n                }\n                if (l === length) {\n                    tt = endType;\n                }\n                else {\n                    tt = this.result[l];\n                    if (tt === this.AN) {\n                        tt = this.R;\n                    }\n                    else if (tt === this.EN) {\n                        tt = this.R;\n                    }\n                }\n                if (lt === tt) {\n                    rt = lt;\n                }\n                else {\n                    rt = ((level & 0x1) === 0) ? this.L : this.R;\n                }\n                for (var j = s; j < l; ++j) {\n                    this.result[j] = rt;\n                }\n                i = l;\n            }\n        }\n    };\n    return RtlCharacters;\n}());\nexport { RtlCharacters };\n","import { PdfString } from './../../primitives/pdf-string';\nimport { ArabicShapeRenderer } from './rtl/rtl-text-shape';\nimport { PdfTextDirection } from './../enum';\nimport { Bidi } from './rtl/rtl-bidirectional';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar RtlRenderer = /** @class */ (function () {\n    function RtlRenderer() {\n        //region Constants\n        /// Open bracket symbol.\n        /// </summary>\n        this.openBracket = '(';\n        /// <summary>\n        /// Close bracket symbol.\n        /// </summary>\n        this.closeBracket = ')';\n        //#endregion\n    }\n    //#region Constructors\n    /// <summary>\n    /// Initializes a new instance of the <see cref=\"RtlRenderer\"/> class.\n    /// </summary>\n    // public constructor() {\n    // }\n    //#region Public Methods\n    /// <summary>\n    /// Layouts text. Changes blocks position in the RTL text.\n    /// Ligates the text if needed.\n    /// </summary>\n    /// <param name=\"line\">Line of the text.</param>\n    /// <param name=\"font\">Font to be used for string printing.</param>\n    /// <param name=\"rtl\">Font alignment.</param>\n    /// <param name=\"wordSpace\">Indicates whether Word Spacing used or not.</param>\n    /// <returns>Layout string.</returns>\n    RtlRenderer.prototype.layout = function (line, font, rtl, wordSpace, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        var result = [];\n        if (font.Unicode) {\n            result = this.customLayout(line, rtl, format, font, wordSpace);\n        }\n        else {\n            result = [];\n            result[0] = line;\n        }\n        return result;\n    };\n    /// <summary>\n    /// Layouts a string and splits it by the words and using correct lay outing.\n    /// </summary>\n    /// <param name=\"line\">Text line.</param>\n    /// <param name=\"font\">Font object.</param>\n    /// <param name=\"rtl\">Indicates whether RTL should be applied.</param>\n    /// <param name=\"wordSpace\">Indicates whether word spacing is used.</param>\n    /// <returns>Array of words if converted, null otherwise.</returns>\n    RtlRenderer.prototype.splitLayout = function (line, font, rtl, wordSpace, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        var words = [];\n        var system = false;\n        if (!system || words == null) {\n            words = this.customSplitLayout(line, font, rtl, wordSpace, format);\n        }\n        return words;\n    };\n    //#endregion\n    //#region Implementation\n    // private isEnglish( word : string) : boolean\n    // {\n    //     let c : string = (word.length > 0) ? word[0] : '';\n    //     return (c >= '0' && c < 'ÿ');\n    // }\n    // private keepOrder( words : string, startIndex : number, count: number, result : string[], resultIndex : number) : void\n    // {\n    //     for (let i : number = 0, ri = resultIndex - count + 1; i < count; ++i, ++ri) {\n    //         result[ri] = words[i + startIndex];\n    //     }\n    // }\n    /// <summary>\n    /// Uses system API to layout the text.\n    /// </summary>\n    /// <param name=\"line\">Line of the text to be layouted.</param>\n    /// <param name=\"font\">Font which is used for text printing.</param>\n    /// <param name=\"rtl\">Indicates whether we use RTL or RTL lay outing of the text container.</param>\n    /// <returns>Layout string.</returns>\n    /* tslint:disable-next-line:max-line-length */\n    RtlRenderer.prototype.getGlyphIndex = function (line, font, rtl, /*out*/ glyphs, custom) {\n        var success = true;\n        var fail = false;\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        glyphs = null;\n        if (line.length === 0) {\n            return { success: fail, glyphs: glyphs };\n        }\n        var renderer = new ArabicShapeRenderer();\n        var text = renderer.shape(line, 0);\n        var internalFont = font.fontInternal;\n        var ttfReader = internalFont.ttfReader;\n        glyphs = new Uint16Array(text.length);\n        var i = 0;\n        for (var k = 0, len = text.length; k < len; k++) {\n            var ch = text[k];\n            var glyphInfo = ttfReader.getGlyph(ch);\n            if (glyphInfo !== null && typeof glyphInfo !== 'undefined') {\n                glyphs[i++] = (glyphInfo).index;\n            }\n        }\n        return { success: success, glyphs: glyphs };\n    };\n    /* tslint:disable-next-line:max-line-length */\n    RtlRenderer.prototype.customLayout = function (line, rtl, format, font, wordSpace) {\n        if (wordSpace === null || typeof wordSpace === 'undefined') {\n            if (line == null) {\n                throw new Error('ArgumentNullException : line');\n            }\n            var result = null;\n            //bidirectional order.\n            if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n                var bidi = new Bidi();\n                result = bidi.getLogicalToVisualString(line, rtl);\n            }\n            return result;\n        }\n        else {\n            if (line == null) {\n                throw new Error('ArgumentNullException : line');\n            }\n            if (font == null) {\n                throw new Error('ArgumentNullException : font');\n            }\n            var layouted = null;\n            if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n                var renderer = new ArabicShapeRenderer();\n                var txt = renderer.shape(line, 0);\n                layouted = this.customLayout(txt, rtl, format);\n            }\n            // else {\n            //     layouted = this.customLayout(line, rtl, format);\n            // }\n            // We have unicode font, but from the file.        \n            var result = [];\n            // Split the text by words if word spacing is not default.\n            if (wordSpace) {\n                var words = layouted.split('');\n                var count = words.length;\n                for (var i = 0; i < count; i++) {\n                    words[i] = this.addChars(font, words[i]);\n                }\n                result = words;\n            }\n            else {\n                result = [];\n                result[0] = this.addChars(font, layouted);\n            }\n            return result;\n        }\n    };\n    /// <summary>\n    /// Add information about used glyphs to the font.\n    /// </summary>\n    /// <param name=\"font\">Font used for text rendering.</param>\n    /// <param name=\"glyphs\">Array of used glyphs.</param>\n    /// <returns>String in the form to be written to the file.</returns>\n    RtlRenderer.prototype.addChars = function (font, glyphs) {\n        var line = glyphs;\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        var text = line;\n        var internalFont = font.fontInternal;\n        var ttfReader = internalFont.ttfReader;\n        font.setSymbols(text);\n        // Reconvert string according to unicode standard.\n        text = ttfReader.convertString(text);\n        var bytes = PdfString.toUnicodeArray(text, false);\n        text = PdfString.byteToString(bytes);\n        return text;\n        // else {\n        //     if (font == null) {\n        //         throw new Error('ArgumentNullException : font');\n        //     }\n        //     if (glyphs == null) {\n        //         throw new Error('ArgumentNullException : glyphs');\n        //     }\n        //     // Mark the chars as used.\n        //     let text : string = '';\n        //     font.setSymbols(glyphs);\n        //     // Create string from the glyphs.\n        //     \n        //     let chars : string[] = [];\n        //     for (let i : number = 0; i < glyphs.length; i++) {\n        //         chars[i] = glyphs[i].toString();\n        //     }\n        //     for (let j : number = 0 ; j < chars.length; j++) {\n        //         text = text + chars[j];\n        //     }\n        //     let bytes : number[] = PdfString.toUnicodeArray(text, false);\n        //     text = PdfString.byteToString(bytes);\n        //     return text;\n        // }\n    };\n    /// <summary>\n    /// Layouts a string and splits it by the words by using custom lay outing.\n    /// </summary>\n    /// <param name=\"line\">Text line.</param>\n    /// <param name=\"font\">Font object.</param>\n    /// <param name=\"rtl\">Indicates whether RTL should be applied.</param>\n    /// <param name=\"wordSpace\">Indicates whether word spacing is used.</param>\n    /// <returns>Array of words if converted, null otherwise.</returns>\n    /* tslint:disable-next-line:max-line-length */\n    RtlRenderer.prototype.customSplitLayout = function (line, font, rtl, wordSpace, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        var reversedLine = this.customLayout(line, rtl, format);\n        var words = reversedLine.split('');\n        return words;\n    };\n    return RtlRenderer;\n}());\nexport { RtlRenderer };\n","/**\n * public Enum for `PdfLayoutType`.\n * @private\n */\nexport var PdfLayoutType;\n(function (PdfLayoutType) {\n    /**\n     * Specifies the type of `Paginate`.\n     * @private\n     */\n    PdfLayoutType[PdfLayoutType[\"Paginate\"] = 0] = \"Paginate\";\n    /**\n     * Specifies the type of `OnePage`.\n     * @private\n     */\n    PdfLayoutType[PdfLayoutType[\"OnePage\"] = 1] = \"OnePage\";\n})(PdfLayoutType || (PdfLayoutType = {}));\n/**\n * public Enum for `PdfLayoutBreakType`.\n * @private\n */\nexport var PdfLayoutBreakType;\n(function (PdfLayoutBreakType) {\n    /**\n     * Specifies the type of `FitPage`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitPage\"] = 0] = \"FitPage\";\n    /**\n     * Specifies the type of `FitElement`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitElement\"] = 1] = \"FitElement\";\n    /**\n     * Specifies the type of `FitColumnsToPage`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitColumnsToPage\"] = 2] = \"FitColumnsToPage\";\n})(PdfLayoutBreakType || (PdfLayoutBreakType = {}));\nexport var PathPointType;\n(function (PathPointType) {\n    /**\n     * Specifies the path point type of `Start`.\n     * @private\n     */\n    PathPointType[PathPointType[\"Start\"] = 0] = \"Start\";\n    /**\n     * Specifies the path point type of `Line`.\n     * @private\n     */\n    PathPointType[PathPointType[\"Line\"] = 1] = \"Line\";\n    /**\n     * Specifies the path point type of `Bezier3`.\n     * @private\n     */\n    PathPointType[PathPointType[\"Bezier3\"] = 3] = \"Bezier3\";\n    /**\n     * Specifies the path point type of `Bezier`.\n     * @private\n     */\n    PathPointType[PathPointType[\"Bezier\"] = 3] = \"Bezier\";\n    /**\n     * Specifies the path point type of `PathTypeMask`.\n     * @private\n     */\n    PathPointType[PathPointType[\"PathTypeMask\"] = 7] = \"PathTypeMask\";\n    /**\n     * Specifies the path point type of `DashMode`.\n     * @private\n     */\n    PathPointType[PathPointType[\"DashMode\"] = 16] = \"DashMode\";\n    /**\n     * Specifies the path point type of `PathMarker`.\n     * @private\n     */\n    PathPointType[PathPointType[\"PathMarker\"] = 32] = \"PathMarker\";\n    /**\n     * Specifies the path point type of `CloseSubpath`.\n     * @private\n     */\n    PathPointType[PathPointType[\"CloseSubpath\"] = 128] = \"CloseSubpath\";\n})(PathPointType || (PathPointType = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfColorSpace } from './../enum';\nimport { PdfColor } from './../pdf-color';\nimport { PdfBrush } from './pdf-brush';\nimport { PdfDictionary } from '../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfBoolean } from './../../primitives/pdf-boolean';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfName } from '../../primitives/pdf-name';\nimport { PdfNumber } from '../../primitives/pdf-number';\nimport { PdfReferenceHolder } from '../../primitives/pdf-reference';\n/**\n * `PdfGradientBrush` class provides objects used to fill the interiors of graphical shapes such as rectangles,\n * ellipses, pies, polygons, and paths.\n * @private\n */\nvar PdfGradientBrush = /** @class */ (function (_super) {\n    __extends(PdfGradientBrush, _super);\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGradientBrush` class.\n     * @public\n     */\n    /* tslint:disable-next-line:max-line-length */\n    function PdfGradientBrush(shading) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Local variable to store the background color.\n         * @private\n         */\n        _this.mbackground = new PdfColor(255, 255, 255);\n        /**\n         * Local variable to store the stroking color.\n         * @private\n         */\n        _this.mbStroking = false;\n        /**\n         * Local variable to store the function.\n         * @private\n         */\n        _this.mfunction = null;\n        /**\n         * Local variable to store the DictionaryProperties.\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        _this.mpatternDictionary = new PdfDictionary();\n        _this.mpatternDictionary.items.setValue(_this.dictionaryProperties.type, new PdfName(_this.dictionaryProperties.pattern));\n        _this.mpatternDictionary.items.setValue(_this.dictionaryProperties.patternType, new PdfNumber(2));\n        _this.shading = shading;\n        _this.colorSpace = PdfColorSpace.Rgb;\n        return _this;\n    }\n    Object.defineProperty(PdfGradientBrush.prototype, \"background\", {\n        //Properties\n        /**\n         * Gets or sets the background color of the brush.\n         * @public\n         */\n        get: function () {\n            return this.mbackground;\n        },\n        set: function (value) {\n            this.mbackground = value;\n            var sh = this.shading;\n            if (value.isEmpty) {\n                sh.remove(this.dictionaryProperties.background);\n            }\n            else {\n                sh.items.setValue(this.dictionaryProperties.background, value.toArray(this.colorSpace));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"antiAlias\", {\n        /**\n         * Gets or sets a value indicating whether use anti aliasing algorithm.\n         * @public\n         */\n        get: function () {\n            var sh = this.shading;\n            var aa = (sh.items.getValue(this.dictionaryProperties.antiAlias));\n            return aa.value;\n        },\n        set: function (value) {\n            var sh = this.shading;\n            var aa = (sh.items.getValue(this.dictionaryProperties.antiAlias));\n            if ((aa == null && typeof aa === 'undefined')) {\n                aa = new PdfBoolean(value);\n                sh.items.setValue(this.dictionaryProperties.antiAlias, aa);\n            }\n            else {\n                aa.value = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"function\", {\n        /**\n         * Gets or sets the function of the brush.\n         * @protected\n         */\n        get: function () {\n            return this.mfunction;\n        },\n        set: function (value) {\n            this.mfunction = value;\n            if (value != null && typeof value !== 'undefined') {\n                this.shading.items.setValue(this.dictionaryProperties.function, new PdfReferenceHolder(this.mfunction));\n            }\n            else {\n                this.shading.remove(this.dictionaryProperties.function);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"bBox\", {\n        /**\n         * Gets or sets the boundary box of the brush.\n         * @protected\n         */\n        get: function () {\n            var sh = this.shading;\n            var box = (sh.items.getValue(this.dictionaryProperties.bBox));\n            return box;\n        },\n        set: function (value) {\n            var sh = this.shading;\n            if (value == null && typeof value === 'undefined') {\n                sh.remove(this.dictionaryProperties.bBox);\n            }\n            else {\n                sh.items.setValue(this.dictionaryProperties.bBox, value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the color space of the brush.\n         * @public\n         */\n        get: function () {\n            return this.mcolorSpace;\n        },\n        set: function (value) {\n            var colorSpace = this.shading.items.getValue(this.dictionaryProperties.colorSpace);\n            if ((value !== this.mcolorSpace) || (colorSpace == null)) {\n                this.mcolorSpace = value;\n                var csValue = this.colorSpaceToDeviceName(value);\n                this.shading.items.setValue(this.dictionaryProperties.colorSpace, new PdfName(csValue));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"stroking\", {\n        /**\n         * Gets or sets a value indicating whether this PdfGradientBrush is stroking.\n         * @public\n         */\n        get: function () {\n            return this.mbStroking;\n        },\n        set: function (value) {\n            this.mbStroking = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"patternDictionary\", {\n        /**\n         * Gets the pattern dictionary.\n         * @protected\n         */\n        get: function () {\n            if (this.mpatternDictionary == null) {\n                this.mpatternDictionary = new PdfDictionary();\n            }\n            return this.mpatternDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"shading\", {\n        /**\n         * Gets or sets the shading dictionary.\n         * @protected\n         */\n        get: function () {\n            return this.mshading;\n        },\n        set: function (value) {\n            if (value == null) {\n                throw new Error('ArgumentNullException : Shading');\n            }\n            if (value !== this.mshading) {\n                this.mshading = value;\n                this.patternDictionary.items.setValue(this.dictionaryProperties.shading, new PdfReferenceHolder(this.mshading));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"matrix\", {\n        /**\n         * Gets or sets the transformation matrix.\n         * @public\n         */\n        get: function () {\n            return this.mmatrix;\n        },\n        set: function (value) {\n            if (value == null) {\n                throw new Error('ArgumentNullException : Matrix');\n            }\n            if (value !== this.mmatrix) {\n                this.mmatrix = value.clone();\n                var m = new PdfArray(this.mmatrix.matrix.elements);\n                this.mpatternDictionary.items.setValue(this.dictionaryProperties.matrix, m);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Overrides\n    /**\n     * Monitors the changes of the brush and modify PDF state respectfully.\n     * @param brush The brush.\n     * @param streamWriter The stream writer.\n     * @param getResources The get resources delegate.\n     * @param saveChanges if set to true the changes should be saved anyway.\n     * @param currentColorSpace The current color space.\n     */\n    /* tslint:disable-next-line:max-line-length */\n    PdfGradientBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {\n        var diff = false;\n        if (brush instanceof PdfGradientBrush) {\n            if ((this.colorSpace !== currentColorSpace)) {\n                this.colorSpace = currentColorSpace;\n                this.resetFunction();\n            }\n            //  Set the /Pattern colour space.\n            streamWriter.setColorSpace('Pattern', this.mbStroking);\n            //  Set the pattern for non-stroking operations.\n            var resources = getResources.getResources();\n            var name_1 = resources.getName(this);\n            streamWriter.setColourWithPattern(null, name_1, this.mbStroking);\n            diff = true;\n        }\n        return diff;\n    };\n    /**\n     * Resets the changes, which were made by the brush.\n     * In other words resets the state to the initial one.\n     * @param streamWriter The stream writer.\n     */\n    PdfGradientBrush.prototype.resetChanges = function (streamWriter) {\n        //  Unable reset.\n    };\n    //Implementation\n    /**\n     * Converts colorspace enum to a PDF name.\n     * @param colorSpace The color space enum value.\n     */\n    PdfGradientBrush.prototype.colorSpaceToDeviceName = function (colorSpace) {\n        var result;\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                result = 'DeviceRGB';\n                break;\n        }\n        return result;\n    };\n    /**\n     * Resets the pattern dictionary.\n     * @param dictionary A new pattern dictionary.\n     */\n    PdfGradientBrush.prototype.resetPatternDictionary = function (dictionary) {\n        this.mpatternDictionary = dictionary;\n    };\n    /**\n     * Clones the anti aliasing value.\n     * @param brush The brush.\n     */\n    PdfGradientBrush.prototype.cloneAntiAliasingValue = function (brush) {\n        if ((brush == null)) {\n            throw new Error('ArgumentNullException : brush');\n        }\n        var sh = this.shading;\n        var aa = (sh.items.getValue(this.dictionaryProperties.antiAlias));\n        if ((aa != null)) {\n            brush.shading.items.setValue(this.dictionaryProperties.antiAlias, new PdfBoolean(aa.value));\n        }\n    };\n    /**\n     * Clones the background value.\n     * @param brush The brush.\n     */\n    PdfGradientBrush.prototype.cloneBackgroundValue = function (brush) {\n        var background = this.background;\n        if (!background.isEmpty) {\n            brush.background = background;\n        }\n    };\n    Object.defineProperty(PdfGradientBrush.prototype, \"element\", {\n        /* tslint:enable */\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.patternDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGradientBrush;\n}(PdfBrush));\nexport { PdfGradientBrush };\n","/**\n * PdfTemplate.ts class for EJ2-PDF\n */\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfGraphics } from './../pdf-graphics';\nimport { PdfResources } from './../pdf-resources';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PointF, SizeF, RectangleF } from './../../drawing/pdf-drawing';\nimport { GetResourceEventHandler } from './../pdf-graphics';\n/**\n * Represents `Pdf Template` object.\n * @private\n */\nvar PdfTemplate = /** @class */ (function () {\n    function PdfTemplate(arg1, arg2) {\n        /**\n         * Initialize an instance for `DictionaryProperties` class.\n         * @private\n         * @hidden\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Checks whether the transformation 'is performed'.\n         * @default true\n         * @private\n         */\n        this.writeTransformation = true;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof SizeF && typeof arg2 === 'undefined') {\n            this.content = new PdfStream();\n            var tempSize = new SizeF(arg1.width, arg1.height);\n            this.setSize(tempSize);\n            this.initialize();\n        }\n        else {\n            this.content = new PdfStream();\n            this.setSize(new SizeF(arg1, arg2));\n            this.initialize();\n        }\n    }\n    Object.defineProperty(PdfTemplate.prototype, \"size\", {\n        //Properties\n        /**\n         * Gets the size of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.templateSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"width\", {\n        /**\n         * Gets the width of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.size.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"height\", {\n        /**\n         * Gets the height of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.size.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"graphics\", {\n        /**\n         * Gets the `graphics` of the 'PdfTemplate'.\n         */\n        get: function () {\n            if (this.pdfGraphics == null || typeof this.pdfGraphics === 'undefined') {\n                var gr = new GetResourceEventHandler(this);\n                var g = new PdfGraphics(this.size, gr, this.content);\n                this.pdfGraphics = g;\n                // if(this.writeTransformation) {\n                // Transform co-ordinates to Top/Left.\n                this.pdfGraphics.initializeCoordinates();\n                // }\n            }\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the resources and modifies the template dictionary.\n     * @private\n     */\n    PdfTemplate.prototype.getResources = function () {\n        if (this.resources == null) {\n            this.resources = new PdfResources();\n            this.content.items.setValue(this.dictionaryProperties.resources, this.resources);\n        }\n        return this.resources;\n    };\n    // Public methods\n    /**\n     * `Initialize` the type and subtype of the template.\n     * @private\n     */\n    PdfTemplate.prototype.initialize = function () {\n        this.addType();\n        this.addSubType();\n    };\n    /**\n     * `Adds type key`.\n     * @private\n     */\n    PdfTemplate.prototype.addType = function () {\n        var value = new PdfName(this.dictionaryProperties.xObject);\n        this.content.items.setValue(this.dictionaryProperties.type, value);\n    };\n    /**\n     * `Adds SubType key`.\n     * @private\n     */\n    PdfTemplate.prototype.addSubType = function () {\n        var value = new PdfName(this.dictionaryProperties.form);\n        this.content.items.setValue(this.dictionaryProperties.subtype, value);\n    };\n    PdfTemplate.prototype.reset = function (size) {\n        if (typeof size === 'undefined') {\n            if (this.resources != null) {\n                this.resources = null;\n                this.content.remove(this.dictionaryProperties.resources);\n            }\n            if (this.graphics != null) {\n                this.graphics.reset(this.size);\n            }\n        }\n        else {\n            this.setSize(size);\n            this.reset();\n        }\n    };\n    /**\n     * `Set the size` of the 'PdfTemplate'.\n     * @private\n     */\n    PdfTemplate.prototype.setSize = function (size) {\n        var rect = new RectangleF(new PointF(0, 0), size);\n        var val = PdfArray.fromRectangle(rect);\n        this.content.items.setValue(this.dictionaryProperties.bBox, val);\n        this.templateSize = size;\n    };\n    Object.defineProperty(PdfTemplate.prototype, \"element\", {\n        // /**\n        //  * Returns the value of current graphics.\n        //  * @private\n        //  */\n        // public GetGraphics(g : PdfGraphics) : PdfGraphics {\n        //     if (this.graphics == null || typeof this.graphics === 'undefined') {\n        //         this.graphics = g;\n        //         this.graphics.Size = this.Size;\n        //         this.graphics.StreamWriter = new PdfStreamWriter(this.content)\n        //         this.graphics.Initialize();\n        //         if(this.writeTransformation) {\n        //             this.graphics.InitializeCoordinates();\n        //         }\n        //     }\n        //     return this.graphics;\n        // }\n        // IPdfWrapper Members\n        /**\n         * Gets the `content stream` of 'PdfTemplate' class.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTemplate;\n}());\nexport { PdfTemplate };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfResources.ts class for EJ2-PDF\n */\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { TemporaryDictionary } from './../collections/object-object-pair/dictionary';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfCrossTable } from './../input-output/pdf-cross-table';\nimport { PdfFont } from './fonts/pdf-font';\nimport { PdfTemplate } from './figures/pdf-template';\nimport { PdfBrush } from './brushes/pdf-brush';\nimport { PdfTransparency } from './pdf-transparency';\nimport { PdfBitmap } from './../graphics/images/pdf-bitmap';\nimport { PdfImage } from './../graphics/images/pdf-image';\nimport { PdfGradientBrush } from './brushes/pdf-gradient-brush';\nimport { PdfTilingBrush } from './brushes/pdf-tiling-brush';\n/**\n * `PdfResources` class used to set resource contents like font, image.\n * @private\n */\nvar PdfResources = /** @class */ (function (_super) {\n    __extends(PdfResources, _super);\n    function PdfResources(baseDictionary) {\n        var _this = _super.call(this, baseDictionary) || this;\n        /**\n         * Dictionary for the `properties names`.\n         * @private\n         */\n        _this.properties = new PdfDictionary();\n        return _this;\n    }\n    Object.defineProperty(PdfResources.prototype, \"names\", {\n        //Properties\n        /**\n         * Gets the `font names`.\n         * @private\n         */\n        get: function () {\n            return this.getNames();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfResources.prototype, \"document\", {\n        /**\n         * Get or set the `page document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public Methods\n    /**\n     * `Generates name` for the object and adds to the resource if the object is new.\n     * @private\n     */\n    PdfResources.prototype.getName = function (obj) {\n        var primitive = obj.element;\n        var name = null;\n        if (this.names.containsKey(primitive)) {\n            name = this.names.getValue(primitive);\n        }\n        // Object is new.\n        if (name == null) {\n            var sName = this.generateName();\n            name = new PdfName(sName);\n            this.names.setValue(primitive, name);\n            if (obj instanceof PdfFont) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfTemplate) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfGradientBrush || obj instanceof PdfTilingBrush) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfTransparency) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfImage || obj instanceof PdfBitmap) {\n                this.add(obj, name);\n            }\n        }\n        return name;\n    };\n    /**\n     * Gets `resource names` to font dictionaries.\n     * @private\n     */\n    PdfResources.prototype.getNames = function () {\n        if (this.pdfNames == null) {\n            this.pdfNames = new TemporaryDictionary();\n        }\n        var fonts = this.items.getValue(this.dictionaryProperties.font);\n        if (fonts != null) {\n            var reference = fonts;\n            var dictionary = fonts;\n            dictionary = PdfCrossTable.dereference(fonts);\n        }\n        return this.pdfNames;\n    };\n    /**\n     * Add `RequireProcedureSet` into procset array.\n     * @private\n     */\n    PdfResources.prototype.requireProcedureSet = function (procedureSetName) {\n        if (procedureSetName == null) {\n            throw new Error('ArgumentNullException:procedureSetName');\n        }\n        var procSets = this.items.getValue(this.dictionaryProperties.procset);\n        if (procSets == null) {\n            procSets = new PdfArray();\n            this.items.setValue(this.dictionaryProperties.procset, procSets);\n        }\n        var name = new PdfName(procedureSetName);\n        if (!procSets.contains(name)) {\n            procSets.add(name);\n        }\n    };\n    //Helper Methods\n    /**\n     * `Remove font` from array.\n     * @private\n     */\n    PdfResources.prototype.removeFont = function (name) {\n        var key = null;\n        var keys = this.pdfNames.keys();\n        for (var index = 0; index < this.pdfNames.size(); index++) {\n            if (this.pdfNames.getValue(keys[index]) === new PdfName(name)) {\n                key = keys[index];\n                break;\n            }\n        }\n        if (key != null) {\n            this.pdfNames.remove(key);\n        }\n    };\n    /**\n     * Generates `Unique string name`.\n     * @private\n     */\n    PdfResources.prototype.generateName = function () {\n        var name = Guid.getNewGuidString();\n        return name;\n    };\n    PdfResources.prototype.add = function (arg1, arg2) {\n        if (arg1 instanceof PdfFont) {\n            var dictionary = null;\n            var fonts = this.items.getValue(this.dictionaryProperties.font);\n            if (fonts != null) {\n                var reference = fonts;\n                dictionary = fonts;\n                dictionary = fonts;\n            }\n            else {\n                dictionary = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.font, dictionary);\n            }\n            dictionary.items.setValue(arg2.value, new PdfReferenceHolder(arg1.element));\n        }\n        else if (arg1 instanceof PdfTemplate) {\n            var xobjects = void 0;\n            xobjects = this.items.getValue(this.dictionaryProperties.xObject);\n            // Create fonts dictionary.\n            if (xobjects == null) {\n                xobjects = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.xObject, xobjects);\n            }\n            xobjects.items.setValue(arg2.value, new PdfReferenceHolder(arg1.element));\n        }\n        else if (arg1 instanceof PdfBrush) {\n            if (arg1 instanceof PdfGradientBrush || arg1 instanceof PdfTilingBrush) {\n                var savable = arg1.element;\n                if (savable != null) {\n                    var pattern = this.items.getValue(this.dictionaryProperties.pattern);\n                    // Create a new pattern dictionary.\n                    if (pattern == null) {\n                        pattern = new PdfDictionary();\n                        this.items.setValue(this.dictionaryProperties.pattern, pattern);\n                    }\n                    pattern.items.setValue(arg2.value, new PdfReferenceHolder(savable));\n                }\n            }\n        }\n        else if (arg1 instanceof PdfTransparency) {\n            var savable = arg1.element;\n            var transDic = null;\n            transDic = this.items.getValue(this.dictionaryProperties.extGState);\n            // Create a new pattern dictionary.\n            if (transDic == null) {\n                transDic = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.extGState, transDic);\n            }\n            transDic.items.setValue(arg2.value, new PdfReferenceHolder(savable));\n        }\n        else {\n            /* tslint:disable */\n            var xobjects = this.Dictionary.items.getValue(this.dictionaryProperties.xObject);\n            var parentXObjects = void 0;\n            if (typeof this.pdfDocument !== 'undefined') {\n                parentXObjects = this.pdfDocument.sections.element.items.getValue(this.dictionaryProperties.resources).items.getValue(this.dictionaryProperties.xObject);\n            }\n            var values = this.Dictionary.items.values();\n            var hasSameImageStream = false;\n            var oldReference = void 0;\n            if (typeof this.pdfDocument !== 'undefined' && (typeof parentXObjects === undefined || parentXObjects == null)) {\n                parentXObjects = new PdfDictionary();\n                this.pdfDocument.sections.element.items.getValue(this.dictionaryProperties.resources).items.setValue(this.dictionaryProperties.xObject, parentXObjects);\n            }\n            else if (typeof this.pdfDocument !== 'undefined') {\n                var values_1 = parentXObjects.items.values();\n                for (var i = 0; i < values_1.length; i++) {\n                    if (typeof values_1[i] !== 'undefined' && typeof values_1[i].element !== 'undefined') {\n                        if (values_1[i].element.data[0] === arg1.element.data[0]) {\n                            oldReference = values_1[i];\n                            hasSameImageStream = true;\n                        }\n                    }\n                }\n            }\n            if (xobjects == null) {\n                xobjects = new PdfDictionary();\n                this.Dictionary.items.setValue(this.dictionaryProperties.xObject, xobjects);\n            }\n            if (hasSameImageStream && typeof oldReference !== 'undefined') {\n                xobjects.items.setValue(arg2.value, oldReference);\n            }\n            else {\n                var reference = new PdfReferenceHolder(arg1.element);\n                xobjects.items.setValue(arg2.value, reference);\n                if (typeof this.pdfDocument !== 'undefined') {\n                    parentXObjects.items.setValue(arg2.value, reference);\n                }\n            }\n            /* tslint:enable */\n        }\n    };\n    return PdfResources;\n}(PdfDictionary));\nexport { PdfResources };\n/* tslint:disable */\n/**\n * Used to create new guid for resources.\n * @private\n */\nvar Guid = /** @class */ (function () {\n    function Guid() {\n    }\n    /**\n     * Generate `new GUID`.\n     * @private\n     */\n    Guid.getNewGuidString = function () {\n        return 'aaaaaaaa-aaaa-4aaa-baaa-aaaaaaaaaaaa'.replace(/[ab]/g, function (c) {\n            var random = Math.random() * 16 | 0;\n            var result = c === 'a' ? random : (random & 0x3 | 0x8);\n            return result.toString(16);\n        });\n    };\n    return Guid;\n}());\nexport { Guid };\n/* tslint:enable */ \n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { GetResourceEventHandler } from './../pdf-graphics';\nimport { PdfBrush } from './pdf-brush';\nimport { PointF, SizeF, RectangleF, Rectangle } from './../../drawing/pdf-drawing';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfGraphics } from './../pdf-graphics';\nimport { PdfResources } from './../pdf-resources';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { PdfPage } from './../../pages/pdf-page';\n/**\n * `PdfTilingBrush` Implements a colored tiling brush.\n */\nvar PdfTilingBrush = /** @class */ (function (_super) {\n    __extends(PdfTilingBrush, _super);\n    /**\n     * Initializes a new instance of the `PdfTilingBrush` class.\n     * @public\n     */\n    function PdfTilingBrush(arg1, arg2) {\n        var _this = _super.call(this) || this;\n        /**\n         * Local variable to store Stroking.\n         * @private\n         */\n        _this.mStroking = false;\n        /**\n         * Local variable to store the tile start location.\n         * @private\n         */\n        _this.mLocation = new PointF(0, 0);\n        /**\n         * Local variable to store the dictionary properties.\n         * @private\n         */\n        _this.mDictionaryProperties = new DictionaryProperties();\n        var rect = null;\n        if (arg1 instanceof Rectangle) {\n            rect = arg1;\n        }\n        else if (arg1 instanceof SizeF) {\n            rect = new Rectangle(0, 0, arg1.width, arg1.height);\n        }\n        if (arg2 !== null && arg2 instanceof PdfPage) {\n            _this.mPage = arg2;\n        }\n        _this.brushStream = new PdfStream();\n        _this.mResources = new PdfResources();\n        _this.brushStream.items.setValue(_this.mDictionaryProperties.resources, _this.mResources);\n        _this.setBox(rect);\n        _this.setObligatoryFields();\n        if (arg2 !== null && arg2 instanceof PdfPage) {\n            _this.mPage = arg2;\n            _this.graphics.colorSpace = arg2.document.colorSpace;\n        }\n        return _this;\n    }\n    /**\n     * Initializes a new instance of the `PdfTilingBrush` class.\n     * @private\n     * @param rectangle The size of the smallest brush cell.\n     * @param page The Current Page Object.\n     * @param location The Tile start location.\n     * @param matrix The matrix.\n     */\n    PdfTilingBrush.prototype.initialize = function (rectangle, page, location, matrix) {\n        this.mPage = page;\n        this.mLocation = location;\n        this.mTransformationMatrix = matrix;\n        this.tempBrushStream = this.brushStream;\n        this.brushStream = new PdfStream();\n        var tempResource = new PdfResources();\n        this.brushStream.items.setValue(this.mDictionaryProperties.resources, tempResource);\n        this.setBox(rectangle);\n        this.setObligatoryFields();\n        return this;\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"location\", {\n        //Properties\n        /**\n         * Location representing the start position of the tiles.\n         * @public\n         */\n        get: function () {\n            return this.mLocation;\n        },\n        set: function (value) {\n            this.mLocation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the obligatory fields.\n     * @private\n     */\n    PdfTilingBrush.prototype.setObligatoryFields = function () {\n        this.brushStream.items.setValue(this.mDictionaryProperties.patternType, new PdfNumber(1));\n        //  Tiling brush.\n        this.brushStream.items.setValue(this.mDictionaryProperties.paintType, new PdfNumber(1));\n        //  Coloured.\n        this.brushStream.items.setValue(this.mDictionaryProperties.tilingType, new PdfNumber(1));\n        //  Constant spacing.\n        this.brushStream.items.setValue(this.mDictionaryProperties.xStep, new PdfNumber((this.mBox.right - this.mBox.left)));\n        this.brushStream.items.setValue(this.mDictionaryProperties.yStep, new PdfNumber((this.mBox.bottom - this.mBox.top)));\n        if ((this.mPage != null) && (this.mLocation != null)) {\n            if ((this.mTransformationMatrix == null && typeof this.mTransformationMatrix === 'undefined')) {\n                // Transform the tile origin to fit the location\n                var tileTransform = (this.mPage.size.height % this.rectangle.size.height) - (this.mLocation.y);\n                /* tslint:disable-next-line:max-line-length */\n                this.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray([1, 0, 0, 1, this.mLocation.x, tileTransform]));\n            }\n            else {\n                var tileTransform = 0;\n                // Transform the tile origin to fit the location\n                var elements = this.mTransformationMatrix.matrix.elements;\n                if ((this.mPage.size.height > this.rectangle.size.height)) {\n                    tileTransform = (this.mTransformationMatrix.matrix.offsetY\n                        - (this.mPage.size.height % this.rectangle.size.height));\n                }\n                else {\n                    tileTransform = ((this.mPage.size.height % this.rectangle.size.height) + this.mTransformationMatrix.matrix.offsetY);\n                }\n                this.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray([\n                    elements[0], elements[1], elements[2], elements[3], elements[4], tileTransform\n                ]));\n            }\n        }\n    };\n    /**\n     * Sets the BBox coordinates.\n     * @private\n     */\n    PdfTilingBrush.prototype.setBox = function (box) {\n        this.mBox = box;\n        var rect = new RectangleF(this.mBox.left, this.mBox.top, this.mBox.right, this.mBox.bottom);\n        this.brushStream.items.setValue(this.mDictionaryProperties.bBox, PdfArray.fromRectangle(rect));\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"rectangle\", {\n        //Properties\n        /**\n         * Gets the boundary box of the smallest brush cell.\n         * @public\n         */\n        get: function () {\n            return this.mBox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTilingBrush.prototype, \"size\", {\n        /**\n         * Gets the size of the smallest brush cell.\n         * @public\n         */\n        get: function () {\n            return this.mBox.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTilingBrush.prototype, \"graphics\", {\n        /**\n         * Gets Graphics context of the brush.\n         */\n        get: function () {\n            if ((this.mGraphics == null && typeof this.mGraphics === 'undefined')) {\n                var gr = new GetResourceEventHandler(this);\n                var g = new PdfGraphics(this.size, gr, this.brushStream);\n                this.mGraphics = g;\n                this.mResources = this.getResources();\n                this.mGraphics.initializeCoordinates();\n            }\n            return this.mGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the resources and modifies the template dictionary.\n     * @public\n     */\n    PdfTilingBrush.prototype.getResources = function () {\n        return this.mResources;\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"stroking\", {\n        /**\n         * Gets or sets a value indicating whether this PdfTilingBrush\n         * is used for stroking operations.\n         */\n        get: function () {\n            return this.mStroking;\n        },\n        set: function (value) {\n            this.mStroking = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //PdfBrush methods\n    /**\n     * Creates a new copy of a brush.\n     * @public\n     */\n    PdfTilingBrush.prototype.clone = function () {\n        var brush = this.initialize(this.rectangle, this.mPage, this.location, this.mTransformationMatrix);\n        if ((this.mTransformationMatrix != null) && (this.mTransformationMatrix.matrix != null)) {\n            /* tslint:disable-next-line:max-line-length */\n            brush.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray(this.mTransformationMatrix.matrix.elements));\n        }\n        brush.brushStream.data = this.tempBrushStream.data;\n        brush.mResources = new PdfResources(this.mResources);\n        brush.brushStream.items.setValue(this.mDictionaryProperties.resources, brush.mResources);\n        return brush;\n    };\n    /**\n     * Monitors the changes of the brush and modify PDF state respectfully.\n     * @param brush The brush\n     * @param streamWriter The stream writer\n     * @param getResources The get resources delegate.\n     * @param saveChanges if set to true the changes should be saved anyway.\n     * @param currentColorSpace The current color space.\n     */\n    /* tslint:disable-next-line:max-line-length */\n    PdfTilingBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {\n        var diff = false;\n        if (brush !== this) {\n            //  Set the Pattern colour space.\n            streamWriter.setColorSpace('Pattern', this.mStroking);\n            //  Set the pattern for non-stroking operations.\n            var resources1 = getResources.getResources();\n            var name1 = resources1.getName(this);\n            streamWriter.setColourWithPattern(null, name1, this.mStroking);\n            diff = true;\n        }\n        else if (brush instanceof PdfTilingBrush) {\n            //  Set the /Pattern colour space.\n            streamWriter.setColorSpace('Pattern', this.mStroking);\n            //  Set the pattern for non-stroking operations.\n            var resources = getResources.getResources();\n            var name_1 = resources.getName(this);\n            streamWriter.setColourWithPattern(null, name_1, this.mStroking);\n            diff = true;\n        }\n        return diff;\n    };\n    /**\n     * Resets the changes, which were made by the brush.\n     * In other words resets the state to the initial one.\n     * @param streamWriter The stream writer.\n     */\n    PdfTilingBrush.prototype.resetChanges = function (streamWriter) {\n        //  We shouldn't do anything to reset changes.\n        //  All changes will be reset automatically by setting a new colour space.\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"element\", {\n        /* tslint:enable */\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @public\n         */\n        get: function () {\n            return this.brushStream;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTilingBrush;\n}(PdfBrush));\nexport { PdfTilingBrush };\n","/**\n * PdfGraphics.ts class for EJ2-PDF\n */\nimport { PdfColorSpace, TextRenderingMode, PdfFillMode, PdfTextAlignment } from './enum';\nimport { PdfVerticalAlignment, PdfBlendMode } from './enum';\nimport { PdfSubSuperScript } from './fonts/enum';\nimport { PdfStreamWriter } from './../input-output/pdf-stream-writer';\nimport { PdfPen } from './pdf-pen';\nimport { PdfBrush } from './brushes/pdf-brush';\nimport { PdfSolidBrush } from './brushes/pdf-solid-brush';\nimport { PdfFont } from './fonts/pdf-font';\nimport { PdfTransformationMatrix } from './pdf-transformation-matrix';\nimport { PointF, SizeF, RectangleF } from './../drawing/pdf-drawing';\nimport { ProcedureSets } from './constants';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfStringFormat } from './fonts/pdf-string-format';\nimport { TemporaryDictionary } from './../collections/object-object-pair/dictionary';\nimport { PdfTransparency } from './pdf-transparency';\nimport { PdfStringLayouter, LineType } from './fonts/string-layouter';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { StringTokenizer } from './fonts/string-tokenizer';\nimport { PdfAutomaticFieldInfoCollection } from './../document/automatic-fields/automatic-field-info-collection';\nimport { PdfAutomaticFieldInfo } from './../document/automatic-fields/automatic-field-info';\nimport { Operators } from './../input-output/pdf-operators';\nimport { UnicodeTrueTypeFont } from './fonts/unicode-true-type-font';\nimport { InternalEnum } from './../primitives/pdf-string';\nimport { RtlRenderer } from './fonts/rtl-renderer';\nimport { PdfTextDirection } from './enum';\nimport { PathPointType } from './figures/enum';\nimport { PdfGradientBrush } from './../../implementation/graphics/brushes/pdf-gradient-brush';\nimport { PdfTilingBrush } from './brushes/pdf-tiling-brush';\n/**\n * `PdfGraphics` class represents a graphics context of the objects.\n * It's used for performing all the graphics operations.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * //\n * //graphics of the page\n * let page1Graphics : PdfGraphics = page1.graphics;\n * // draw the text on the page1 graphics\n * page1Graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * //\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfGraphics = /** @class */ (function () {\n    function PdfGraphics(arg1, arg2, arg3) {\n        /**\n         * Represents the `Current color space`.\n         * @private\n         */\n        this.currentColorSpace = PdfColorSpace.Rgb;\n        /**\n         * Stores `previous rendering mode`.\n         * @private\n         */\n        this.previousTextRenderingMode = TextRenderingMode.Fill;\n        /**\n         * Previous `character spacing` value or 0.\n         * @private\n         */\n        this.previousCharacterSpacing = 0.0;\n        /**\n         * Previous `word spacing` value or 0.\n         * @private\n         */\n        this.previousWordSpacing = 0.0;\n        /**\n         * The `previously used text scaling` value.\n         * @private\n         */\n        this.previousTextScaling = 100.0;\n        /**\n         * Instance of `ProcedureSets` class.\n         * @private\n         */\n        this.procedureSets = new ProcedureSets();\n        /**\n         * To check wihether it is a `direct text rendering`.\n         * @default true\n         * @private\n         */\n        this.isNormalRender = true;\n        /**\n         * check whether to `use font size` to calculate the shift.\n         * @default false\n         * @private\n         */\n        this.isUseFontSize = false;\n        /**\n         * check whether the font is in `italic type`.\n         * @default false\n         * @private\n         */\n        this.isItalic = false;\n        /**\n         * Check whether it is an `emf Text Matrix`.\n         * @default false\n         * @private\n         */\n        this.isEmfTextScaled = false;\n        /**\n         * Check whether it is an `emf` call.\n         * @default false\n         * @private\n         */\n        this.isEmf = false;\n        /**\n         * Check whether it is an `emf plus` call.\n         * @default false\n         * @private\n         */\n        this.isEmfPlus = false;\n        /**\n         * Check whether it is in `base line format`.\n         * @default true\n         * @private\n         */\n        this.isBaselineFormat = true;\n        /**\n         * Emf Text `Scaling Factor`.\n         * @private\n         */\n        this.emfScalingFactor = new SizeF(0, 0);\n        /**\n         * To check whether the `last color space` of document and garphics is saved.\n         * @private\n         */\n        this.colorSpaceChanged = false;\n        /**\n         * Stores an instance of `DictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isOverloadWithPosition = false;\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isPointOverload = false;\n        /**\n         * Current colorspaces.\n         * @hidden\n         * @private\n         */\n        this.currentColorSpaces = ['RGB', 'CMYK', 'GrayScale', 'Indexed'];\n        /**\n         * Checks the current image `is optimized` or not.\n         * @default false.\n         * @private\n         */\n        this.isImageOptimized = false;\n        /**\n         * Stores the `graphics states`.\n         * @private\n         */\n        this.graphicsState = [];\n        /**\n         * Indicates whether the object `had trasparency`.\n         * @default false\n         * @private\n         */\n        this.istransparencySet = false;\n        /**\n         * Stores the instance of `PdfAutomaticFieldInfoCollection` class .\n         * @default null\n         * @private\n         */\n        this.internalAutomaticFields = null;\n        /**\n         * Stores the index of the start line that should draw with in the next page.\n         * @private\n         */\n        this.startCutIndex = -1;\n        this.getResources = arg2;\n        this.canvasSize = arg1;\n        if (arg3 instanceof PdfStreamWriter) {\n            this.pdfStreamWriter = arg3;\n        }\n        else {\n            this.pdfStreamWriter = new PdfStreamWriter(arg3);\n        }\n        this.initialize();\n    }\n    Object.defineProperty(PdfGraphics.prototype, \"stringLayoutResult\", {\n        //  Properties\n        /**\n         * Returns the `result` after drawing string.\n         * @private\n         */\n        get: function () {\n            return this.pdfStringLayoutResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"size\", {\n        /**\n         * Gets the `size` of the canvas.\n         * @private\n         */\n        get: function () {\n            return this.canvasSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"mediaBoxUpperRightBound\", {\n        /**\n         * Gets and Sets the value of `MediaBox upper right bound`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.internalMediaBoxUpperRightBound === 'undefined') {\n                this.internalMediaBoxUpperRightBound = 0;\n            }\n            return this.internalMediaBoxUpperRightBound;\n        },\n        set: function (value) {\n            this.internalMediaBoxUpperRightBound = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"clientSize\", {\n        /**\n         * Gets the `size` of the canvas reduced by margins and page templates.\n         * @private\n         */\n        get: function () {\n            return new SizeF(this.clipBounds.width, this.clipBounds.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the current `color space` of the document\n         * @private\n         */\n        get: function () {\n            return this.currentColorSpace;\n        },\n        set: function (value) {\n            this.currentColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"streamWriter\", {\n        /**\n         * Gets the `stream writer`.\n         * @private\n         */\n        get: function () {\n            return this.pdfStreamWriter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"matrix\", {\n        /**\n         * Gets the `transformation matrix` reflecting current transformation.\n         * @private\n         */\n        get: function () {\n            if (this.transformationMatrix == null) {\n                this.transformationMatrix = new PdfTransformationMatrix();\n            }\n            return this.transformationMatrix;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"layer\", {\n        /**\n         * Gets the `layer` for the graphics, if exists.\n         * @private\n         */\n        get: function () {\n            return this.pageLayer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"page\", {\n        /**\n         * Gets the `page` for this graphics, if exists.\n         * @private\n         */\n        get: function () {\n            return this.pageLayer.page;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"automaticFields\", {\n        get: function () {\n            if (this.internalAutomaticFields == null || typeof this.internalAutomaticFields === 'undefined') {\n                this.internalAutomaticFields = new PdfAutomaticFieldInfoCollection();\n            }\n            return this.internalAutomaticFields;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Initializes` this instance.\n     * @private\n     */\n    PdfGraphics.prototype.initialize = function () {\n        this.bStateSaved = false;\n        this.currentPen = null;\n        this.currentBrush = null;\n        this.currentFont = null;\n        this.currentColorSpace = PdfColorSpace.Rgb;\n        this.bCSInitialized = false;\n        this.transformationMatrix = null;\n        this.previousTextRenderingMode = (-1); //.Fill;\n        this.previousCharacterSpacing = -1.0;\n        this.previousWordSpacing = -1.0;\n        this.previousTextScaling = -100.0;\n        // this.m_trasparencies = null;\n        this.currentStringFormat = null;\n        this.clipBounds = new RectangleF(new PointF(0, 0), this.size);\n        this.getResources.getResources().requireProcedureSet(this.procedureSets.pdf);\n    };\n    PdfGraphics.prototype.drawPdfTemplate = function (template, location, size) {\n        if (typeof size === 'undefined') {\n            if (template == null) {\n                throw Error('ArgumentNullException-template');\n            }\n            this.drawPdfTemplate(template, location, template.size);\n        }\n        else {\n            // let crossTable : PdfCrossTable = null;\n            // if (this.pageLayer != null) {\n            //     crossTable = (this.page as PdfPage).section.parentDocument.crossTable;\n            // }\n            if (template == null) {\n                throw Error('ArgumentNullException-template');\n            }\n            var scaleX = (template.width > 0) ? size.width / template.width : 1;\n            var scaleY = (template.height > 0) ? size.height / template.height : 1;\n            var bNeedScale = !(scaleX === 1 && scaleY === 1);\n            // Save state.\n            var state = this.save();\n            // Take into consideration that rect location is bottom/left.\n            var matrix = new PdfTransformationMatrix();\n            if (this.pageLayer != null) {\n                this.getTranslateTransform(location.x, location.y + size.height, matrix);\n            }\n            if (bNeedScale) {\n                this.getScaleTransform(scaleX, scaleY, matrix);\n            }\n            this.pdfStreamWriter.modifyCtm(matrix);\n            // Output template.\n            var resources = this.getResources.getResources();\n            var name_1 = resources.getName(template);\n            this.pdfStreamWriter.executeObject(name_1);\n            // Restore state.\n            this.restore(state);\n            //Transfer automatic fields from template.\n            var g = template.graphics;\n            if (g != null) {\n                for (var index = 0; index < g.automaticFields.automaticFields.length; index++) {\n                    var fieldInfo = g.automaticFields.automaticFields[index];\n                    var newLocation = new PointF(fieldInfo.location.x + location.x, fieldInfo.location.y + location.y);\n                    var scalingX = template.size.width == 0 ? 0 : size.width / template.size.width;\n                    var scalingY = template.size.height == 0 ? 0 : size.height / template.size.height;\n                    this.automaticFields.add(new PdfAutomaticFieldInfo(fieldInfo.field, newLocation, scalingX, scalingY));\n                    this.page.dictionary.modify();\n                }\n            }\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageB);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageC);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageI);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n        }\n    };\n    /* tslint:disable */\n    /**\n     * @public\n     */\n    PdfGraphics.prototype.drawString = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9) {\n        if (typeof arg1 === 'string' && arg2 instanceof PdfFont && (arg3 instanceof PdfPen || arg3 === null) && (arg4 instanceof PdfBrush || arg4 === null) && typeof arg5 === 'number' && typeof arg6 === 'number' && (arg7 instanceof PdfStringFormat || arg7 === null) && typeof arg8 === 'undefined') {\n            this.isOverloadWithPosition = true;\n            this.drawString(arg1, arg2, arg3, arg4, arg5, arg6, (this.clientSize.width - arg5), 0, arg7);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            var temparg6 = arg6;\n            var temparg7 = arg7;\n            var temparg8 = arg8;\n            var temparg9 = arg9;\n            var layouter = new PdfStringLayouter();\n            var result = layouter.layout(arg1, arg2, temparg9, new SizeF(temparg7, temparg8), this.isOverloadWithPosition, this.clientSize);\n            if (!result.empty) {\n                var rect = this.checkCorrectLayoutRectangle(result.actualSize, temparg5, temparg6, temparg9);\n                if (temparg7 <= 0) {\n                    temparg5 = rect.x;\n                    temparg7 = rect.width;\n                }\n                if (temparg8 <= 0) {\n                    temparg6 = rect.y;\n                    temparg8 = rect.height;\n                }\n                this.drawStringLayoutResult(result, arg2, temparg3, temparg4, new RectangleF(temparg5, temparg6, temparg7, temparg8), temparg9);\n                this.isEmfTextScaled = false;\n                this.emfScalingFactor = new SizeF(0, 0);\n            }\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n            this.isNormalRender = true;\n            this.pdfStringLayoutResult = result;\n            this.isUseFontSize = false;\n        }\n    }; /* tslint:enable */\n    PdfGraphics.prototype.drawLine = function (arg1, arg2, arg3, arg4, arg5) {\n        if (arg2 instanceof PointF) {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            this.drawLine(arg1, temparg2.x, temparg2.y, temparg3.x, temparg3.y);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            this.stateControl(arg1, null, null);\n            var sw = this.streamWriter;\n            sw.beginPath(temparg2, temparg3);\n            sw.appendLineSegment(temparg4, temparg5);\n            sw.strokePath();\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.pdf);\n        }\n    };\n    /* tslint:disable */\n    PdfGraphics.prototype.drawRectangle = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof PdfPen && typeof arg2 === 'number') {\n            var temparg3 = arg3;\n            this.drawRectangle(arg1, null, arg2, temparg3, arg4, arg5);\n        }\n        else if (arg1 instanceof PdfBrush && typeof arg2 === 'number') {\n            var temparg3 = arg3;\n            this.drawRectangle(null, arg1, arg2, temparg3, arg4, arg5);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            var temparg6 = arg6;\n            if ((arg2 instanceof PdfTilingBrush)) {\n                this.bCSInitialized = false;\n                var xOffset = (this.matrix.matrix.offsetX + temparg3);\n                var yOffset = void 0;\n                if (((this.layer != null) && (this.layer.page != null))) {\n                    yOffset = ((this.layer.page.size.height - this.matrix.matrix.offsetY) + temparg4);\n                }\n                else {\n                    yOffset = ((this.clientSize.height - this.matrix.matrix.offsetY) + temparg4);\n                }\n                (arg2).location = new PointF(xOffset, yOffset);\n                (arg2).graphics.colorSpace = this.colorSpace;\n            }\n            else if ((arg2 instanceof PdfGradientBrush)) {\n                arg2.colorSpace = this.colorSpace;\n            }\n            if (arg2 instanceof PdfSolidBrush && arg2.color.isEmpty) {\n                arg2 = null;\n            }\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            this.stateControl(temparg1, temparg2, null);\n            this.streamWriter.appendRectangle(temparg3, temparg4, temparg5, temparg6);\n            this.drawPathHelper(temparg1, temparg2, false);\n        }\n    };\n    PdfGraphics.prototype.drawPathHelper = function (arg1, arg2, arg3, arg4) {\n        if (typeof arg3 === 'boolean') {\n            var temparg3 = arg3;\n            this.drawPathHelper(arg1, arg2, PdfFillMode.Winding, temparg3);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var isPen = arg1 != null;\n            var isBrush = arg2 != null;\n            var isEvenOdd = (temparg3 === PdfFillMode.Alternate);\n            if (isPen && isBrush) {\n                this.streamWriter.fillStrokePath(isEvenOdd);\n            }\n            else if (!isPen && !isBrush) {\n                this.streamWriter.endPath();\n            }\n            else if (isPen) {\n                this.streamWriter.strokePath();\n            }\n            else {\n                this.streamWriter.fillPath(isEvenOdd);\n            }\n        }\n    };\n    /* tslint:disable */\n    PdfGraphics.prototype.drawImage = function (arg1, arg2, arg3, arg4, arg5) {\n        if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            var size = arg1.physicalDimension;\n            this.drawImage(arg1, arg2, arg3, size.width, size.height);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            arg1.save();\n            var matrix = new PdfTransformationMatrix();\n            this.getTranslateTransform(temparg2, (temparg3 + temparg5), matrix);\n            this.getScaleTransform(arg4, arg5, matrix);\n            this.pdfStreamWriter.write('q');\n            this.pdfStreamWriter.modifyCtm(matrix);\n            // Output template.\n            var resources = this.getResources.getResources();\n            if (typeof this.pageLayer !== 'undefined' && this.page != null) {\n                resources.document = this.page.document;\n            }\n            var name_2 = resources.getName(arg1);\n            if (typeof this.pageLayer !== 'undefined') {\n                this.page.setResources(resources);\n            }\n            this.pdfStreamWriter.executeObject(name_2);\n            this.pdfStreamWriter.write(Operators.restoreState);\n            this.pdfStreamWriter.write(Operators.newLine);\n            var resource = this.getResources.getResources();\n            resource.requireProcedureSet(this.procedureSets.imageB);\n            resource.requireProcedureSet(this.procedureSets.imageC);\n            resource.requireProcedureSet(this.procedureSets.imageI);\n            resource.requireProcedureSet(this.procedureSets.text);\n        }\n    };\n    //Implementation\n    /* tslint:disable */\n    /**\n     * Returns `bounds` of the line info.\n     * @private\n     */\n    PdfGraphics.prototype.getLineBounds = function (lineIndex, result, font, layoutRectangle, format) {\n        var bounds;\n        if (!result.empty && lineIndex < result.lineCount && lineIndex >= 0) {\n            var line = result.lines[lineIndex];\n            var vShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n            var y = vShift + layoutRectangle.y + (result.lineHeight * lineIndex);\n            var lineWidth = line.width;\n            var hShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n            var lineIndent = this.getLineIndent(line, format, layoutRectangle, (lineIndex === 0));\n            hShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n            var x = layoutRectangle.x + hShift;\n            /* tslint:disable */\n            var width = (!this.shouldJustify(line, layoutRectangle.width, format)) ? lineWidth - lineIndent : layoutRectangle.width - lineIndent; /* tslint:enable */\n            var height = result.lineHeight;\n            bounds = new RectangleF(x, y, width, height);\n        }\n        else {\n            bounds = new RectangleF(0, 0, 0, 0);\n        }\n        return bounds;\n    };\n    /**\n     * Creates `lay outed rectangle` depending on the text settings.\n     * @private\n     */\n    PdfGraphics.prototype.checkCorrectLayoutRectangle = function (textSize, x, y, format) {\n        var layoutedRectangle = new RectangleF(x, y, textSize.width, textSize.width);\n        if (format != null) {\n            switch (format.alignment) {\n                case PdfTextAlignment.Center:\n                    layoutedRectangle.x -= layoutedRectangle.width / 2;\n                    break;\n                case PdfTextAlignment.Right:\n                    layoutedRectangle.x -= layoutedRectangle.width;\n                    break;\n            }\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.Middle:\n                    layoutedRectangle.y -= layoutedRectangle.height / 2;\n                    break;\n                case PdfVerticalAlignment.Bottom:\n                    layoutedRectangle.y -= layoutedRectangle.height;\n                    break;\n            }\n        }\n        return layoutedRectangle;\n    };\n    /**\n     * Sets the `layer` for the graphics.\n     * @private\n     */\n    PdfGraphics.prototype.setLayer = function (layer) {\n        this.pageLayer = layer;\n        var page = layer.page;\n        if (page != null && typeof page !== 'undefined') {\n            page.beginSave = this.pageSave;\n        }\n    };\n    /**\n     * Adding page number field before page saving.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGraphics.prototype.pageSave = function (page) {\n        if (page.graphics.automaticFields != null) {\n            for (var i = 0; i < page.graphics.automaticFields.automaticFields.length; i++) {\n                var fieldInfo = page.graphics.automaticFields.automaticFields[i];\n                fieldInfo.field.performDraw(page.graphics, fieldInfo.location, fieldInfo.scalingX, fieldInfo.scalingY);\n            }\n        }\n    };\n    /**\n     * `Draws a layout result`.\n     * @private\n     */\n    PdfGraphics.prototype.drawStringLayoutResult = function (result, font, pen, brush, layoutRectangle, format) {\n        if (!result.empty) {\n            this.applyStringSettings(font, pen, brush, format, layoutRectangle);\n            // Set text scaling\n            var textScaling = (format != null) ? format.horizontalScalingFactor : 100.0;\n            if (textScaling !== this.previousTextScaling && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.setTextScaling(textScaling);\n                this.previousTextScaling = textScaling;\n            }\n            var height = (format == null || format.lineSpacing === 0) ? font.height : format.lineSpacing + font.height;\n            var subScript = (format != null && format.subSuperScript === PdfSubSuperScript.SubScript);\n            var shift = 0;\n            shift = (subScript) ? height - (font.height + font.metrics.getDescent(format)) : (height - font.metrics.getAscent(format));\n            this.shift = shift;\n            this.pdfStreamWriter.startNextLine(layoutRectangle.x, layoutRectangle.y - shift);\n            this.pdfStreamWriter.setLeading(+height);\n            var resultHeight = 0;\n            var remainingString = '';\n            for (var i = 0; i < result.lines.length; i++) {\n                resultHeight += result.lineHeight;\n                if ((layoutRectangle.y + resultHeight) > this.clientSize.height) {\n                    this.startCutIndex = i;\n                    break;\n                }\n            }\n            for (var j = this.startCutIndex; (j < result.lines.length && j >= 0); j++) {\n                remainingString += result.lines[j].text;\n            }\n            var bounds = new RectangleF(layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height);\n            this.drawLayoutResult(result, font, format, layoutRectangle);\n            this.underlineStrikeoutText(pen, brush, result, font, bounds, format);\n            this.isEmfPlus = false;\n            this.isUseFontSize = false;\n            if (this.startCutIndex !== -1) {\n                var page = this.getNextPage();\n                page.graphics.drawString(remainingString, font, pen, brush, layoutRectangle.x, 0, layoutRectangle.width, 0, format);\n            }\n        }\n        else {\n            throw new Error('ArgumentNullException:result');\n        }\n    };\n    /**\n     * Gets the `next page`.\n     * @private\n     */\n    PdfGraphics.prototype.getNextPage = function () {\n        var section = this.currentPage.section;\n        var nextPage = null;\n        var index = section.indexOf(this.currentPage);\n        if (index === section.count - 1) {\n            nextPage = section.add();\n        }\n        else {\n            nextPage = section.getPages()[index + 1];\n        }\n        return nextPage;\n    };\n    PdfGraphics.prototype.setClip = function (rectangle, mode) {\n        if (typeof mode === 'undefined') {\n            this.setClip(rectangle, PdfFillMode.Winding);\n        }\n        else {\n            this.pdfStreamWriter.appendRectangle(rectangle);\n            this.pdfStreamWriter.clipPath((mode === PdfFillMode.Alternate));\n        }\n    };\n    /**\n     * Applies all the `text settings`.\n     * @private\n     */\n    PdfGraphics.prototype.applyStringSettings = function (font, pen, brush, format, bounds) {\n        if (brush instanceof PdfTilingBrush) {\n            this.bCSInitialized = false;\n            brush.graphics.colorSpace = this.colorSpace;\n        }\n        else if ((brush instanceof PdfGradientBrush)) {\n            this.bCSInitialized = false;\n            brush.colorSpace = this.colorSpace;\n        }\n        var setLineWidth = false;\n        var tm = this.getTextRenderingMode(pen, brush, format);\n        this.stateControl(pen, brush, font, format);\n        this.pdfStreamWriter.beginText();\n        if ((tm) !== this.previousTextRenderingMode) {\n            this.pdfStreamWriter.setTextRenderingMode(tm);\n            this.previousTextRenderingMode = tm;\n        }\n        // Set character spacing.\n        var cs = (format != null) ? format.characterSpacing : 0;\n        if (cs !== this.previousCharacterSpacing && !this.isEmfTextScaled) {\n            this.pdfStreamWriter.setCharacterSpacing(cs);\n            this.previousCharacterSpacing = cs;\n        }\n        // Set word spacing.\n        // NOTE: it works only if the space code is equal to 32 (0x20).\n        var ws = (format != null) ? format.wordSpacing : 0;\n        if (ws !== this.previousWordSpacing) {\n            this.pdfStreamWriter.setWordSpacing(ws);\n            this.previousWordSpacing = ws;\n        }\n    };\n    /**\n     * Calculates `shift value` if the text is vertically aligned.\n     * @private\n     */\n    PdfGraphics.prototype.getTextVerticalAlignShift = function (textHeight, boundsHeight, format) {\n        var shift = 0;\n        if (boundsHeight >= 0 && format != null && format.lineAlignment !== PdfVerticalAlignment.Top) {\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.Middle:\n                    shift = (boundsHeight - textHeight) / 2;\n                    break;\n                case PdfVerticalAlignment.Bottom:\n                    shift = boundsHeight - textHeight;\n                    break;\n            }\n        }\n        return shift;\n    };\n    /* tslint:disable */\n    /**\n     * `Draws layout result`.\n     * @private\n     */\n    PdfGraphics.prototype.drawLayoutResult = function (result, font, format, layoutRectangle) {\n        var vAlignShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n        if (vAlignShift !== 0) {\n            this.pdfStreamWriter.startNextLine(0, vAlignShift);\n        }\n        var ttfFont = font;\n        var unicode = (ttfFont != null && ttfFont.isUnicode);\n        var embed = (ttfFont != null && ttfFont.isEmbedFont);\n        var lines = result.lines;\n        for (var i = 0, len = lines.length; (i < len && i !== this.startCutIndex); i++) {\n            var lineInfo = lines[i];\n            var line = lineInfo.text;\n            var lineWidth = lineInfo.width;\n            var hAlignShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n            var lineIndent = this.getLineIndent(lineInfo, format, layoutRectangle, (i === 0));\n            hAlignShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n            if (hAlignShift !== 0 && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.startNextLine(hAlignShift, 0);\n            }\n            if (unicode) {\n                this.drawUnicodeLine(lineInfo, layoutRectangle, font, format);\n            }\n            else {\n                this.drawAsciiLine(lineInfo, layoutRectangle, font, format);\n            }\n            if (hAlignShift !== 0 && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.startNextLine(-hAlignShift, 0);\n            }\n            if (this.isOverloadWithPosition && lines.length > 1) {\n                this.pdfStreamWriter.startNextLine(-(layoutRectangle.x), 0);\n                layoutRectangle.x = 0;\n                layoutRectangle.width = this.clientSize.width;\n                this.isOverloadWithPosition = false;\n                this.isPointOverload = true;\n            }\n        }\n        this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n        if (vAlignShift !== 0) {\n            this.pdfStreamWriter.startNextLine(0, -(vAlignShift - result.lineHeight));\n        }\n        this.pdfStreamWriter.endText();\n    };\n    /**\n     * `Draws Ascii line`.\n     * @private\n     */\n    PdfGraphics.prototype.drawAsciiLine = function (lineInfo, layoutRectangle, font, format) {\n        this.justifyLine(lineInfo, layoutRectangle.width, format);\n        var value = '';\n        if (lineInfo.text.indexOf('(') !== -1 || lineInfo.text.indexOf(')') !== -1) {\n            for (var i = 0; i < lineInfo.text.length; i++) {\n                if (lineInfo.text[i] === '(') {\n                    value += '\\\\\\(';\n                }\n                else if (lineInfo.text[i] === ')') {\n                    value += '\\\\\\)';\n                }\n                else {\n                    value += lineInfo.text[i];\n                }\n            }\n        }\n        if (value === '') {\n            value = lineInfo.text;\n        }\n        var line = '(' + value + ')';\n        this.pdfStreamWriter.showNextLineText(new PdfString(line));\n    };\n    /**\n     * Draws unicode line.\n     * @private\n     */\n    PdfGraphics.prototype.drawUnicodeLine = function (lineInfo, layoutRectangle, font, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var rtl = (format !== null && typeof format !== 'undefined' && format.rightToLeft);\n        var useWordSpace = (format !== null && typeof format !== 'undefined' && (format.wordSpacing !== 0 || format.alignment === PdfTextAlignment.Justify));\n        var ttfFont = font;\n        var wordSpacing = this.justifyLine(lineInfo, layoutRectangle.width, format);\n        var rtlRender = new RtlRenderer();\n        if (rtl || (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None)) {\n            var blocks = null;\n            var rightAlign = (format !== null && typeof format !== 'undefined' && format.alignment === PdfTextAlignment.Right);\n            if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n                /* tslint:disable-next-line:max-line-length */\n                blocks = rtlRender.layout(line, ttfFont, (format.textDirection === PdfTextDirection.RightToLeft) ? true : false, useWordSpace, format);\n            }\n            else {\n                blocks = rtlRender.layout(line, ttfFont, rightAlign, useWordSpace, format);\n            }\n            var words = null;\n            if (blocks.length > 1) {\n                if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n                    /* tslint:disable-next-line:max-line-length */\n                    words = rtlRender.splitLayout(line, ttfFont, (format.textDirection === PdfTextDirection.RightToLeft) ? true : false, useWordSpace, format);\n                }\n                else {\n                    words = rtlRender.splitLayout(line, ttfFont, rightAlign, useWordSpace, format);\n                }\n            }\n            else {\n                words = [line];\n            }\n            this.drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n        }\n        else {\n            if (useWordSpace) {\n                var result = this.breakUnicodeLine(line, ttfFont, null);\n                var blocks = result.tokens;\n                var words = result.words;\n                this.drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n            }\n            else {\n                var token = this.convertToUnicode(line, ttfFont);\n                var value = this.getUnicodeString(token);\n                this.streamWriter.showNextLineText(value);\n            }\n        }\n    };\n    /**\n     * Draws array of unicode tokens.\n     */\n    /* tslint:disable */\n    PdfGraphics.prototype.drawUnicodeBlocks = function (blocks, words, font, format, wordSpacing) {\n        /* tslint:enable */\n        if (blocks == null) {\n            throw new Error('Argument Null Exception : blocks');\n        }\n        if (words == null) {\n            throw new Error('Argument Null Exception : words');\n        }\n        if (font == null) {\n            throw new Error('Argument Null Exception : font');\n        }\n        this.streamWriter.startNextLine();\n        var x = 0;\n        var xShift = 0;\n        var firstLineIndent = 0;\n        var paragraphIndent = 0;\n        try {\n            if (format !== null && typeof format !== 'undefined') {\n                firstLineIndent = format.firstLineIndent;\n                paragraphIndent = format.paragraphIndent;\n                format.firstLineIndent = 0;\n                format.paragraphIndent = 0;\n            }\n            var spaceWidth = font.getCharWidth(StringTokenizer.whiteSpace, format) + wordSpacing;\n            var characterSpacing = (format != null) ? format.characterSpacing : 0;\n            var wordSpace = (format !== null && typeof format !== 'undefined' && wordSpacing === 0) ? format.wordSpacing : 0;\n            spaceWidth += characterSpacing + wordSpace;\n            for (var i = 0; i < blocks.length; i++) {\n                var token = blocks[i];\n                var word = words[i];\n                var tokenWidth = 0;\n                if (x !== 0) {\n                    this.streamWriter.startNextLine(x, 0);\n                }\n                if (word.length > 0) {\n                    tokenWidth += /*Utils.Round(*/ font.measureString(word, format).width /*)*/;\n                    tokenWidth += characterSpacing;\n                    var val = this.getUnicodeString(token);\n                    this.streamWriter.showText(val);\n                }\n                if (i !== blocks.length - 1) {\n                    x = tokenWidth + spaceWidth;\n                    xShift += x;\n                }\n            }\n            // Rolback current line position.\n            if (xShift > 0) {\n                this.streamWriter.startNextLine(-xShift, 0);\n            }\n        }\n        finally {\n            if (format !== null && typeof format !== 'undefined') {\n                format.firstLineIndent = firstLineIndent;\n                format.paragraphIndent = paragraphIndent;\n            }\n        }\n    };\n    /**\n     * Breakes the unicode line to the words and converts symbols to glyphs.\n     */\n    PdfGraphics.prototype.breakUnicodeLine = function (line, ttfFont, words) {\n        if (line === null) {\n            throw new Error('Argument Null Exception : line');\n        }\n        words = line.split(null);\n        var tokens = [];\n        for (var i = 0; i < words.length; i++) {\n            // Reconvert string according to unicode standard.\n            var word = words[i];\n            var token = this.convertToUnicode(word, ttfFont);\n            tokens[i] = token;\n        }\n        return { tokens: tokens, words: words };\n    };\n    /**\n     * Creates PdfString from the unicode text.\n     */\n    PdfGraphics.prototype.getUnicodeString = function (token) {\n        if (token === null) {\n            throw new Error('Argument Null Exception : token');\n        }\n        var val = new PdfString(token);\n        val.converted = true;\n        val.encode = InternalEnum.ForceEncoding.Ascii;\n        return val;\n    };\n    /**\n     * Converts to unicode format.\n     */\n    PdfGraphics.prototype.convertToUnicode = function (text, ttfFont) {\n        var token = null;\n        if (text == null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        if (ttfFont == null) {\n            throw new Error('Argument Null Exception : ttfFont');\n        }\n        if (ttfFont.fontInternal instanceof UnicodeTrueTypeFont) {\n            var ttfReader = ttfFont.fontInternal.ttfReader;\n            ttfFont.setSymbols(text);\n            token = ttfReader.convertString(text);\n            var bytes = PdfString.toUnicodeArray(token, false);\n            token = PdfString.byteToString(bytes);\n        }\n        return token;\n    };\n    /**\n     * `Justifies` the line if needed.\n     * @private\n     */\n    PdfGraphics.prototype.justifyLine = function (lineInfo, boundsWidth, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var shouldJustify = this.shouldJustify(lineInfo, boundsWidth, format);\n        var hasWordSpacing = (format != null && format.wordSpacing !== 0);\n        var symbols = StringTokenizer.spaces;\n        var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n        var wordSpace = 0;\n        if (shouldJustify) {\n            // Correct line width.\n            if (hasWordSpacing) {\n                lineWidth -= (whitespacesCount * format.wordSpacing);\n            }\n            var difference = boundsWidth - lineWidth;\n            wordSpace = difference / whitespacesCount;\n            this.pdfStreamWriter.setWordSpacing(wordSpace);\n        }\n        else {\n            // If there is justifying, but the line shouldn't be justified, restore default word spacing.\n            if (hasWordSpacing) {\n                this.pdfStreamWriter.setWordSpacing(format.wordSpacing);\n            }\n            else {\n                this.pdfStreamWriter.setWordSpacing(0);\n            }\n        }\n        return wordSpace;\n    };\n    /**\n     * `Reset` or reinitialize the current graphic value.\n     * @private\n     */\n    PdfGraphics.prototype.reset = function (size) {\n        this.canvasSize = size;\n        this.streamWriter.clear();\n        this.initialize();\n        this.initializeCoordinates();\n    };\n    /**\n     * Checks whether the line should be `justified`.\n     * @private\n     */\n    PdfGraphics.prototype.shouldJustify = function (lineInfo, boundsWidth, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var justifyStyle = (format != null && format.alignment === PdfTextAlignment.Justify);\n        var goodWidth = (boundsWidth >= 0 && lineWidth < boundsWidth);\n        var symbols = StringTokenizer.spaces;\n        var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n        var hasSpaces = (whitespacesCount > 0 && line[0] !== StringTokenizer.whiteSpace);\n        var goodLineBreakStyle = ((lineInfo.lineType & LineType.LayoutBreak) > 0);\n        /* tslint:disable */\n        var shouldJustify = (justifyStyle && goodWidth && hasSpaces && (goodLineBreakStyle || format.alignment === PdfTextAlignment.Justify)); /* tslint:enable */\n        return shouldJustify;\n    };\n    /* tslint:disable */\n    /**\n     * Emulates `Underline, Strikeout` of the text if needed.\n     * @private\n     */\n    PdfGraphics.prototype.underlineStrikeoutText = function (pen, brush, result, font, layoutRectangle, format) {\n        if (font.underline || font.strikeout) {\n            // Calculate line width.\n            var linePen = this.createUnderlineStikeoutPen(pen, brush, font, format);\n            if (linePen != null) {\n                // Approximate line positions.\n                var vShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n                var underlineYOffset = 0;\n                underlineYOffset = layoutRectangle.y + vShift + font.metrics.getAscent(format) + 1.5 * linePen.width;\n                var strikeoutYOffset = layoutRectangle.y + vShift + font.metrics.getHeight(format) / 2 + 1.5 * linePen.width;\n                var lines = result.lines;\n                // Run through the text and draw lines.\n                for (var i = 0, len = result.lineCount; i < len; i++) {\n                    var lineInfo = lines[i];\n                    var line = lineInfo.text;\n                    var lineWidth = lineInfo.width;\n                    var hShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n                    var lineIndent = this.getLineIndent(lineInfo, format, layoutRectangle, (i === 0));\n                    hShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n                    var x1 = layoutRectangle.x + hShift;\n                    /* tslint:disable */\n                    var x2 = (!this.shouldJustify(lineInfo, layoutRectangle.width, format)) ? x1 + lineWidth - lineIndent : x1 + layoutRectangle.width - lineIndent;\n                    /* tslint:enable */\n                    if (font.underline) {\n                        var y = underlineYOffset;\n                        this.drawLine(linePen, x1, y, x2, y);\n                        underlineYOffset += result.lineHeight;\n                    }\n                    if (font.strikeout) {\n                        var y = strikeoutYOffset;\n                        this.drawLine(linePen, x1, y, x2, y);\n                        strikeoutYOffset += result.lineHeight;\n                    }\n                    if (this.isPointOverload && lines.length > 1) {\n                        layoutRectangle.x = 0;\n                        layoutRectangle.width = this.clientSize.width;\n                    }\n                }\n                this.isPointOverload = false;\n            }\n        }\n    };\n    /**\n     * `Creates a pen` for drawing lines in the text.\n     * @private\n     */\n    PdfGraphics.prototype.createUnderlineStikeoutPen = function (pen, brush, font, format) {\n        // Calculate line width.\n        var lineWidth = font.metrics.getSize(format) / 20;\n        var linePen = null;\n        // Create a pen fo the lines.\n        if (pen != null) {\n            linePen = new PdfPen(pen.color, lineWidth);\n        }\n        else if (brush != null) {\n            linePen = new PdfPen(brush, lineWidth);\n        }\n        return linePen;\n    };\n    /**\n     * Return `text rendering mode`.\n     * @private\n     */\n    PdfGraphics.prototype.getTextRenderingMode = function (pen, brush, format) {\n        var tm = TextRenderingMode.None;\n        if (pen != null && brush != null) {\n            tm = TextRenderingMode.FillStroke;\n        }\n        else if (pen != null) {\n            tm = TextRenderingMode.Stroke;\n        }\n        else {\n            tm = TextRenderingMode.Fill;\n        }\n        if (format != null && format.clipPath) {\n            tm |= TextRenderingMode.ClipFlag;\n        }\n        return tm;\n    };\n    /**\n     * Returns `line indent` for the line.\n     * @private\n     */\n    PdfGraphics.prototype.getLineIndent = function (lineInfo, format, layoutBounds, firstLine) {\n        var lineIndent = 0;\n        var firstParagraphLine = ((lineInfo.lineType & LineType.FirstParagraphLine) > 0);\n        if (format != null && firstParagraphLine) {\n            lineIndent = (firstLine) ? format.firstLineIndent : format.paragraphIndent;\n            lineIndent = (layoutBounds.width > 0) ? Math.min(layoutBounds.width, lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    /**\n     * Calculates shift value if the line is `horizontaly aligned`.\n     * @private\n     */\n    PdfGraphics.prototype.getHorizontalAlignShift = function (lineWidth, boundsWidth, format) {\n        var shift = 0;\n        if (boundsWidth >= 0 && format != null && format.alignment !== PdfTextAlignment.Left) {\n            switch (format.alignment) {\n                case PdfTextAlignment.Center:\n                    shift = (boundsWidth - lineWidth) / 2;\n                    break;\n                case PdfTextAlignment.Right:\n                    shift = boundsWidth - lineWidth;\n                    break;\n            }\n        }\n        return shift;\n    };\n    /**\n     * Gets or sets the value that indicates `text direction` mode.\n     * @private\n     */\n    PdfGraphics.prototype.rightToLeft = function (format) {\n        var rtl = (format !== null && typeof format !== 'undefined' && format.rightToLeft);\n        if (format !== null && typeof format !== 'undefined') {\n            if (format.textDirection !== PdfTextDirection.None && typeof format.textDirection !== 'undefined') {\n                rtl = true;\n            }\n        }\n        return rtl;\n    };\n    PdfGraphics.prototype.stateControl = function (pen, brush, font, format) {\n        if (typeof format === 'undefined') {\n            this.stateControl(pen, brush, font, null);\n        }\n        else {\n            if (brush instanceof PdfGradientBrush) {\n                this.bCSInitialized = false;\n                brush.colorSpace = this.colorSpace;\n            }\n            if (brush instanceof PdfTilingBrush) {\n                this.bCSInitialized = false;\n                brush.graphics.colorSpace = this.colorSpace;\n            }\n            var saveState = false;\n            if (brush !== null) {\n                var solidBrush = brush;\n                if (typeof this.pageLayer !== 'undefined' && this.pageLayer != null) {\n                    if (this.colorSpaceChanged === false) {\n                        this.lastDocumentCS = this.pageLayer.page.document.colorSpace;\n                        this.lastGraphicsCS = this.pageLayer.page.graphics.colorSpace;\n                        this.colorSpace = this.pageLayer.page.document.colorSpace;\n                        this.currentColorSpace = this.pageLayer.page.document.colorSpace;\n                        this.colorSpaceChanged = true;\n                    }\n                }\n                this.initCurrentColorSpace(this.currentColorSpace);\n            }\n            else if (pen != null) {\n                var pdfPen = pen;\n                if (typeof this.pageLayer !== 'undefined' && this.pageLayer != null) {\n                    /* tslint:disable */\n                    this.colorSpace = this.pageLayer.page.document.colorSpace;\n                    this.currentColorSpace = this.pageLayer.page.document.colorSpace;\n                }\n                this.initCurrentColorSpace(this.currentColorSpace);\n            }\n            this.penControl(pen, saveState);\n            this.brushControl(brush, saveState);\n            this.fontControl(font, format, saveState);\n        }\n    };\n    /**\n     * Initializes the `current color space`.\n     * @private\n     */\n    PdfGraphics.prototype.initCurrentColorSpace = function (colorspace) {\n        var re = this.getResources.getResources();\n        if (!this.bCSInitialized) {\n            if (this.currentColorSpace != PdfColorSpace.GrayScale) {\n                this.pdfStreamWriter.setColorSpace('Device' + this.currentColorSpaces[this.currentColorSpace], true);\n                this.pdfStreamWriter.setColorSpace('Device' + this.currentColorSpaces[this.currentColorSpace], false);\n                this.bCSInitialized = true;\n            }\n            else {\n                this.pdfStreamWriter.setColorSpace('DeviceGray', true);\n                this.pdfStreamWriter.setColorSpace('DeviceGray', false);\n                this.bCSInitialized = true;\n            }\n        }\n    };\n    /**\n     * Controls the `pen state`.\n     * @private\n     */\n    PdfGraphics.prototype.penControl = function (pen, saveState) {\n        if (pen != null) {\n            this.currentPen = pen;\n            /* tslint:disable */\n            pen.monitorChanges(this.currentPen, this.pdfStreamWriter, this.getResources, saveState, this.colorSpace, this.matrix.clone());\n            /* tslint:enable */\n            this.currentPen = pen.clone();\n        }\n    };\n    /**\n     * Controls the `brush state`.\n     * @private\n     */\n    PdfGraphics.prototype.brushControl = function (brush, saveState) {\n        if (brush != null && typeof brush !== 'undefined') {\n            var b = brush.clone();\n            var lgb = b;\n            if (lgb !== null && typeof lgb !== 'undefined' && !(brush instanceof PdfSolidBrush) && !(brush instanceof PdfTilingBrush)) {\n                var m = lgb.matrix;\n                var matrix = this.matrix.clone();\n                if ((m != null)) {\n                    m.multiply(matrix);\n                    matrix = m;\n                }\n                lgb.matrix = matrix;\n            }\n            this.currentBrush = lgb;\n            var br = (brush);\n            /* tslint:disable */\n            b.monitorChanges(this.currentBrush, this.pdfStreamWriter, this.getResources, saveState, this.colorSpace);\n            /* tslint:enable */\n            this.currentBrush = brush;\n            brush = null;\n        }\n    };\n    /**\n     * Saves the font and other `font settings`.\n     * @private\n     */\n    PdfGraphics.prototype.fontControl = function (font, format, saveState) {\n        if (font != null) {\n            var curSubSuper = (format != null) ? format.subSuperScript : PdfSubSuperScript.None;\n            /* tslint:disable */\n            var prevSubSuper = (this.currentStringFormat != null) ? this.currentStringFormat.subSuperScript : PdfSubSuperScript.None; /* tslint:enable */\n            if (saveState || font !== this.currentFont || curSubSuper !== prevSubSuper) {\n                var resources = this.getResources.getResources();\n                this.currentFont = font;\n                this.currentStringFormat = format;\n                var size = font.metrics.getSize(format);\n                /* tslint:disable */\n                this.isEmfTextScaled = false;\n                var fontName = resources.getName(font);\n                this.pdfStreamWriter.setFont(font, fontName, size);\n            }\n        }\n    };\n    PdfGraphics.prototype.setTransparency = function (arg1, arg2, arg3) {\n        if (typeof arg2 === 'undefined') {\n            this.istransparencySet = true;\n            this.setTransparency(arg1, arg1, PdfBlendMode.Normal);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            this.setTransparency(arg1, arg2, PdfBlendMode.Normal);\n        }\n        else {\n            if (this.trasparencies == null) {\n                this.trasparencies = new TemporaryDictionary();\n            }\n            var transp = null;\n            var td = new TransparencyData(arg1, arg2, arg3);\n            if (this.trasparencies.containsKey(td)) {\n                transp = this.trasparencies.getValue(td);\n            }\n            if (transp == null) {\n                transp = new PdfTransparency(arg1, arg2, arg3);\n                this.trasparencies.setValue(td, transp);\n            }\n            var resources = this.getResources.getResources();\n            var name_3 = resources.getName(transp);\n            var sw = this.streamWriter;\n            sw.setGraphicsState(name_3);\n        }\n    };\n    PdfGraphics.prototype.clipTranslateMargins = function (x, y, left, top, right, bottom) {\n        if (x instanceof RectangleF && typeof y === 'undefined') {\n            this.clipBounds = x;\n            this.pdfStreamWriter.writeComment('Clip margins.');\n            this.pdfStreamWriter.appendRectangle(x);\n            this.pdfStreamWriter.closePath();\n            this.pdfStreamWriter.clipPath(false);\n            this.pdfStreamWriter.writeComment('Translate co-ordinate system.');\n            this.translateTransform(x.x, x.y);\n        }\n        else if (typeof x === 'number') {\n            var clipArea = new RectangleF(left, top, this.size.width - left - right, this.size.height - top - bottom);\n            this.clipBounds = clipArea;\n            this.pdfStreamWriter.writeComment(\"Clip margins.\");\n            this.pdfStreamWriter.appendRectangle(clipArea);\n            this.pdfStreamWriter.closePath();\n            this.pdfStreamWriter.clipPath(false);\n            this.pdfStreamWriter.writeComment(\"Translate co-ordinate system.\");\n            this.translateTransform(x, y);\n        }\n    };\n    /**\n     * `Updates y` co-ordinate.\n     * @private\n     */\n    PdfGraphics.prototype.updateY = function (y) {\n        return -y;\n    };\n    /**\n     * Used to `translate the transformation`.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // set pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // set translate transform\n     * page1.graphics.translateTransform(100, 100);\n     * //\n     * // draw the rectangle after applying translate transform\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param offsetX The x-coordinate of the translation.\n     * @param offsetY The y-coordinate of the translation.\n     */\n    PdfGraphics.prototype.translateTransform = function (offsetX, offsetY) {\n        var matrix = new PdfTransformationMatrix();\n        this.getTranslateTransform(offsetX, offsetY, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Translates` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getTranslateTransform = function (x, y, input) {\n        input.translate(x, this.updateY(y));\n        return input;\n    };\n    /* tslint:disable */\n    /**\n     * Applies the specified `scaling operation` to the transformation matrix of this Graphics by prepending it to the object's transformation matrix.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // apply scaling trasformation\n     * page1.graphics.scaleTransform(1.5, 2);\n     * //\n     * // draw the rectangle after applying scaling transform\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param scaleX Scale factor in the x direction.\n     * @param scaleY Scale factor in the y direction.\n     */\n    /* tslint:enable */\n    PdfGraphics.prototype.scaleTransform = function (scaleX, scaleY) {\n        var matrix = new PdfTransformationMatrix();\n        this.getScaleTransform(scaleX, scaleY, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Scales` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getScaleTransform = function (x, y, input) {\n        if (input == null) {\n            input = new PdfTransformationMatrix();\n        }\n        input.scale(x, y);\n        return input;\n    };\n    /**\n     * Applies the specified `rotation` to the transformation matrix of this Graphics.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // set RotateTransform with 25 degree of angle\n     * page1.graphics.rotateTransform(25);\n     * //\n     * // draw the rectangle after RotateTransformation\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param angle Angle of rotation in degrees.\n     */\n    PdfGraphics.prototype.rotateTransform = function (angle) {\n        var matrix = new PdfTransformationMatrix();\n        this.getRotateTransform(angle, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Initializes coordinate system`.\n     * @private\n     */\n    PdfGraphics.prototype.initializeCoordinates = function () {\n        // Matrix equation: TM(T-1)=M', where T=[1 0 0 -1 0 h]\n        this.pdfStreamWriter.writeComment('Change co-ordinate system to left/top.');\n        // Translate co-ordinates only, don't flip.\n        if (this.mediaBoxUpperRightBound !== -(this.size.height)) {\n            if (this.cropBox == null) {\n                if (this.mediaBoxUpperRightBound === this.size.height || this.mediaBoxUpperRightBound === 0) {\n                    this.translateTransform(0, this.updateY(this.size.height));\n                }\n                else {\n                    this.translateTransform(0, this.updateY(this.mediaBoxUpperRightBound));\n                }\n            }\n        }\n    };\n    /**\n     * `Rotates` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getRotateTransform = function (angle, input) {\n        if (input == null || typeof input === 'undefined') {\n            input = new PdfTransformationMatrix();\n        }\n        input.rotate(this.updateY(angle));\n        return input;\n    };\n    /**\n     * `Saves` the current state of this Graphics and identifies the saved state with a GraphicsState.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // save the graphics state\n     * let state1 : PdfGraphicsState = page1.graphics.save();\n     * //\n     * page1.graphics.scaleTransform(1.5, 2);\n     * // draw the rectangle\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // restore the graphics state\n     * page1.graphics.restore(state1);\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.save = function () {\n        var state = new PdfGraphicsState(this, this.matrix.clone());\n        state.brush = this.currentBrush;\n        state.pen = this.currentPen;\n        state.font = this.currentFont;\n        state.colorSpace = this.currentColorSpace;\n        state.characterSpacing = this.previousCharacterSpacing;\n        state.wordSpacing = this.previousWordSpacing;\n        state.textScaling = this.previousTextScaling;\n        state.textRenderingMode = this.previousTextRenderingMode;\n        this.graphicsState.push(state);\n        this.pdfStreamWriter.saveGraphicsState();\n        return state;\n    };\n    PdfGraphics.prototype.restore = function (state) {\n        if (typeof state === 'undefined') {\n            if (this.graphicsState.length > 0) {\n                this.doRestoreState();\n            }\n        }\n        else {\n            if (this.graphicsState.indexOf(state) !== -1) {\n                for (;;) {\n                    if (this.graphicsState.length === 0) {\n                        break;\n                    }\n                    var popState = this.doRestoreState();\n                    if (popState === state) {\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * `Restores graphics state`.\n     * @private\n     */\n    PdfGraphics.prototype.doRestoreState = function () {\n        var state = this.graphicsState.pop();\n        this.transformationMatrix = state.matrix;\n        this.currentBrush = state.brush;\n        this.currentPen = state.pen;\n        this.currentFont = state.font;\n        this.currentColorSpace = state.colorSpace;\n        this.previousCharacterSpacing = state.characterSpacing;\n        this.previousWordSpacing = state.wordSpacing;\n        this.previousTextScaling = state.textScaling;\n        this.previousTextRenderingMode = state.textRenderingMode;\n        this.pdfStreamWriter.restoreGraphicsState();\n        return state;\n    };\n    /* tslint:enable */\n    /**\n     * `Draws the specified path`, using its original physical size, at the location specified by a coordinate pair.\n     * ```typescript\n     * // create a new PDF document.\n     * let document : PdfDocument = new PdfDocument();\n     * // add a page to the document.\n     * let page1 : PdfPage = document.pages.add();\n     * //Create new PDF path.\n     * let path : PdfPath = new PdfPath();\n     * //Add line path points.\n     * path.addLine(new PointF(10, 100), new PointF(10, 200));\n     * path.addLine(new PointF(100, 100), new PointF(100, 200));\n     * path.addLine(new PointF(100, 200), new PointF(55, 150));\n     * // set pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(255, 0, 0));\n     * // set brush\n     * let brush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the path\n     * page1.graphics.drawPath(pen, brush, path);\n     * //\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param pen Color of the text.\n     * @param brush Color of the text.\n     * @param path Draw path.\n     */\n    PdfGraphics.prototype.drawPath = function (pen, brush, path) {\n        if (brush instanceof PdfTilingBrush) {\n            this.bCSInitialized = false;\n            brush.graphics.colorSpace = this.colorSpace;\n        }\n        else if (brush instanceof PdfGradientBrush) {\n            this.bCSInitialized = false;\n            brush.colorSpace = this.colorSpace;\n        }\n        this.stateControl(pen, brush, null);\n        this.buildUpPath(path.pathPoints, path.pathTypes);\n        this.drawPathHelper(pen, brush, path.fillMode, false);\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PdfGraphics.prototype.drawArc = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        if (arg2 instanceof RectangleF) {\n            this.drawArc(arg1, arg2.x, arg2.y, arg2.width, arg2.height, arg3, arg4);\n        }\n        else {\n            if ((arg7 !== 0)) {\n                this.stateControl(arg1, null, null);\n                this.constructArcPath(arg2, arg3, (arg2 + arg4), (arg3 + arg5), arg6, arg7);\n                this.drawPathHelper(arg1, null, false);\n            }\n        }\n    };\n    /**\n     * Builds up the path.\n     * @private\n     */\n    PdfGraphics.prototype.buildUpPath = function (arg1, arg2) {\n        var cnt = arg1.length;\n        for (var i = 0; i < cnt; ++i) {\n            var typeValue = 0;\n            var point = arg1[i];\n            switch (((arg2[i] & (PdfGraphics.pathTypesValuesMask)))) {\n                case PathPointType.Start:\n                    this.pdfStreamWriter.beginPath(point.x, point.y);\n                    break;\n                case PathPointType.Bezier3:\n                    var p2 = new PointF(0, 0);\n                    var p3 = new PointF(0, 0);\n                    var result1 = this.getBezierPoints(arg1, arg2, i, p2, p3);\n                    this.pdfStreamWriter.appendBezierSegment(point, result1.p2, result1.p3);\n                    i = result1.i;\n                    break;\n                case PathPointType.Line:\n                    this.pdfStreamWriter.appendLineSegment(point);\n                    break;\n                default:\n                    throw new Error('ArithmeticException - Incorrect path formation.');\n            }\n            typeValue = arg2[i];\n            this.checkFlags(typeValue);\n        }\n    };\n    /**\n     * Gets the bezier points from respective arrays.\n     * @private\n     */\n    /* tslint:disable-next-line:max-line-length */\n    PdfGraphics.prototype.getBezierPoints = function (points, types, i, p2, p3) {\n        var errorMsg = 'Malforming path.';\n        ++i;\n        if ((((types[i] & PdfGraphics.pathTypesValuesMask)) === PathPointType.Bezier3)) {\n            p2 = points[i];\n            ++i;\n            if ((((types[i] & PdfGraphics.pathTypesValuesMask)) === PathPointType.Bezier3)) {\n                p3 = points[i];\n            }\n            else {\n                throw new Error('ArgumentException : errorMsg');\n            }\n        }\n        else {\n            throw new Error('ArgumentException : errorMsg');\n        }\n        return { i: i, p2: p2, p3: p3 };\n    };\n    /**\n     * Checks path point type flags.\n     * @private\n     */\n    PdfGraphics.prototype.checkFlags = function (type) {\n        if ((((type & (PathPointType.CloseSubpath))) === PathPointType.CloseSubpath)) {\n            this.pdfStreamWriter.closePath();\n        }\n    };\n    /**\n     * Constructs the arc path using Bezier curves.\n     * @private\n     */\n    PdfGraphics.prototype.constructArcPath = function (x1, y1, x2, y2, startAng, sweepAngle) {\n        var points = this.getBezierArc(x1, y1, x2, y2, startAng, sweepAngle);\n        if ((points.length === 0)) {\n            return;\n        }\n        var pt = [points[0], points[1], points[2], points[3], points[4], points[5], points[6], points[7]];\n        this.pdfStreamWriter.beginPath(pt[0], pt[1]);\n        var i = 0;\n        for (i = 0; i < points.length; i = i + 8) {\n            pt = [points[i], points[i + 1], points[i + 2], points[i + 3], points[i + 4], points[i + 5], points[i + 6], points[i + 7]];\n            this.pdfStreamWriter.appendBezierSegment(pt[2], pt[3], pt[4], pt[5], pt[6], pt[7]);\n        }\n    };\n    /**\n     * Gets the bezier points for arc constructing.\n     * @private\n     */\n    PdfGraphics.prototype.getBezierArc = function (numX1, numY1, numX2, numY2, s1, e1) {\n        if ((numX1 > numX2)) {\n            var tmp = void 0;\n            tmp = numX1;\n            numX1 = numX2;\n            numX2 = tmp;\n        }\n        if ((numY2 > numY1)) {\n            var tmp = void 0;\n            tmp = numY1;\n            numY1 = numY2;\n            numY2 = tmp;\n        }\n        var fragAngle1;\n        var numFragments;\n        if ((Math.abs(e1) <= 90)) {\n            fragAngle1 = e1;\n            numFragments = 1;\n        }\n        else {\n            numFragments = (Math.ceil((Math.abs(e1) / 90)));\n            fragAngle1 = (e1 / numFragments);\n        }\n        var xcen = ((numX1 + numX2) / 2);\n        var ycen = ((numY1 + numY2) / 2);\n        var rx = ((numX2 - numX1) / 2);\n        var ry = ((numY2 - numY1) / 2);\n        var halfAng = ((fragAngle1 * (Math.PI / 360)));\n        var kappa = (Math.abs(4.0 / 3.0 * (1.0 - Math.cos(halfAng)) / Math.sin(halfAng)));\n        var pointsList = [];\n        for (var i = 0; (i < numFragments); i++) {\n            var thetaValue0 = (((s1 + (i * fragAngle1)) * (Math.PI / 180)));\n            var thetaValue1 = (((s1 + ((i + 1) * fragAngle1)) * (Math.PI / 180)));\n            var cos0 = (Math.cos(thetaValue0));\n            var cos1 = (Math.cos(thetaValue1));\n            var sin0 = (Math.sin(thetaValue0));\n            var sin1 = (Math.sin(thetaValue1));\n            if ((fragAngle1 > 0)) {\n                /* tslint:disable-next-line:max-line-length */\n                pointsList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 - (kappa * sin0)))), (ycen - (ry * (sin0 + (kappa * cos0)))), (xcen + (rx * (cos1 + (kappa * sin1)))), (ycen - (ry * (sin1 - (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n            else {\n                /* tslint:disable-next-line:max-line-length */\n                pointsList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 + (kappa * sin0)))), (ycen - (ry * (sin0 - (kappa * cos0)))), (xcen + (rx * (cos1 - (kappa * sin1)))), (ycen - (ry * (sin1 + (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n        }\n        return pointsList;\n    };\n    // Constants\n    /**\n     * Specifies the mask of `path type values`.\n     * @private\n     */\n    PdfGraphics.pathTypesValuesMask = 0xf;\n    /**\n     * Checks whether the object is `transparencyObject`.\n     * @hidden\n     * @private\n     */\n    PdfGraphics.transparencyObject = false;\n    return PdfGraphics;\n}());\nexport { PdfGraphics };\n/**\n * `GetResourceEventHandler` class is alternate for event handlers and delegates.\n * @private\n * @hidden\n */\nvar GetResourceEventHandler = /** @class */ (function () {\n    /**\n     * Initialize instance of `GetResourceEventHandler` class.\n     * Alternate for event handlers and delegates.\n     * @private\n     */\n    function GetResourceEventHandler(sender) {\n        this.sender = sender;\n    }\n    /**\n     * Return the instance of `PdfResources` class.\n     * @private\n     */\n    GetResourceEventHandler.prototype.getResources = function () {\n        return this.sender.getResources();\n    };\n    return GetResourceEventHandler;\n}());\nexport { GetResourceEventHandler };\nvar PdfGraphicsState = /** @class */ (function () {\n    function PdfGraphicsState(graphics, matrix) {\n        /**\n         * Stores `previous rendering mode`.\n         * @default TextRenderingMode.Fill\n         * @private\n         */\n        this.internalTextRenderingMode = TextRenderingMode.Fill;\n        /**\n         * `Previous character spacing` value or 0.\n         * @default 0.0\n         * @private\n         */\n        this.internalCharacterSpacing = 0.0;\n        /**\n         * `Previous word spacing` value or 0.\n         * @default 0.0\n         * @private\n         */\n        this.internalWordSpacing = 0.0;\n        /**\n         * The previously used `text scaling value`.\n         * @default 100.0\n         * @private\n         */\n        this.internalTextScaling = 100.0;\n        /**\n         * `Current color space`.\n         * @default PdfColorSpace.Rgb\n         * @private\n         */\n        this.pdfColorSpace = PdfColorSpace.Rgb;\n        if (typeof graphics !== 'undefined') {\n            this.pdfGraphics = graphics;\n            this.transformationMatrix = matrix;\n        }\n    }\n    Object.defineProperty(PdfGraphicsState.prototype, \"graphics\", {\n        // Properties\n        /**\n         * Gets the parent `graphics object`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"matrix\", {\n        /**\n         * Gets the `current matrix`.\n         * @private\n         */\n        get: function () {\n            return this.transformationMatrix;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"characterSpacing\", {\n        /**\n         * Gets or sets the `current character spacing`.\n         * @private\n         */\n        get: function () {\n            return this.internalCharacterSpacing;\n        },\n        set: function (value) {\n            this.internalCharacterSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"wordSpacing\", {\n        /**\n         * Gets or sets the `word spacing` value.\n         * @private\n         */\n        get: function () {\n            return this.internalWordSpacing;\n        },\n        set: function (value) {\n            this.internalWordSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"textScaling\", {\n        /**\n         * Gets or sets the `text scaling` value.\n         * @private\n         */\n        get: function () {\n            return this.internalTextScaling;\n        },\n        set: function (value) {\n            this.internalTextScaling = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"pen\", {\n        /**\n         * Gets or sets the `current pen` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfPen;\n        },\n        set: function (value) {\n            this.pdfPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"brush\", {\n        /**\n         * Gets or sets the `brush`.\n         * @private\n         */\n        get: function () {\n            return this.pdfBrush;\n        },\n        set: function (value) {\n            this.pdfBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"font\", {\n        /**\n         * Gets or sets the `current font` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfFont;\n        },\n        set: function (value) {\n            this.pdfFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the `current color space` value.\n         * @private\n         */\n        get: function () {\n            return this.pdfColorSpace;\n        },\n        set: function (value) {\n            this.pdfColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"textRenderingMode\", {\n        /**\n         * Gets or sets the `text rendering mode`.\n         * @private\n         */\n        get: function () {\n            return this.internalTextRenderingMode;\n        },\n        set: function (value) {\n            this.internalTextRenderingMode = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGraphicsState;\n}());\nexport { PdfGraphicsState };\nvar TransparencyData = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `TransparencyData` class.\n     * @private\n     */\n    function TransparencyData(alphaPen, alphaBrush, blendMode) {\n        this.alphaPen = alphaPen;\n        this.alphaBrush = alphaBrush;\n        this.blendMode = blendMode;\n    }\n    return TransparencyData;\n}());\n","import { PdfStream } from './../primitives/pdf-stream';\nimport { PdfGraphics, GetResourceEventHandler } from './../graphics/pdf-graphics';\nimport { PdfPageLayerCollection } from './pdf-page-layer-collection';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfColorSpace } from './../graphics/enum';\n/**\n * The `PdfPageLayer` used to create layers in PDF document.\n * @private\n */\nvar PdfPageLayer = /** @class */ (function () {\n    function PdfPageLayer(page, streamClipPageTemplates) {\n        // private bSaved : boolean;\n        /**\n         * Local Variable to store the `color space` of the document.\n         * @private\n         */\n        this.pdfColorSpace = PdfColorSpace.Rgb;\n        /**\n         * Local Variable to set `visibility`.\n         * @default true\n         * @private\n         */\n        this.isVisible = true;\n        /**\n         * Indicates if `Sublayer` is present.\n         * @default false\n         * @private\n         */\n        this.sublayer = false;\n        /**\n         * Local variable to store `length` of the graphics.\n         * @default 0\n         * @private\n         */\n        this.contentLength = 0;\n        /**\n         * Instance for `PdfDictionaryProperties` Class.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        if (page === null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        this.pdfPage = page;\n        this.clipPageTemplates = true;\n        if (typeof streamClipPageTemplates === 'undefined') {\n            this.content = new PdfStream();\n        }\n        else if (streamClipPageTemplates instanceof PdfStream || streamClipPageTemplates === null) {\n            if (streamClipPageTemplates === null) {\n                throw new Error('ArgumentNullException:stream');\n            }\n            this.content = streamClipPageTemplates;\n        }\n        else {\n            this.content = new PdfStream();\n            this.clipPageTemplates = streamClipPageTemplates;\n        }\n    }\n    Object.defineProperty(PdfPageLayer.prototype, \"colorSpace\", {\n        // Properties\n        /**\n         * Get or set the `color space`.\n         * @private\n         */\n        get: function () {\n            return this.pdfColorSpace;\n        },\n        set: function (value) {\n            this.pdfColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"page\", {\n        /**\n         * Gets parent `page` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"layerId\", {\n        /**\n         * Gets and Sets the `id of the layer`.\n         * @private\n         */\n        get: function () {\n            return this.layerid;\n        },\n        set: function (value) {\n            this.layerid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"name\", {\n        /**\n         * Gets or sets the `name` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.layerName;\n        },\n        set: function (value) {\n            this.layerName = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"visible\", {\n        /**\n         * Gets or sets the `visibility` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.isVisible;\n        },\n        set: function (value) {\n            this.isVisible = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"graphics\", {\n        /**\n         * Gets `Graphics` context of the layer, used to draw various graphical content on layer.\n         * @private\n         */\n        get: function () {\n            if ((this.pdfGraphics == null)) {\n                this.initializeGraphics(this.page);\n            }\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"layers\", {\n        /**\n         * Gets the collection of `PdfPageLayer`, this collection handle by the class 'PdfPageLayerCollection'.\n         * @private\n         */\n        get: function () {\n            if (this.layer == null) {\n                this.layer = new PdfPageLayerCollection(this.page);\n                this.layer.sublayer = true;\n                return this.layer;\n            }\n            else {\n                return this.layer;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Adds` a new PDF Page layer.\n     * @private\n     */\n    PdfPageLayer.prototype.add = function () {\n        var layer = new PdfPageLayer(this.pdfPage);\n        layer.name = '';\n        return layer;\n    };\n    /**\n     * Returns a value indicating the `sign` of a single-precision floating-point number.\n     * @private\n     */\n    PdfPageLayer.prototype.sign = function (number) {\n        if (number === 0) {\n            return 0;\n        }\n        else if (number > 0) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    };\n    /**\n     * `Initializes Graphics context` of the layer.\n     * @private\n     */\n    PdfPageLayer.prototype.initializeGraphics = function (page) {\n        var oPage = page;\n        var gr = new GetResourceEventHandler(this.page);\n        var cropBox = null;\n        this.pdfGraphics = new PdfGraphics(page.size, gr, this.content);\n        this.pdfGraphics.mediaBoxUpperRightBound = 0;\n        if (oPage != null) {\n            var sc = oPage.section.parent;\n            if (sc != null) {\n                this.pdfGraphics.colorSpace = sc.document.colorSpace;\n                this.colorSpace = sc.document.colorSpace;\n            }\n        }\n        // Transform coordinates to the left/top and activate margins.\n        var isSame = (this.sign(page.origin.y) === this.sign(page.origin.x));\n        // if (page != null) {\n        if (page.origin.x >= 0 && page.origin.y >= 0 || !(isSame)) {\n            this.pdfGraphics.initializeCoordinates();\n        }\n        else {\n            // this.m_graphics.InitializeCoordinates(page);\n        }\n        var clipRect = oPage.section.getActualBounds(oPage, true);\n        var margins = oPage.section.pageSettings.margins;\n        if (this.clipPageTemplates) {\n            if (page.origin.x >= 0 && page.origin.y >= 0) {\n                this.pdfGraphics.clipTranslateMargins(clipRect);\n            }\n        }\n        else {\n            this.graphics.clipTranslateMargins(clipRect.x, clipRect.y, margins.left, margins.top, margins.right, margins.bottom);\n        }\n        this.pdfGraphics.setLayer(this);\n        // this.bSaved = false;\n    };\n    Object.defineProperty(PdfPageLayer.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfPageLayer;\n}());\nexport { PdfPageLayer };\n","/**\n * PdfCollection.ts class for EJ2-PDF\n * The class used to handle the collection of PdF objects.\n */\nvar PdfCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `Collection` class.\n     * @private\n     */\n    function PdfCollection() {\n        //\n    }\n    Object.defineProperty(PdfCollection.prototype, \"count\", {\n        // Properties\n        /**\n         * Gets the `Count` of stored objects.\n         * @private\n         */\n        get: function () {\n            if (typeof this.collection === 'undefined') {\n                this.collection = [];\n            }\n            return this.collection.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCollection.prototype, \"list\", {\n        /**\n         * Gets the `list` of stored objects.\n         * @private\n         */\n        get: function () {\n            if (typeof this.collection === 'undefined') {\n                this.collection = [];\n            }\n            return this.collection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCollection;\n}());\nexport { PdfCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfPageLayerCollection.ts class for EJ2-PDF\n */\nimport { PdfPageBase } from './pdf-page-base';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfPageLayer } from './pdf-page-layer';\nimport { PdfCollection } from './../general/pdf-collection';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfStream } from './../primitives/pdf-stream';\n/**\n * The class provides methods and properties to handle the collections of `PdfPageLayer`.\n */\nvar PdfPageLayerCollection = /** @class */ (function (_super) {\n    __extends(PdfPageLayerCollection, _super);\n    function PdfPageLayerCollection(page) {\n        var _this = _super.call(this) || this;\n        /**\n         * Stores the `number of first level layers` in the document.\n         * @default 0\n         * @private\n         */\n        _this.parentLayerCount = 0;\n        /**\n         * Indicates if `Sublayer` is present.\n         * @default false\n         * @private\n         */\n        _this.sublayer = false;\n        /**\n         * Stores the `optional content dictionary`.\n         * @private\n         */\n        _this.optionalContent = new PdfDictionary();\n        if (page instanceof PdfPageBase) {\n            // if (page == null) {\n            //     throw new Error('ArgumentNullException:page');\n            // }\n            _this.page = page;\n            var lPage = page;\n            // if (lPage != null) {\n            _this.parseLayers(lPage);\n            // }\n        }\n        return _this;\n    }\n    PdfPageLayerCollection.prototype.items = function (index, value) {\n        if (typeof index === 'number' && typeof value === 'undefined') {\n            var obj = this.list[index];\n            return obj;\n        }\n        else {\n            if (value == null) {\n                throw new Error('ArgumentNullException: layer');\n            }\n            if (value.page !== this.page) {\n                throw new Error('ArgumentException: The layer belongs to another page');\n            }\n            // // Add/remove the layer.\n            // let layer : PdfPageLayer = this.items(index);\n            // if (layer != null) {\n            //     this.RemoveLayer(layer);\n            // }\n            // this.List[index] = value;\n            // this.InsertLayer(index, value);\n        }\n    };\n    PdfPageLayerCollection.prototype.add = function (firstArgument, secondArgument) {\n        if (typeof firstArgument === 'undefined') {\n            var layer = new PdfPageLayer(this.page);\n            layer.name = '';\n            this.add(layer);\n            return layer;\n        }\n        else if (firstArgument instanceof PdfPageLayer) {\n            // if (layer == null)\n            //     throw new ArgumentNullException(\"layer\");\n            // if (layer.Page != m_page)\n            //     throw new ArgumentException(\"The layer belongs to another page\");\n            var index = this.list.push(firstArgument);\n            // Register layer.\n            this.addLayer(index, firstArgument);\n            return index;\n        }\n        else {\n            return 0;\n        }\n    };\n    /**\n     * Registers `layer` at the page.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.addLayer = function (index, layer) {\n        var reference = new PdfReferenceHolder(layer);\n        this.page.contents.add(reference);\n    };\n    // private RemoveLayer(layer : PdfPageLayer) : void {\n    //     if (layer == null) {\n    //         throw new Error('ArgumentNullException:layer');\n    //     }\n    //     let reference : PdfReferenceHolder = new PdfReferenceHolder(layer);\n    //     if (this.page != null) {\n    //         this.page.Contents.Remove(reference);\n    //     }\n    // }\n    /**\n     * Inserts `PdfPageLayer` into the collection at specified index.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.insert = function (index, layer) {\n        // if (index < 0)\n        //     throw new ArgumentOutOfRangeException(\"index\", \"Value can not be less 0\");\n        // if (layer == null)\n        //     throw new ArgumentNullException(\"layer\");\n        // if (layer.Page != m_page)\n        //     throw new ArgumentException(\"The layer belongs to another page\");\n        var list = [];\n        var length = this.list.length;\n        for (var i = index; i < length; i++) {\n            list.push(this.list.pop());\n        }\n        this.list.push(layer);\n        for (var i = 0; i < list.length; i++) {\n            this.list.push(list[i]);\n        }\n        // Register layer.\n        this.insertLayer(index, layer);\n    };\n    /**\n     * Registers layer at the page.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.insertLayer = function (index, layer) {\n        if (layer == null) {\n            throw new Error('ArgumentNullException:layer');\n        }\n        var reference = new PdfReferenceHolder(layer);\n        this.page.contents.insert(index, reference);\n    };\n    // tslint:disable\n    /**\n     * `Parses the layers`.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.parseLayers = function (loadedPage) {\n        // if (loadedPage == null) {\n        //     throw new Error('ArgumentNullException:loadedPage');\n        // }\n        var contents = this.page.contents;\n        var resource = this.page.getResources();\n        var crossTable = null;\n        var ocproperties = null;\n        var propertie = null;\n        var isLayerAdded = false;\n        // if (loadedPage instanceof PdfPage) {\n        crossTable = loadedPage.crossTable;\n        // } else {\n        //     crossTable = (loadedPage as PdfLoadedPage).CrossTable;\n        //     Propertie = PdfCrossTable.Dereference(Resource[DictionaryProperties.Properties]) as PdfDictionary;\n        //     ocproperties = PdfCrossTable.Dereference((loadedPage as PdfLoadedPage).\n        //     Document.Catalog[DictionaryProperties.OCProperties]) as PdfDictionary;\n        // }\n        var saveStream = new PdfStream();\n        var restoreStream = new PdfStream();\n        var saveState = 'q';\n        var newLine = '\\n';\n        var restoreState = 'Q';\n        // for (let index : number = 0; index < contents.Items.length; index++) {\n        //     let obj : IPdfPrimitive = contents[index];\n        //     let stream : PdfStream = crossTable.GetObject(obj) as PdfStream;\n        //     if (stream == null)\n        //         throw new PdfDocumentException(\"Invalid contents array.\");\n        //     // if (stream.Compress)\n        //     {\n        //         if (!loadedPage.Imported)\n        //             stream.Decompress();\n        //     }\n        //     byte[] contentId = stream.Data;\n        //     string str = PdfString.ByteToString(contentId);\n        //     if (!loadedPage.Imported && (contents.Count == 1) && ((stream.Data[stream.Data.Length - 2] ==\n        //     RestoreState) || (stream.Data[stream.Data.Length - 1] == RestoreState)))\n        //     {\n        //         byte[] content = stream.Data;\n        //         byte[] data = new byte[content.Length + 4];\n        //         data[0] = SaveState;\n        //         data[1] = NewLine;\n        //         content.CopyTo(data, 2);\n        //         data[data.Length - 2] = NewLine;\n        //         data[data.Length - 1] = RestoreState;\n        //         stream.Data = data;\n        //     }\n        //     if (ocproperties != null)\n        //     {\n        //         if (Propertie != null)\n        //         {\n        //             foreach (KeyValuePair<PdfName, IPdfPrimitive> prop in Propertie.Items)\n        //             {\n        //                 String Key = prop.Key.ToString();\n        //                 PdfReferenceHolder refh = prop.Value as PdfReferenceHolder;\n        //                 PdfDictionary Dict = null;\n        //                 if (refh != null)\n        //                 {\n        //                     Dict = refh.Object as PdfDictionary;\n        //                 }\n        //                 else\n        //                 {\n        //                     Dict = prop.Value as PdfDictionary;\n        //                 }\n        //                 PdfDictionary m_usage = PdfCrossTable.Dereference(Dict[DictionaryProperties.Usage]) as PdfDictionary;\n        //                 if (m_usage != null)\n        //                 {\n        //                     if (str.Contains(Key))\n        //                     {\n        //                         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //                         PdfDictionary printoption = PdfCrossTable.Dereference(m_usage[DictionaryProperties.Print])\n        //                         as PdfDictionary;\n        //                         if (printoption != null)\n        //                         {\n        //                             layer.m_printOption = printoption;\n        //                             foreach (KeyValuePair<PdfName, IPdfPrimitive> value in printoption.Items)\n        //                             {\n        //                                 if (value.Key.Value.Equals(DictionaryProperties.PrintState))\n        //                                 {\n        //                                     string printState = (value.Value as PdfName).Value;\n        //                                     if (printState.Equals(DictionaryProperties.OCGON))\n        //                                     {\n        //                                         layer.PrintState = PdfPrintState.AlwaysPrint;\n        //                                         break;\n        //                                     }\n        //                                     else\n        //                                     {\n        //                                         layer.PrintState = PdfPrintState.NeverPrint;\n        //                                         break;\n        //                                     }\n        //                                 }\n        //                             }\n        //                         }\n        //                         PdfString layerName = PdfCrossTable.Dereference(Dict[DictionaryProperties.Name]) as PdfString;\n        //                         layer.Name = layerName.Value;\n        //                         List.add(layer);\n        //                         isLayerAdded = true;\n        //                         if(!str.Contains(\"EMC\"))\n        //                         break;\n        //                     }\n        //                 }\n        //                 else\n        //                 {\n        //                     if (str.Contains(Key))\n        //                     {\n        //                         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //                         List.add(layer);\n        //                         if(Dict.ContainsKey(DictionaryProperties.Name))\n        //                         {\n        //                         PdfString layerName = PdfCrossTable.Dereference(Dict[DictionaryProperties.Name]) as PdfString;\n        //                         layer.Name = layerName.Value;\n        //                         }\n        //                         isLayerAdded = true;\n        //                         break;\n        //                     }\n        //                 }\n        //             }\n        //         }\n        //     }\n        //     if (!isLayerAdded)\n        //     {\n        //         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //         List.add(layer);\n        //     }\n        //     else\n        //         isLayerAdded = false;\n        // }\n        var saveData = [];\n        saveData.push(saveState);\n        saveStream.data = saveData;\n        contents.insert(0, new PdfReferenceHolder(saveStream));\n        saveData = [];\n        saveData.push(restoreState);\n        restoreStream.data = saveData;\n        contents.insert(contents.count, new PdfReferenceHolder(restoreStream));\n    };\n    /**\n     * Returns `index of` the `PdfPageLayer` in the collection if exists, -1 otherwise.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.indexOf = function (layer) {\n        if (layer == null) {\n            throw new Error('ArgumentNullException: layer');\n        }\n        var index = this.list.indexOf(layer);\n        return index;\n    };\n    return PdfPageLayerCollection;\n}(PdfCollection));\nexport { PdfPageLayerCollection };\n","import { PdfArray } from './../primitives/pdf-array';\nimport { PdfPageLayerCollection } from './pdf-page-layer-collection';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfResources } from './../graphics/pdf-resources';\n/**\n * The abstract base class for all pages,\n * `PdfPageBase` class provides methods and properties to create PDF pages and its elements.\n * @private\n */\nvar PdfPageBase = /** @class */ (function () {\n    //constructors\n    /**\n     * Initializes a new instance of the `PdfPageBase` class.\n     * @private\n     */\n    function PdfPageBase(dictionary) {\n        /**\n         * `Index` of the default layer.\n         * @default -1.\n         * @private\n         */\n        this.defLayerIndex = -1;\n        /**\n         * Local variable to store if page `updated`.\n         * @default false.\n         * @private\n         */\n        this.modified = false;\n        /**\n         * Instance of `DictionaryProperties` class.\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.pageDictionary = dictionary;\n    }\n    Object.defineProperty(PdfPageBase.prototype, \"section\", {\n        //Properties\n        /**\n         * Gets the `section` of a page.\n         * @private\n         */\n        get: function () {\n            // if (this.pdfSection === null) {\n            //     throw new Error('PdfException : Page must be added to some section before using.');\n            // }\n            return this.pdfSection;\n        },\n        set: function (value) {\n            this.pdfSection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"dictionary\", {\n        /**\n         * Gets the page `dictionary`.\n         * @private\n         */\n        get: function () {\n            return this.pageDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.pageDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"defaultLayer\", {\n        /**\n         * Gets the `default layer` of the page (Read only).\n         * @private\n         */\n        get: function () {\n            var layer = this.layers;\n            var index = this.defaultLayerIndex;\n            var returnlayer = layer.items(index);\n            return returnlayer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"defaultLayerIndex\", {\n        /**\n         * Gets or sets `index of the default layer`.\n         * @private\n         */\n        get: function () {\n            if (this.layerCollection.count === 0 || this.defLayerIndex === -1) {\n                var layer = this.layerCollection.add();\n                this.defLayerIndex = this.layerCollection.indexOf(layer);\n            }\n            return this.defLayerIndex;\n        },\n        /**\n         * Gets or sets` index of the default layer`.\n         * @private\n         */\n        set: function (value) {\n            if (value < 0 || value > this.layers.count - 1) {\n                throw new Error('ArgumentOutOfRangeException : value, Index can not be less 0 and greater Layers.Count - 1');\n            }\n            else {\n                this.defLayerIndex = value;\n                this.modified = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"layers\", {\n        /**\n         * Gets the collection of the page's `layers` (Read only).\n         * @private\n         */\n        get: function () {\n            if (this.layerCollection == null || typeof this.layerCollection === 'undefined') {\n                this.layerCollection = new PdfPageLayerCollection(this);\n            }\n            return this.layerCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return an instance of `PdfResources` class.\n     * @private\n     */\n    PdfPageBase.prototype.getResources = function () {\n        if (this.resources == null) {\n            this.resources = new PdfResources();\n            this.dictionary.items.setValue(this.dictionaryProperties.resources, this.resources);\n        }\n        return this.resources;\n    };\n    Object.defineProperty(PdfPageBase.prototype, \"contents\", {\n        /**\n         * Gets `array of page's content`.\n         * @private\n         */\n        get: function () {\n            var obj = this.pageDictionary.items.getValue(this.dictionaryProperties.contents);\n            var contents = obj;\n            var rh = obj;\n            if (contents == null) {\n                contents = new PdfArray();\n                this.pageDictionary.items.setValue(this.dictionaryProperties.contents, contents);\n            }\n            return contents;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the `resources`.\n     * @private\n     */\n    PdfPageBase.prototype.setResources = function (res) {\n        this.resources = res;\n        this.dictionary.items.setValue(this.dictionaryProperties.resources, this.resources);\n        this.modified = true;\n    };\n    return PdfPageBase;\n}());\nexport { PdfPageBase };\n","import { PdfArray } from './../primitives/pdf-array';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { SizeF, RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfStringLayouter } from './../graphics/fonts/string-layouter';\nimport { PdfColorSpace } from './../graphics/enum';\n/**\n * `PdfAnnotationCollection` class represents the collection of 'PdfAnnotation' objects.\n * @private\n */\nvar PdfAnnotationCollection = /** @class */ (function () {\n    function PdfAnnotationCollection(page) {\n        // Constants\n        /**\n         * `Error` constant message.\n         * @private\n         */\n        this.alreadyExistsAnnotationError = 'This annotatation had been already added to page';\n        /**\n         * `Error` constant message.\n         * @private\n         */\n        this.missingAnnotationException = 'Annotation is not contained in collection.';\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Array of the `annotations`.\n         * @private\n         */\n        this.internalAnnotations = new PdfArray();\n        /**\n         * privte `list` for the annotations.\n         * @private\n         */\n        this.lists = [];\n        if (typeof page !== 'undefined') {\n            this.page = page;\n        }\n    }\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"annotations\", {\n        /**\n         * Gets the `PdfAnnotation` object at the specified index. Read-Only.\n         * @private\n         */\n        get: function () {\n            return this.internalAnnotations;\n        },\n        set: function (value) {\n            this.internalAnnotations = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /**\n     * `Adds` a new annotation to the collection.\n     * @private\n     */\n    PdfAnnotationCollection.prototype.add = function (annotation) {\n        // this.SetPrint(annotation);\n        this.doAdd(annotation);\n    };\n    /**\n     * `Adds` a Annotation to collection.\n     * @private\n     */\n    /* tslint:disable */\n    PdfAnnotationCollection.prototype.doAdd = function (annotation) {\n        if (typeof annotation.destination !== 'undefined') {\n            var layout = new PdfStringLayouter();\n            var layoutResult = layout.layout(annotation.text, annotation.font, annotation.stringFormat, new SizeF((annotation.bounds.width), 0), false, new SizeF(0, 0));\n            var lastPosition = annotation.bounds.y;\n            if (layoutResult.lines.length === 1) {\n                var size = annotation.font.measureString(layoutResult.lines[0].text);\n                annotation.bounds = new RectangleF(new PointF(annotation.bounds.x, lastPosition), size);\n                annotation.text = layoutResult.lines[0].text;\n                //Draw Annotation Text.\n                this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, annotation.bounds.y, annotation.bounds.width, annotation.bounds.height, null);\n                //Add annotation to dictionary.\n                annotation.setPage(this.page);\n                this.setColor(annotation);\n                this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n                this.lists.push(annotation);\n            }\n            else {\n                for (var i = 0; i < layoutResult.lines.length; i++) {\n                    var size = annotation.font.measureString(layoutResult.lines[i].text);\n                    if (i === 0) {\n                        annotation.bounds = new RectangleF(annotation.bounds.x, lastPosition, size.width, size.height);\n                        annotation.text = layoutResult.lines[i].text;\n                        //Draw Annotation Text.\n                        this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, lastPosition, size.width, size.height, null);\n                        //Add annotation to dictionary.\n                        annotation.setPage(this.page);\n                        this.setColor(annotation);\n                        this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n                        this.lists.push(annotation);\n                        //Update y for drawing next line of the text.\n                        lastPosition += annotation.bounds.height;\n                    }\n                    else {\n                        var annot = annotation.clone();\n                        annot.bounds = new RectangleF(new PointF(annotation.bounds.x, lastPosition), size);\n                        annot.text = layoutResult.lines[i].text;\n                        //Draw Annotation Text.\n                        this.page.graphics.drawString(annot.text, annot.font, null, annot.brush, annot.bounds.x, annot.bounds.y, annot.bounds.width, annot.bounds.height, null);\n                        //Add annotation to dictionary.\n                        annot.setPage(this.page);\n                        this.setColor(annot);\n                        this.internalAnnotations.add(new PdfReferenceHolder(annot));\n                        this.lists.push(annot);\n                        //Update y for drawing next line of the text.\n                        lastPosition += annot.bounds.height;\n                    }\n                }\n            }\n        }\n        else {\n            annotation.setPage(this.page);\n            this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n            return this.lists.push(annotation);\n        }\n    };\n    /* tslint:enable */\n    /**\n     * `Set a color of an annotation`.\n     * @private\n     */\n    PdfAnnotationCollection.prototype.setColor = function (annotation) {\n        var cs = PdfColorSpace.Rgb;\n        var colours = annotation.color.toArray(cs);\n        annotation.dictionary.items.setValue(this.dictionaryProperties.c, colours);\n    };\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the `Element` representing this object.\n         * @private\n         */\n        get: function () {\n            return this.internalAnnotations;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationCollection;\n}());\nexport { PdfAnnotationCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPageBase } from './pdf-page-base';\nimport { PdfDictionary, SaveTemplateEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { SizeF } from './../drawing/pdf-drawing';\nimport { PdfAnnotationCollection } from './../annotations/annotation-collection';\nimport { PdfPageLayer } from './pdf-page-layer';\n/**\n * Provides methods and properties to create pages and its elements.\n * `PdfPage` class inherited from the `PdfPageBase` class.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * //\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * //\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPage = /** @class */ (function (_super) {\n    __extends(PdfPage, _super);\n    //constructors\n    /**\n     * Initialize the new instance for `PdfPage` class.\n     * @private\n     */\n    function PdfPage() {\n        var _this = _super.call(this, new PdfDictionary()) || this;\n        /**\n         * Stores the instance of `PdfAnnotationCollection` class.\n         * @hidden\n         * @default null\n         * @private\n         */\n        _this.annotationCollection = null;\n        /**\n         * Stores the instance of `PageBeginSave` event for Page Number Field.\n         * @default null\n         * @private\n         */\n        _this.beginSave = null;\n        _this.initialize();\n        return _this;\n    }\n    Object.defineProperty(PdfPage.prototype, \"document\", {\n        //Properties\n        /**\n         * Gets current `document`.\n         * @private\n         */\n        get: function () {\n            if (this.section !== null && this.section.parent !== null) {\n                return this.section.parent.document;\n            }\n            else {\n                return null;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"graphics\", {\n        /**\n         * Get the current `graphics`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a new page to the document\n         * let page1 : PdfPage = document.pages.add();\n         * //\n         * // get graphics\n         * let graphics : PdfGraphics = page1.graphics;\n         * //\n         * // set the font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // create black brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // draw the text\n         * graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var result = this.defaultLayer.graphics;\n            result.currentPage = this;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"crossTable\", {\n        /**\n         * Gets the `cross table`.\n         * @private\n         */\n        get: function () {\n            if (this.section === null) {\n                throw new Error('PdfDocumentException : Page is not created');\n            }\n            return this.section.parent === null ? this.section.parentDocument.crossTable : this.section.parent.document.crossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"size\", {\n        /**\n         * Gets the size of the PDF page- Read only.\n         * @public\n         */\n        get: function () {\n            return this.section.pageSettings.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"origin\", {\n        /**\n         * Gets the `origin` of the page.\n         * @private\n         */\n        get: function () {\n            return this.section.pageSettings.origin;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"annotations\", {\n        /**\n         * Gets a collection of the `annotations` of the page- Read only.\n         * @private\n         */\n        get: function () {\n            if (this.annotationCollection == null) {\n                this.annotationCollection = new PdfAnnotationCollection(this);\n                // if (!this.Dictionary.ContainsKey(this.dictionaryProperties.annots)) {\n                this.dictionary.items.setValue(this.dictionaryProperties.annots, this.annotationCollection.element);\n                // }\n                this.annotationCollection.annotations = this.dictionary.items.getValue(this.dictionaryProperties.annots);\n            }\n            return this.annotationCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Initializes` a page.\n     * @private\n     */\n    PdfPage.prototype.initialize = function () {\n        this.dictionary.items.setValue(this.dictionaryProperties.type, new PdfName('Page'));\n        this.dictionary.pageBeginDrawTemplate = new SaveTemplateEventHandler(this);\n    };\n    /**\n     * Sets parent `section` to the page.\n     * @private\n     */\n    PdfPage.prototype.setSection = function (section) {\n        this.section = section;\n        this.dictionary.items.setValue(this.dictionaryProperties.parent, new PdfReferenceHolder(section));\n    };\n    /**\n     * `Resets the progress`.\n     * @private\n     */\n    PdfPage.prototype.resetProgress = function () {\n        this.isProgressOn = false;\n    };\n    /**\n     * Get the page size reduced by page margins and page template dimensions.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a pages to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // create new standard font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // set brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * //\n     * // set the specified point using `getClientSize` method\n     * let point : PointF = new PointF(page1.getClientSize().width - 200, page1.getClientSize().height - 200);\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, point);\n     * //\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPage.prototype.getClientSize = function () {\n        var returnValue = this.section.getActualBounds(this, true);\n        return new SizeF(returnValue.width, returnValue.height);\n    };\n    /**\n     * Helper method to retrive the instance of `PageBeginSave` event for header and footer elements.\n     * @private\n     */\n    PdfPage.prototype.pageBeginSave = function () {\n        var doc = this.document;\n        if (typeof doc !== undefined && doc != null) {\n            this.drawPageTemplates(doc);\n        }\n        if (this.beginSave != null && typeof this.beginSave !== 'undefined') {\n            this.beginSave(this);\n        }\n    };\n    /**\n     * Helper method to draw template elements.\n     * @private\n     */\n    PdfPage.prototype.drawPageTemplates = function (document) {\n        // Draw Background templates.\n        var hasBackTemplates = this.section.containsTemplates(document, this, false);\n        if (hasBackTemplates) {\n            var backLayer = new PdfPageLayer(this, false);\n            this.layers.insert(0, backLayer);\n            this.section.drawTemplates(this, backLayer, document, false);\n            if (backLayer.graphics !== null && typeof backLayer.graphics !== 'undefined') {\n                for (var i = 0; i < backLayer.graphics.automaticFields.automaticFields.length; i++) {\n                    var fieldInfo = backLayer.graphics.automaticFields.automaticFields[i];\n                    fieldInfo.field.performDraw(backLayer.graphics, fieldInfo.location, fieldInfo.scalingX, fieldInfo.scalingY);\n                }\n            }\n        }\n        // Draw Foreground templates.\n        var hasFrontTemplates = this.section.containsTemplates(document, this, true);\n        if (hasFrontTemplates) {\n            var frontLayer = new PdfPageLayer(this, false);\n            this.layers.add(frontLayer);\n            this.section.drawTemplates(this, frontLayer, document, true);\n        }\n    };\n    return PdfPage;\n}(PdfPageBase));\nexport { PdfPage };\n","/**\n * Provides data for `PageAddedEventHandler` event.\n * This event raises when adding the new PDF page to the PDF document.\n */\nvar PageAddedEventArgs = /** @class */ (function () {\n    function PageAddedEventArgs(page) {\n        if (typeof page !== 'undefined') {\n            this.pdfPage = page;\n        }\n        else {\n            this.pdfPage = null;\n        }\n    }\n    Object.defineProperty(PageAddedEventArgs.prototype, \"page\", {\n        /**\n         * Gets the `newly added page`.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PageAddedEventArgs;\n}());\nexport { PageAddedEventArgs };\n","/**\n * Represents the `collection of pages in a section`.\n * @private\n */\nvar PdfSectionPageCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfSectionPageCollection` class.\n     * @private\n     */\n    function PdfSectionPageCollection(section) {\n        //  Fields\n        /**\n         * @hidden\n         * @private\n         */\n        this.pdfSection = null;\n        if (section == null) {\n            throw Error('ArgumentNullException(\"section\")');\n        }\n        this.section = section;\n    }\n    Object.defineProperty(PdfSectionPageCollection.prototype, \"section\", {\n        // Properties\n        /**\n         * Gets the `PdfPage` at the specified index.\n         * @private\n         */\n        get: function () {\n            return this.pdfSection;\n        },\n        set: function (value) {\n            this.pdfSection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public Methods\n    /**\n     * `Determines` whether the specified page is within the collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.contains = function (page) {\n        return this.section.contains(page);\n    };\n    /**\n     * `Removes` the specified page from collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.remove = function (page) {\n        this.section.remove(page);\n    };\n    /**\n     * `Adds` a new page from collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.add = function () {\n        return this.section.add();\n    };\n    return PdfSectionPageCollection;\n}());\nexport { PdfSectionPageCollection };\n","import { TemplateType } from './../pages/enum';\n// import { PdfStampCollection } from `./../Pages/PdfStampCollection`;\n/**\n * `PdfDocumentTemplate` class encapsulates a page template for all the pages in the document.\n * @private\n */\nvar PdfDocumentTemplate = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfDocumentTemplate` class.\n     * @public\n     */\n    function PdfDocumentTemplate() {\n        //\n    }\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"left\", {\n        // private m_stamps : PdfStampCollection;\n        // Properties\n        /**\n         * `Left` page template object.\n         * @public\n         */\n        get: function () {\n            return this.leftTemplate;\n        },\n        set: function (value) {\n            this.leftTemplate = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"top\", {\n        /**\n         * `Top` page template object.\n         * @public\n         */\n        get: function () {\n            return this.topTemplate;\n        },\n        set: function (value) {\n            this.topTemplate = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"right\", {\n        /**\n         * `Right` page template object.\n         * @public\n         */\n        get: function () {\n            return this.rightTemplate;\n        },\n        set: function (value) {\n            this.rightTemplate = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"bottom\", {\n        /**\n         * `Bottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.bottomTemplate;\n        },\n        set: function (value) {\n            this.bottomTemplate = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenLeft\", {\n        /**\n         * `EvenLeft` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenLeft;\n        },\n        set: function (value) {\n            this.evenLeft = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenTop\", {\n        /**\n         * `EvenTop` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenTop;\n        },\n        set: function (value) {\n            this.evenTop = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenRight\", {\n        /**\n         * `EvenRight` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenRight;\n        },\n        set: function (value) {\n            this.evenRight = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenBottom\", {\n        /**\n         * `EvenBottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenBottom;\n        },\n        set: function (value) {\n            this.evenBottom = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddLeft\", {\n        /**\n         * `OddLeft` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddLeft;\n        },\n        set: function (value) {\n            this.oddLeft = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddTop\", {\n        /**\n         * `OddTop` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddTop;\n        },\n        set: function (value) {\n            this.oddTop = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddRight\", {\n        /**\n         * `OddRight` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddRight;\n        },\n        set: function (value) {\n            this.oddRight = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddBottom\", {\n        /**\n         * `OddBottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddBottom;\n        },\n        set: function (value) {\n            this.oddBottom = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Returns `left` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getLeft = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenLeft != null) ? this.EvenLeft : this.left;\n        }\n        else {\n            template = (this.OddLeft != null) ? this.OddLeft : this.left;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `top` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getTop = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenTop != null) ? this.EvenTop : this.top;\n        }\n        else {\n            template = (this.OddTop != null) ? this.OddTop : this.top;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `right` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getRight = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenRight != null) ? this.EvenRight : this.right;\n        }\n        else {\n            template = (this.OddRight != null) ? this.OddRight : this.right;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `bottom` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getBottom = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenBottom != null) ? this.EvenBottom : this.bottom;\n        }\n        else {\n            template = (this.OddBottom != null) ? this.OddBottom : this.bottom;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Checks whether the page `is even`.\n     * @private\n     */\n    PdfDocumentTemplate.prototype.isEven = function (page) {\n        var pages = page.section.document.pages;\n        var index = 0;\n        if (pages.pageCollectionIndex.containsKey(page)) {\n            index = pages.pageCollectionIndex.getValue(page) + 1;\n        }\n        else {\n            index = pages.indexOf(page) + 1;\n        }\n        var even = ((index % 2) === 0);\n        return even;\n    };\n    /**\n     * Checks a `template element`.\n     * @private\n     */\n    PdfDocumentTemplate.prototype.checkElement = function (templateElement, type) {\n        if (templateElement != null) {\n            if ((typeof templateElement.type !== 'undefined') && (templateElement.type !== TemplateType.None)) {\n                throw new Error('NotSupportedException:Can not reassign the template element. Please, create new one.');\n            }\n            templateElement.type = type;\n        }\n        return templateElement;\n    };\n    return PdfDocumentTemplate;\n}());\nexport { PdfDocumentTemplate };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSectionTemplate.ts class for EJ2-PDF\n */\nimport { PdfDocumentTemplate } from './../document/pdf-document-template';\n/**\n * Represents a `page template` for all the pages in the section.\n */\nvar PdfSectionTemplate = /** @class */ (function (_super) {\n    __extends(PdfSectionTemplate, _super);\n    // Constructors\n    /**\n     * `Creates a new object`.\n     * @private\n     */\n    function PdfSectionTemplate() {\n        var _this = _super.call(this) || this;\n        _this.leftValue = _this.topValue = _this.rightValue = _this.bottomValue = _this.stampValue = true;\n        return _this;\n    }\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentLeftTemplate\", {\n        // Properties\n        /**\n         * Gets or sets value indicating whether parent `Left page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.leftValue;\n        },\n        set: function (value) {\n            this.leftValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentTopTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Top page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.topValue;\n        },\n        set: function (value) {\n            this.topValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentRightTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Right page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.rightValue;\n        },\n        set: function (value) {\n            this.rightValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentBottomTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Bottom page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.bottomValue;\n        },\n        set: function (value) {\n            this.bottomValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentStamps\", {\n        /**\n         * Gets or sets value indicating whether the `stamp value` is true or not.\n         * @private\n         */\n        get: function () {\n            return this.stampValue;\n        },\n        set: function (value) {\n            this.stampValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfSectionTemplate;\n}(PdfDocumentTemplate));\nexport { PdfSectionTemplate };\n","import { PdfPage } from './pdf-page';\nimport { PageAddedEventArgs } from './page-added-event-arguments';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { SaveSectionEventHandler } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfSectionCollection } from './pdf-section-collection';\nimport { PdfSectionPageCollection } from './pdf-section-page-collection';\nimport { RectangleF } from './../drawing/pdf-drawing';\nimport { PdfSectionTemplate } from './pdf-section-templates';\n/**\n * Represents a `section` entity. A section it's a set of the pages with similar page settings.\n */\nvar PdfSection = /** @class */ (function () {\n    function PdfSection(document, pageSettings) {\n        //Fields\n        //public PageAdded() : PageAddedEventArgs.PageAddedEventHandler = new PageAddedEventArgs.PageAddedEventHandler(Object,args)\n        /**\n         * @hidden\n         * @private\n         */\n        this.pageAdded = new PageAddedEventArgs();\n        /**\n         * @hidden\n         * @private\n         */\n        this.pdfPages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.pdfDocument = document;\n        if (typeof pageSettings === 'undefined') {\n            this.settings = document.pageSettings.clone();\n            this.initialSettings = this.settings.clone();\n        }\n        else {\n            this.settings = pageSettings.clone();\n            this.initialSettings = this.settings.clone();\n        }\n        this.initialize();\n    }\n    Object.defineProperty(PdfSection.prototype, \"parent\", {\n        //Property\n        /**\n         * Gets or sets the `parent`.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection;\n        },\n        set: function (value) {\n            this.sectionCollection = value;\n            this.section.items.setValue(this.dictionaryProperties.parent, new PdfReferenceHolder(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"parentDocument\", {\n        /**\n         * Gets the `parent document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"pageSettings\", {\n        /**\n         * Gets or sets the `page settings` of the section.\n         * @private\n         */\n        get: function () {\n            return this.settings;\n        },\n        set: function (value) {\n            if (value != null) {\n                this.settings = value;\n            }\n            else {\n                throw Error('Value can not be null.');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.section;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"count\", {\n        /**\n         * Gets the `count` of the pages in the section.\n         * @private\n         */\n        get: function () {\n            return this.pagesReferences.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"template\", {\n        /**\n         * Gets or sets a `template` for the pages in the section.\n         * @private\n         */\n        get: function () {\n            if (this.pageTemplate == null) {\n                this.pageTemplate = new PdfSectionTemplate();\n            }\n            return this.pageTemplate;\n        },\n        set: function (value) {\n            this.pageTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"document\", {\n        /**\n         * Gets the `document`.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection.document;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"pages\", {\n        /**\n         * Gets the collection of `pages` in a section (Read only)\n         * @private\n         */\n        get: function () {\n            if (this.pagesCollection == null || typeof this.pagesCollection === 'undefined') {\n                this.pagesCollection = new PdfSectionPageCollection(this);\n            }\n            return this.pagesCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //methods\n    /**\n     * `Return the page collection` of current section.\n     * @private\n     */\n    PdfSection.prototype.getPages = function () {\n        return this.pdfPages;\n    };\n    /**\n     * `Translates` point into native coordinates of the page.\n     * @private\n     */\n    PdfSection.prototype.pointToNativePdf = function (page, point) {\n        var bounds = this.getActualBounds(page, true);\n        point.x += bounds.x;\n        point.y = this.pageSettings.height - (point.y);\n        return point;\n    };\n    /**\n     * Sets the page setting of the current section.\n     * @public\n     * @param settings Instance of `PdfPageSettings`\n     */\n    PdfSection.prototype.setPageSettings = function (settings) {\n        this.settings = settings;\n        this.state.orientation = settings.orientation;\n        this.state.rotate = settings.rotate;\n        this.state.size = settings.size;\n        this.state.origin = settings.origin;\n    };\n    /**\n     * `Initializes` the object.\n     * @private\n     */\n    PdfSection.prototype.initialize = function () {\n        this.pagesReferences = new PdfArray();\n        this.section = new PdfDictionary();\n        this.state = new PageSettingsState(this.pdfDocument);\n        this.section.sectionBeginSave = new SaveSectionEventHandler(this, this.state);\n        this.pageCount = new PdfNumber(0);\n        this.section.items.setValue(this.dictionaryProperties.count, this.pageCount);\n        this.section.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.pages));\n        this.section.items.setValue(this.dictionaryProperties.kids, this.pagesReferences);\n    };\n    /**\n     * Checks whether any template should be printed on this layer.\n     * @private\n     * @param document The parent document.\n     * @param page The parent page.\n     * @param foreground Layer z-order.\n     * @returns True - if some content should be printed on the layer, False otherwise.\n     */\n    PdfSection.prototype.containsTemplates = function (document, page, foreground) {\n        var documentHeaders = this.getDocumentTemplates(document, page, foreground);\n        var sectionTemplates = this.getSectionTemplates(page, foreground);\n        return (documentHeaders.length > 0 || sectionTemplates.length > 0);\n    };\n    /**\n     * Returns array of the document templates.\n     * @private\n     * @param document The parent document.\n     * @param page The parent page.\n     * @param headers If true - return headers/footers, if false - return simple templates.\n     * @param foreground If true - return foreground templates, if false - return background templates.\n     * @returns Returns array of the document templates.\n     */\n    /* tslint:disable */\n    PdfSection.prototype.getDocumentTemplates = function (document, page, foreground) {\n        var templates = [];\n        if (this.template.applyDocumentTopTemplate && document.template.getTop(page) != null) {\n            if ((!(document.template.getTop(page).foreground || foreground)) || (document.template.getTop(page).foreground && foreground)) {\n                templates.push(document.template.getTop(page));\n            }\n        }\n        if (this.template.applyDocumentBottomTemplate && document.template.getBottom(page) != null) {\n            if ((!(document.template.getBottom(page).foreground || foreground)) || (document.template.getBottom(page).foreground && foreground)) {\n                templates.push(document.template.getBottom(page));\n            }\n        }\n        if (this.template.applyDocumentLeftTemplate && document.template.getLeft(page) != null) {\n            if ((!(document.template.getLeft(page).foreground || foreground)) || (document.template.getLeft(page).foreground && foreground)) {\n                templates.push(document.template.getLeft(page));\n            }\n        }\n        if (this.template.applyDocumentRightTemplate && document.template.getRight(page) != null) {\n            if ((!(document.template.getRight(page).foreground || foreground)) || (document.template.getRight(page).foreground && foreground)) {\n                templates.push(document.template.getRight(page));\n            }\n        }\n        return templates;\n    };\n    /**\n     * Returns array of the section templates.\n     * @private\n     * @param page The parent page.\n     * @param foreground If true - return foreground templates, if false - return background templates.\n     * @returns Returns array of the section templates.\n     */\n    /* tslint:disable */\n    PdfSection.prototype.getSectionTemplates = function (page, foreground) {\n        var templates = [];\n        if (this.template.getTop(page) != null) {\n            var pageTemplate = this.template.getTop(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        if (this.template.getBottom(page) != null) {\n            var pageTemplate = this.template.getBottom(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        if (this.template.getLeft(page) != null) {\n            var pageTemplate = this.template.getLeft(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        if (this.template.getRight(page) != null) {\n            var pageTemplate = this.template.getRight(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        return templates;\n    };\n    /* tslint:enable */\n    /**\n     * `Adds` the specified page.\n     * @private\n     */\n    PdfSection.prototype.add = function (page) {\n        if (typeof page === 'undefined') {\n            var page_1 = new PdfPage();\n            this.add(page_1);\n            return page_1;\n        }\n        else {\n            var r = this.checkPresence(page);\n            this.pdfPages.push(page);\n            this.pagesReferences.add(r);\n            page.setSection(this);\n            page.resetProgress();\n            this.pageAddedMethod(page);\n        }\n    };\n    /**\n     * `Checks the presence`.\n     * @private\n     */\n    PdfSection.prototype.checkPresence = function (page) {\n        var rh = new PdfReferenceHolder(page);\n        var contains = false;\n        var sc = this.parent;\n        for (var index = 0; index < sc.section.length; index++) {\n            var section = sc.section[index];\n            contains = contains || section.contains(page);\n        }\n        return rh;\n    };\n    /**\n     * `Determines` whether the page in within the section.\n     * @private\n     */\n    PdfSection.prototype.contains = function (page) {\n        var index = this.indexOf(page);\n        return (0 <= index);\n    };\n    /**\n     * Get the `index of` the page.\n     * @private\n     */\n    PdfSection.prototype.indexOf = function (page) {\n        for (var index = 0; index < this.pdfPages.length; index++) {\n            if (this.pdfPages[index] === page) {\n                return this.pdfPages.indexOf(page);\n            }\n        }\n        var r = new PdfReferenceHolder(page);\n        return this.pagesReferences.indexOf(r);\n    };\n    /**\n     * Call two event's methods.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.pageAddedMethod = function (page) {\n        //Create event's arguments\n        var args = new PageAddedEventArgs(page);\n        this.onPageAdded(args);\n        var parent = this.parent;\n        parent.document.pages.onPageAdded(args);\n        this.pageCount.intValue = this.count;\n    };\n    /**\n     * Called when the page has been added.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.onPageAdded = function (args) {\n        //\n    };\n    PdfSection.prototype.getActualBounds = function (arg1, arg2, arg3) {\n        if (arg1 instanceof PdfPage && typeof arg2 === 'boolean') {\n            var result = void 0;\n            var document_1 = this.parent.document;\n            result = this.getActualBounds(document_1, arg1, arg2);\n            return result;\n        }\n        else {\n            arg1 = arg1;\n            arg2 = arg2;\n            arg3 = arg3;\n            var bounds = new RectangleF(0, 0, 0, 0);\n            bounds.height = (arg3) ? this.pageSettings.size.height : this.pageSettings.getActualSize().height;\n            bounds.width = (arg3) ? this.pageSettings.size.width : this.pageSettings.getActualSize().width;\n            var left = this.getLeftIndentWidth(arg1, arg2, arg3);\n            var top_1 = this.getTopIndentHeight(arg1, arg2, arg3);\n            var right = this.getRightIndentWidth(arg1, arg2, arg3);\n            var bottom = this.getBottomIndentHeight(arg1, arg2, arg3);\n            bounds.x += left;\n            bounds.y += top_1;\n            bounds.width -= (left + right);\n            bounds.height -= (top_1 + bottom);\n            return bounds;\n        }\n    };\n    /**\n     * Calculates width of the `left indent`.\n     * @private\n     */\n    PdfSection.prototype.getLeftIndentWidth = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.left : 0;\n        var templateWidth = (this.template.getLeft(page) != null) ? this.template.getLeft(page).width : 0;\n        var docTemplateWidth = (document.template.getLeft(page) != null) ? document.template.getLeft(page).width : 0;\n        value += (this.template.applyDocumentLeftTemplate) ? Math.max(templateWidth, docTemplateWidth) : templateWidth;\n        return value;\n    };\n    /**\n     * Calculates `Height` of the top indent.\n     * @private\n     */\n    PdfSection.prototype.getTopIndentHeight = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.top : 0;\n        var templateHeight = (this.template.getTop(page) != null) ? this.template.getTop(page).height : 0;\n        var docTemplateHeight = (document.template.getTop(page) != null) ? document.template.getTop(page).height : 0;\n        value += (this.template.applyDocumentTopTemplate) ? Math.max(templateHeight, docTemplateHeight) : templateHeight;\n        return value;\n    };\n    /**\n     * Calculates `width` of the right indent.\n     * @private\n     */\n    PdfSection.prototype.getRightIndentWidth = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.right : 0;\n        var templateWidth = (this.template.getRight(page) != null) ? this.template.getRight(page).width : 0;\n        var docTemplateWidth = (document.template.getRight(page) != null) ? document.template.getRight(page).width : 0;\n        value += (this.template.applyDocumentRightTemplate) ? Math.max(templateWidth, docTemplateWidth) : templateWidth;\n        return value;\n    };\n    /**\n     * Calculates `Height` of the bottom indent.\n     * @private\n     */\n    PdfSection.prototype.getBottomIndentHeight = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.bottom : 0;\n        var templateHeight = (this.template.getBottom(page) != null) ? this.template.getBottom(page).height : 0;\n        var docTemplateHeight = (document.template.getBottom(page) != null) ? document.template.getBottom(page).height : 0;\n        value += (this.template.applyDocumentBottomTemplate) ? Math.max(templateHeight, docTemplateHeight) : templateHeight;\n        return value;\n    };\n    /**\n     * `Removes` the page from the section.\n     * @private\n     */\n    PdfSection.prototype.remove = function (page) {\n        if (page == null) {\n            throw Error('ArgumentNullException(\"page\")');\n        }\n        var index = this.pdfPages.indexOf(page);\n        this.pagesReferences.removeAt(index);\n        var temproaryPages = [];\n        for (var j = 0; j < index; j++) {\n            temproaryPages.push(this.pdfPages[j]);\n        }\n        for (var j = index + 1; j < this.pdfPages.length; j++) {\n            temproaryPages.push(this.pdfPages[j]);\n        }\n        this.pdfPages = temproaryPages;\n    };\n    /**\n     * In fills dictionary by the data from `Page settings`.\n     * @private\n     */\n    PdfSection.prototype.applyPageSettings = function (container, parentSettings, state) {\n        var bounds = new RectangleF(state.origin, state.size);\n        container.items.setValue(this.dictionaryProperties.mediaBox, PdfArray.fromRectangle(bounds));\n        var rotate = 0;\n        rotate = PdfSectionCollection.rotateFactor * state.rotate;\n        var angle = new PdfNumber(rotate);\n        container.items.setValue(this.dictionaryProperties.rotate, angle);\n    };\n    /**\n     * Catches the Save event of the dictionary.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.beginSave = function (state, writer) {\n        var doc = writer.document;\n        this.applyPageSettings(this.section, doc.pageSettings, state);\n    };\n    /**\n     * Draws page templates on the page.\n     * @private\n     */\n    PdfSection.prototype.drawTemplates = function (page, layer, document, foreground) {\n        var documentHeaders = this.getDocumentTemplates(document, page, foreground);\n        var sectionHeaders = this.getSectionTemplates(page, foreground);\n        this.drawTemplatesHelper(layer, document, documentHeaders);\n        this.drawTemplatesHelper(layer, document, sectionHeaders);\n    };\n    /**\n     * Draws page templates on the page.\n     * @private\n     */\n    PdfSection.prototype.drawTemplatesHelper = function (layer, document, templates) {\n        if (templates != null && templates.length > 0) {\n            var len = templates.length;\n            for (var i = 0; i < len; i++) {\n                var template = templates[i];\n                template.draw(layer, document);\n            }\n        }\n    };\n    return PdfSection;\n}());\nexport { PdfSection };\nvar PageSettingsState = /** @class */ (function () {\n    //Public Constructor\n    /**\n     * New instance to store the `PageSettings`.\n     * @private\n     */\n    function PageSettingsState(document) {\n        this.pageOrientation = document.pageSettings.orientation;\n        this.pageRotate = document.pageSettings.rotate;\n        this.pageSize = document.pageSettings.size;\n        this.pageOrigin = document.pageSettings.origin;\n    }\n    Object.defineProperty(PageSettingsState.prototype, \"orientation\", {\n        //public Properties\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageOrientation;\n        },\n        set: function (value) {\n            this.pageOrientation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"rotate\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageRotate;\n        },\n        set: function (value) {\n            this.pageRotate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"size\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageSize;\n        },\n        set: function (value) {\n            this.pageSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"origin\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageOrigin;\n        },\n        set: function (value) {\n            this.pageOrigin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PageSettingsState;\n}());\nexport { PageSettingsState };\n","import { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfDictionary, SaveSectionCollectionEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfSection } from './pdf-section';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * Represents the `collection of the sections`.\n * @private\n */\nvar PdfSectionCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfSectionCollection` class.\n     * @private\n     */\n    function PdfSectionCollection(document) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.sections = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // if (document === null) {\n        //     throw new Error('ArgumentNullException : document');\n        // }\n        this.pdfDocument = document.clone();\n        this.initialize();\n    }\n    Object.defineProperty(PdfSectionCollection.prototype, \"section\", {\n        //Properties\n        /**\n         * Gets the `Section` collection.\n         */\n        get: function () {\n            return this.sections;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"document\", {\n        /**\n         * Gets a parent `document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of sections` in a document.\n         * @private\n         */\n        get: function () {\n            return this.sections.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.pages;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * `Initializes the object`.\n     * @private\n     */\n    PdfSectionCollection.prototype.initialize = function () {\n        this.sectionCount = new PdfNumber(0);\n        this.sectionCollection = new PdfArray();\n        this.pages = new PdfDictionary();\n        this.pages.beginSave = new SaveSectionCollectionEventHandler(this);\n        this.pages.items.setValue(this.dictionaryProperties.type, new PdfName('Pages'));\n        this.pages.items.setValue(this.dictionaryProperties.kids, this.sectionCollection);\n        this.pages.items.setValue(this.dictionaryProperties.count, this.sectionCount);\n        this.pages.items.setValue(this.dictionaryProperties.resources, new PdfDictionary());\n        this.setPageSettings(this.pages, this.pdfDocument.pageSettings);\n    };\n    /**\n     * Initializes a new instance of the `PdfSectionCollection` class.\n     * @private\n     */\n    PdfSectionCollection.prototype.pdfSectionCollection = function (index) {\n        if (index < 0 || index >= this.count) {\n            throw new Error('IndexOutOfRangeException()');\n        }\n        return this.sections[index];\n    };\n    /**\n     * In fills dictionary by the data from `Page settings`.\n     * @private\n     */\n    PdfSectionCollection.prototype.setPageSettings = function (container, pageSettings) {\n        // if (container === null) {\n        //     throw new Error('ArgumentNullException : container');\n        // }\n        // if (pageSettings === null) {\n        //     throw new Error('ArgumentNullException : pageSettings');\n        // }\n        var bounds = new RectangleF(new PointF(), pageSettings.size);\n        container.items.setValue(this.dictionaryProperties.mediaBox, PdfArray.fromRectangle(bounds));\n    };\n    /**\n     * `Adds` the specified section.\n     * @private\n     */\n    PdfSectionCollection.prototype.add = function (section) {\n        if (typeof section === 'undefined') {\n            var section_1 = new PdfSection(this.pdfDocument);\n            this.add(section_1);\n            return section_1;\n        }\n        else {\n            // if (section === null) {\n            //     throw new Error('ArgumentNullException : section');\n            // }\n            var r = this.checkSection(section);\n            this.sections.push(section);\n            section.parent = this;\n            this.sectionCollection.add(r);\n            return this.sections.indexOf(section);\n        }\n    };\n    /**\n     * `Checks` if the section is within the collection.\n     * @private\n     */\n    PdfSectionCollection.prototype.checkSection = function (section) {\n        var r = new PdfReferenceHolder(section);\n        var contains = this.sectionCollection.contains(r);\n        // if (contains) {\n        //     throw new Error('ArgumentException : The object can not be added twice to the collection,section');\n        // }\n        return r;\n    };\n    /**\n     * Catches the Save event of the dictionary to `count the pages`.\n     * @private\n     */\n    PdfSectionCollection.prototype.countPages = function () {\n        var count = 0;\n        this.sections.forEach(function (n) { return (count += n.count); });\n        return count;\n    };\n    /**\n     * Catches the Save event of the dictionary to `count the pages`.\n     * @hidden\n     * @private\n     */\n    PdfSectionCollection.prototype.beginSave = function () {\n        this.sectionCount.intValue = this.countPages();\n    };\n    //Fields\n    /**\n     * Rotate factor for page `rotation`.\n     * @default 90\n     * @private\n     */\n    PdfSectionCollection.rotateFactor = 90;\n    return PdfSectionCollection;\n}());\nexport { PdfSectionCollection };\n","import { PdfPage } from './pdf-page';\nimport { Dictionary } from './../collections/dictionary';\n/**\n * Represents a virtual collection of all the pages in the document.\n * @private\n */\nvar PdfDocumentPageCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfPageCollection` class.\n     * @private\n     */\n    function PdfDocumentPageCollection(document) {\n        /**\n         * It holds the page collection with the `index`.\n         * @private\n         */\n        this.pdfPageCollectionIndex = new Dictionary();\n        this.document = document;\n    }\n    Object.defineProperty(PdfDocumentPageCollection.prototype, \"count\", {\n        //Property\n        /**\n         * Gets the total `number of the pages`.\n         * @private\n         */\n        get: function () {\n            return this.countPages();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentPageCollection.prototype, \"pageCollectionIndex\", {\n        /**\n         * Gets a `page index` from the document.\n         * @private\n         */\n        get: function () {\n            return this.pdfPageCollectionIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocumentPageCollection.prototype.add = function (page) {\n        if (typeof page === 'undefined') {\n            var page_1 = new PdfPage();\n            this.add(page_1);\n            return page_1;\n        }\n        else {\n            var section = this.getLastSection();\n            section.add(page);\n        }\n    };\n    /**\n     * Returns `last section` in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getLastSection = function () {\n        var sc = this.document.sections;\n        if (sc.section.length === 0) {\n            sc.add();\n        }\n        var section = sc.section[sc.section.length - 1];\n        return section;\n    };\n    /**\n     * Called when `new page has been added`.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.onPageAdded = function (args) {\n        // if (PageAdded !== null)\n        // {\n        //     PageAdded(this, args);\n        // }\n    };\n    /**\n     * Gets the `total number of pages`.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.countPages = function () {\n        var sc = this.document.sections;\n        var count = 0;\n        for (var index = 0; index < sc.section.length; index++) {\n            count += sc.section[index].count;\n        }\n        return count;\n    };\n    /**\n     * Gets the `page object` from page index.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getPageByIndex = function (index) {\n        return this.getPage(index);\n    };\n    /**\n     * Gets a page by its `index` in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getPage = function (index) {\n        if ((index < 0) || (index >= this.count)) {\n            throw Error('ArgumentOutOfRangeException(\"index\", \"Value can not be less 0\")');\n        }\n        var page = null;\n        var sectionStartIndex = 0;\n        var sectionCount = 0;\n        var pageIndex = 0;\n        var length = this.document.sections.count;\n        for (var i = 0; i < length; i++) {\n            var section = this.document.sections.section[i];\n            sectionCount = section.count;\n            pageIndex = index - sectionStartIndex;\n            // We found a section containing the page.\n            if ((index >= sectionStartIndex && pageIndex < sectionCount)) {\n                page = section.getPages()[pageIndex];\n                break;\n            }\n            sectionStartIndex += sectionCount;\n        }\n        return page;\n    };\n    /**\n     * Gets the `index of` the page in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.indexOf = function (page) {\n        var index = -1;\n        if (page == null) {\n            throw new Error('ArgumentNullException: page');\n        }\n        else {\n            var numPages = 0;\n            for (var i = 0, len = this.document.sections.count; i < len; i++) {\n                var section = this.document.sections.pdfSectionCollection(i);\n                index = section.indexOf(page);\n                if (index >= 0) {\n                    index += numPages;\n                    break;\n                }\n                else {\n                    index = -1;\n                }\n                numPages += section.count;\n            }\n        }\n        return index;\n    };\n    /**\n     * `Removes` the specified page.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.remove = function (page) {\n        if (page == null) {\n            throw Error('ArgumentNullException(\"page\")');\n        }\n        var section = null;\n        var len;\n        for (var i = 0, len_1 = this.document.sections.count; i < len_1; i++) {\n            section = this.document.sections.pdfSectionCollection(i);\n            if (section.pages.contains(page)) {\n                section.pages.remove(page);\n                break;\n            }\n        }\n        return section;\n    };\n    return PdfDocumentPageCollection;\n}());\nexport { PdfDocumentPageCollection };\n","/**\n * PdfCacheCollection.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../collections/dictionary';\n/**\n * `Collection of the cached objects`.\n * @private\n */\nvar PdfCacheCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfCacheCollection` class.\n     * @private\n     */\n    function PdfCacheCollection() {\n        this.referenceObjects = [];\n        this.pdfFontCollection = new Dictionary();\n    }\n    // Public methods\n    /**\n     * `Searches` for the similar cached object. If is not found - adds the object to the cache.\n     * @private\n     */\n    PdfCacheCollection.prototype.search = function (obj) {\n        var result = null;\n        var group = this.getGroup(obj);\n        if (group == null) {\n            group = this.createNewGroup();\n        }\n        else if (group.length > 0) {\n            result = group[0];\n        }\n        group.push(obj);\n        return result;\n    };\n    // Implementation\n    /**\n     * `Creates` a new group.\n     * @private\n     */\n    PdfCacheCollection.prototype.createNewGroup = function () {\n        var group = [];\n        this.referenceObjects.push(group);\n        return group;\n    };\n    /**\n     * `Find and Return` a group.\n     * @private\n     */\n    PdfCacheCollection.prototype.getGroup = function (result) {\n        var group = null;\n        if (result !== null) {\n            var len = this.referenceObjects.length;\n            for (var i = 0; i < len; i++) {\n                if (this.referenceObjects.length > 0) {\n                    var tGroup = this.referenceObjects[i];\n                    if (tGroup.length > 0) {\n                        var representative = tGroup[0];\n                        if (result.equalsTo(representative)) {\n                            group = tGroup;\n                            break;\n                        }\n                    }\n                    else {\n                        this.removeGroup(tGroup);\n                    }\n                }\n                len = this.referenceObjects.length;\n            }\n        }\n        return group;\n    };\n    /**\n     * Remove a group from the storage.\n     */\n    PdfCacheCollection.prototype.removeGroup = function (group) {\n        if (group !== null) {\n            var index = this.referenceObjects.indexOf(group);\n            this.referenceObjects.slice(index, index + 1);\n        }\n    };\n    PdfCacheCollection.prototype.destroy = function () {\n        this.pdfFontCollection = undefined;\n        this.referenceObjects = undefined;\n    };\n    return PdfCacheCollection;\n}());\nexport { PdfCacheCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfWriter } from './../input-output/pdf-writer';\nimport { PdfMainObjectCollection } from './../input-output/pdf-main-object-collection';\nimport { PdfDocumentBase } from './pdf-document-base';\nimport { PdfCrossTable } from './../input-output/pdf-cross-table';\nimport { PdfCatalog } from './pdf-catalog';\nimport { PdfPageSettings } from './../pages/pdf-page-settings';\nimport { PdfSectionCollection } from './../pages/pdf-section-collection';\nimport { PdfDocumentPageCollection } from './../pages/pdf-document-page-collection';\nimport { PdfCacheCollection } from './../general/pdf-cache-collection';\nimport { PdfColorSpace } from './../graphics/enum';\nimport { PdfDocumentTemplate } from './pdf-document-template';\nimport { PdfFontFamily } from './../graphics/fonts/enum';\nimport { PdfStandardFont } from './../graphics/fonts/pdf-standard-font';\n/**\n * Represents a PDF document and can be used to create a new PDF document from the scratch.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocument = /** @class */ (function (_super) {\n    __extends(PdfDocument, _super);\n    function PdfDocument(isMerging) {\n        var _this = _super.call(this) || this;\n        /**\n         * Default `margin` value.\n         * @default 40.0\n         * @private\n         */\n        _this.defaultMargin = 40.0;\n        /**\n         * Internal variable to store instance of `StreamWriter` classes..\n         * @default null\n         * @private\n         */\n        _this.streamWriter = null;\n        _this.document = _this;\n        var isMerge = false;\n        if (typeof isMerging === 'undefined') {\n            PdfDocument.cacheCollection = new PdfCacheCollection();\n            isMerge = false;\n        }\n        else {\n            isMerge = isMerging;\n        }\n        var objects = new PdfMainObjectCollection();\n        _this.setMainObjectCollection(objects);\n        var crossTable = new PdfCrossTable();\n        crossTable.isMerging = isMerge;\n        crossTable.document = _this;\n        _this.setCrossTable(crossTable);\n        var catalog = new PdfCatalog();\n        _this.setCatalog(catalog);\n        objects.add(catalog);\n        catalog.position = -1;\n        _this.sectionCollection = new PdfSectionCollection(_this);\n        _this.documentPageCollection = new PdfDocumentPageCollection(_this);\n        catalog.pages = _this.sectionCollection;\n        return _this;\n    }\n    Object.defineProperty(PdfDocument, \"defaultFont\", {\n        //Properties\n        /**\n         * Gets the `default font`. It is used for complex objects when font is not explicitly defined.\n         * @private\n         */\n        get: function () {\n            if (this.defaultStandardFont == null) {\n                this.defaultStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 8);\n            }\n            return this.defaultStandardFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"sections\", {\n        /**\n         * Gets the collection of the `sections` in the document.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pageSettings\", {\n        /**\n         * Gets the document's page setting.\n         * @public\n         */\n        get: function () {\n            if (this.settings == null) {\n                this.settings = new PdfPageSettings(this.defaultMargin);\n            }\n            return this.settings;\n        },\n        /**\n         * Sets the document's page setting.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         *\n         * // sets the right margin of the page\n         * document.pageSettings.margins.right = 0;\n         * // set the page size.\n         * document.pageSettings.size = new SizeF(500, 500);\n         * // change the page orientation to landscape\n         * document.pageSettings.orientation = PdfPageOrientation.Landscape;\n         * // apply 90 degree rotation on the page\n         * document.pageSettings.rotate = PdfPageRotateAngle.RotateAngle90;\n         *\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // set the specified Point\n         * let point : PointF = new PointF(page1.getClientSize().width - 200, page1.getClientSize().height - 200);\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, point);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this.settings = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pages\", {\n        /**\n         * Represents the collection of pages in the PDF document.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * //\n         * // get the collection of pages in the document\n         * let pageCollection : PdfDocumentPageCollection  = document.pages;\n         * //\n         * // add pages\n         * let page1 : PdfPage = pageCollection.add();\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.documentPageCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument, \"cache\", {\n        /**\n         * Gets collection of the `cached objects`.\n         * @private\n         */\n        get: function () {\n            if (typeof PdfDocument.cacheCollection === 'undefined' || PdfDocument.cacheCollection == null) {\n                return new PdfCacheCollection();\n            }\n            return PdfDocument.cacheCollection;\n        },\n        /**\n         * Sets collection of the `cached objects`.\n         * @private\n         */\n        set: function (value) {\n            this.cacheCollection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument, \"enableCache\", {\n        /**\n         * Gets the value of enable cache.\n         * @private\n         */\n        get: function () {\n            return this.isCacheEnabled;\n        },\n        /**\n         * Sets thie value of enable cache.\n         * @private\n         */\n        set: function (value) {\n            this.isCacheEnabled = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"colorSpace\", {\n        /* tslint:disable */\n        /**\n         * Gets or sets the `color space` of the document. This property can be used to create PDF document in RGB, Gray scale or CMYK color spaces.\n         * @private\n         */\n        get: function () {\n            if ((this.pdfColorSpace === PdfColorSpace.Rgb) || ((this.pdfColorSpace === PdfColorSpace.Cmyk)\n                || (this.pdfColorSpace === PdfColorSpace.GrayScale))) {\n                return this.pdfColorSpace;\n            }\n            else {\n                return PdfColorSpace.Rgb;\n            }\n        },\n        set: function (value) {\n            if ((value === PdfColorSpace.Rgb) || ((value === PdfColorSpace.Cmyk) ||\n                (value === PdfColorSpace.GrayScale))) {\n                this.pdfColorSpace = value;\n            }\n            else {\n                this.pdfColorSpace = PdfColorSpace.Rgb;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"template\", {\n        /* tslint:enable */\n        /**\n         * Gets or sets a `template` to all pages in the document.\n         * @private\n         */\n        get: function () {\n            if (this.pageTemplate == null) {\n                this.pageTemplate = new PdfDocumentTemplate();\n            }\n            return this.pageTemplate;\n        },\n        set: function (value) {\n            this.pageTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocument.prototype.docSave = function (stream, arg2, arg3) {\n        this.checkPagesPresence();\n        if (stream === null) {\n            throw new Error('ArgumentNullException : stream');\n        }\n        this.streamWriter = stream;\n        var writer = new PdfWriter(stream);\n        writer.document = this;\n        if (typeof arg2 === 'boolean' && typeof arg3 === 'undefined') {\n            return this.crossTable.save(writer);\n        }\n        else {\n            this.crossTable.save(writer, arg2);\n        }\n    };\n    /**\n     * Checks the pages `presence`.\n     * @private\n     */\n    PdfDocument.prototype.checkPagesPresence = function () {\n        if (this.pages.count === 0) {\n            this.pages.add();\n        }\n    };\n    /**\n     * disposes the current instance of `PdfDocument` class.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a new page to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // set the font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // create black brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.destroy = function () {\n        this.catalog = undefined;\n        this.colorSpace = undefined;\n        this.currentSavingObj = undefined;\n        this.documentPageCollection = undefined;\n        this.isStreamCopied = undefined;\n        this.pageSettings = undefined;\n        this.pageTemplate = undefined;\n        this.pdfColorSpace = undefined;\n        this.sectionCollection = undefined;\n        PdfDocument.cache.destroy();\n        this.crossTable.pdfObjects.destroy();\n        PdfDocument.cache = undefined;\n        this.streamWriter.destroy();\n    };\n    /**\n     * `Font` used in complex objects to draw strings and text when it is not defined explicitly.\n     * @default null\n     * @private\n     */\n    PdfDocument.defaultStandardFont = null;\n    /**\n     * Indicates whether enable cache or not\n     * @default true\n     * @private\n     */\n    PdfDocument.isCacheEnabled = true;\n    return PdfDocument;\n}(PdfDocumentBase));\nexport { PdfDocument };\n","/**\n * PdfStandardFontMetricsFactory.ts class for EJ2-PDF\n */\nimport { PdfFontStyle, PdfFontFamily } from './enum';\nimport { PdfFontMetrics, StandardWidthTable } from './pdf-font-metrics';\n/**\n * @private\n * `Factory of the standard fonts metrics`.\n */\nvar PdfStandardFontMetricsFactory = /** @class */ (function () {\n    function PdfStandardFontMetricsFactory() {\n    }\n    /**\n     * Returns `metrics` of the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = null;\n        switch (fontFamily) {\n            case PdfFontFamily.Helvetica:\n                metrics = this.getHelveticaMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.Courier:\n                metrics = this.getCourierMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.TimesRoman:\n                metrics = this.getTimesMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.Symbol:\n                metrics = this.getSymbolMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.ZapfDingbats:\n                metrics = this.getZapfDingbatsMetrics(fontFamily, fontStyle, size);\n                break;\n            default:\n                metrics = this.getHelveticaMetrics(PdfFontFamily.Helvetica, fontStyle, size);\n                break;\n        }\n        metrics.name = fontFamily.toString();\n        metrics.subScriptSizeFactor = this.subSuperScriptFactor;\n        metrics.superscriptSizeFactor = this.subSuperScriptFactor;\n        return metrics;\n    };\n    // Implementation\n    /**\n     * Creates `Helvetica font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getHelveticaMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.helveticaBoldItalicAscent;\n            metrics.descent = this.helveticaBoldItalicDescent;\n            metrics.postScriptName = this.helveticaBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.helveticaBoldAscent;\n            metrics.descent = this.helveticaBoldDescent;\n            metrics.postScriptName = this.helveticaBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.helveticaItalicAscent;\n            metrics.descent = this.helveticaItalicDescent;\n            metrics.postScriptName = this.helveticaItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.helveticaAscent;\n            metrics.descent = this.helveticaDescent;\n            metrics.postScriptName = this.helveticaName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Courier font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getCourierMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.courierBoldItalicAscent;\n            metrics.descent = this.courierBoldItalicDescent;\n            metrics.postScriptName = this.courierBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.courierBoldAscent;\n            metrics.descent = this.courierBoldDescent;\n            metrics.postScriptName = this.courierBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.courierItalicAscent;\n            metrics.descent = this.courierItalicDescent;\n            metrics.postScriptName = this.courierItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.courierAscent;\n            metrics.descent = this.courierDescent;\n            metrics.postScriptName = this.courierName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Times font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getTimesMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.timesBoldItalicAscent;\n            metrics.descent = this.timesBoldItalicDescent;\n            metrics.postScriptName = this.timesBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanBoldItalicWidths);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.timesBoldAscent;\n            metrics.descent = this.timesBoldDescent;\n            metrics.postScriptName = this.timesBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.timesItalicAscent;\n            metrics.descent = this.timesItalicDescent;\n            metrics.postScriptName = this.timesItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanItalicWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.timesAscent;\n            metrics.descent = this.timesDescent;\n            metrics.postScriptName = this.timesName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Symbol font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getSymbolMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        metrics.ascent = this.symbolAscent;\n        metrics.descent = this.symbolDescent;\n        metrics.postScriptName = this.symbolName;\n        metrics.size = size;\n        metrics.widthTable = new StandardWidthTable(this.symbolWidth);\n        metrics.height = metrics.ascent - metrics.descent;\n        return metrics;\n    };\n    /**\n     * Creates `ZapfDingbats font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getZapfDingbatsMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        metrics.ascent = this.zapfDingbatsAscent;\n        metrics.descent = this.zapfDingbatsDescent;\n        metrics.postScriptName = this.zapfDingbatsName;\n        metrics.size = size;\n        metrics.widthTable = new StandardWidthTable(this.zapfDingbatsWidth);\n        metrics.height = metrics.ascent - metrics.descent;\n        return metrics;\n    };\n    /**\n     * `Multiplier` os subscript superscript.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.subSuperScriptFactor = 1.52;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaAscent = 931;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaDescent = -225;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaName = 'Helvetica';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldAscent = 962;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldDescent = -228;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldName = 'Helvetica-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicAscent = 931;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicDescent = -225;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicName = 'Helvetica-Oblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicAscent = 962;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicDescent = -228;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicName = 'Helvetica-BoldOblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierAscent = 805;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierName = 'Courier';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldAscent = 801;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldName = 'Courier-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicAscent = 805;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicName = 'Courier-Oblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicAscent = 801;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicName = 'Courier-BoldOblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesAscent = 898;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesName = 'Times-Roman';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldAscent = 935;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldName = 'Times-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicAscent = 883;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicDescent = -217;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicName = 'Times-Italic';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicAscent = 921;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicName = 'Times-BoldItalic';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolAscent = 1010;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolDescent = -293;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolName = 'Symbol';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsAscent = 820;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsDescent = -143;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsName = 'ZapfDingbats';\n    /**\n     * `Arial` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.arialWidth = [\n        278, 278, 355, 556, 556, 889, 667, 191, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 278, 278, 584, 584,\n        584, 556, 1015, 667, 667, 722, 722, 667, 611, 778, 722, 278, 500, 667, 556, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 278, 278, 278,\n        469, 556, 333, 556, 556, 500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833,\n        556, 556, 556, 556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334,\n        584, 0, 556, 0, 222, 556, 333, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 222, 222, 333, 333, 350, 556, 1000, 333, 1000, 500, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 260, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 556, 537, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 667, 667, 667, 667, 667, 667, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 500, 556, 556, 556, 556, 278, 278,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 584, 611, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    /**\n     * `Arial bold` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.arialBoldWidth = [\n        278, 333, 474, 556, 556, 889, 722, 238, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 584, 584,\n        584, 611, 975, 722, 722, 722, 722, 667, 611, 778, 722, 278, 556, 722, 611, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 333, 278, 333,\n        584, 556, 333, 556, 611, 556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889,\n        611, 611, 611, 611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389,\n        584, 0, 556, 0, 278, 556, 500, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 278, 278, 500, 500, 350, 556, 1000, 333, 1000, 556, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 280, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 611, 556, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 556, 556, 556, 556, 556, 278, 278,\n        278, 278, 611, 611, 611, 611, 611, 611, 611, 584, 611, 611, 611, 611, 611, 556,\n        611, 556\n    ];\n    /**\n     * `Fixed` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.fixedWidth = [\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600\n    ];\n    /**\n     * `Times` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanWidth = [\n        250, 333, 408, 500, 500, 833, 778, 180, 333, 333, 500, 564, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278, 564, 564,\n        564, 444, 921, 722, 667, 667, 722, 611, 556, 722, 722, 333, 389, 722, 611, 889,\n        722, 722, 556, 722, 667, 556, 611, 722, 722, 944, 722, 722, 611, 333, 278, 333,\n        469, 500, 333, 444, 500, 444, 500, 444, 333, 500, 500, 278, 278, 500, 278, 778,\n        500, 500, 500, 500, 333, 389, 278, 500, 500, 722, 500, 500, 444, 480, 200, 480,\n        541, 0, 500, 0, 333, 500, 444, 1000, 500, 500, 333, 1000, 556, 333, 889, 0,\n        611, 0, 0, 333, 333, 444, 444, 350, 500, 1000, 333, 980, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 200, 500, 333, 760, 276, 500, 564, 0,\n        760, 333, 400, 564, 300, 300, 333, 500, 453, 250, 333, 300, 310, 500, 750, 750,\n        750, 444, 722, 722, 722, 722, 722, 722, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 722, 722, 722, 722, 722, 722, 564, 722, 722, 722, 722, 722, 722,\n        556, 500, 444, 444, 444, 444, 444, 444, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 564, 500, 500, 500, 500, 500, 500,\n        500, 500\n    ];\n    /**\n     * `Times bold` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanBoldWidth = [\n        250, 333, 555, 500, 500, 1000, 833, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 930, 722, 667, 722, 722, 667, 611, 778, 778, 389, 500, 778, 667, 944,\n        722, 778, 611, 778, 722, 556, 667, 722, 722, 1000, 722, 722, 667, 333, 278, 333,\n        581, 500, 333, 500, 556, 444, 556, 444, 333, 500, 556, 278, 333, 556, 278, 833,\n        556, 500, 556, 556, 444, 389, 333, 556, 500, 722, 500, 500, 444, 394, 220, 394,\n        520, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 1000, 0,\n        667, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 220, 500, 333, 747, 300, 500, 570, 0,\n        747, 333, 400, 570, 300, 300, 333, 556, 540, 250, 333, 300, 330, 500, 750, 750,\n        750, 500, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 778, 778, 778, 778, 778, 570, 778, 722, 722, 722, 722, 722,\n        611, 556, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    /**\n     * `Times italic` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanItalicWidth = [\n        250, 333, 420, 500, 500, 833, 778, 214, 333, 333, 500, 675, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 675, 675,\n        675, 500, 920, 611, 611, 667, 722, 611, 611, 722, 722, 333, 444, 667, 556, 833,\n        667, 722, 611, 722, 611, 500, 556, 722, 611, 833, 611, 556, 556, 389, 278, 389,\n        422, 500, 333, 500, 500, 444, 500, 444, 278, 500, 500, 278, 278, 444, 278, 722,\n        500, 500, 500, 500, 389, 389, 278, 500, 444, 667, 444, 444, 389, 400, 275, 400,\n        541, 0, 500, 0, 333, 500, 556, 889, 500, 500, 333, 1000, 500, 333, 944, 0,\n        556, 0, 0, 333, 333, 556, 556, 350, 500, 889, 333, 980, 389, 333, 667, 0,\n        389, 556, 0, 389, 500, 500, 500, 500, 275, 500, 333, 760, 276, 500, 675, 0,\n        760, 333, 400, 675, 300, 300, 333, 500, 523, 250, 333, 300, 310, 500, 750, 750,\n        750, 500, 611, 611, 611, 611, 611, 611, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 667, 722, 722, 722, 722, 722, 675, 722, 722, 722, 722, 722, 556,\n        611, 500, 500, 500, 500, 500, 500, 500, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 675, 500, 500, 500, 500, 500, 444,\n        500, 444\n    ];\n    /**\n     * `Times bold italic` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanBoldItalicWidths = [\n        250, 389, 555, 500, 500, 833, 778, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 832, 667, 667, 667, 722, 667, 667, 722, 778, 389, 500, 667, 611, 889,\n        722, 722, 611, 722, 667, 556, 611, 722, 667, 889, 667, 611, 611, 333, 278, 333,\n        570, 500, 333, 500, 500, 444, 500, 444, 333, 500, 556, 278, 278, 500, 278, 778,\n        556, 500, 500, 500, 389, 389, 278, 556, 444, 667, 500, 444, 389, 348, 220, 348,\n        570, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 944, 0,\n        611, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        389, 611, 0, 389, 500, 500, 500, 500, 220, 500, 333, 747, 266, 500, 606, 0,\n        747, 333, 400, 570, 300, 300, 333, 576, 500, 250, 333, 300, 300, 500, 750, 750,\n        750, 500, 667, 667, 667, 667, 667, 667, 944, 667, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 722, 722, 722, 722, 722, 570, 722, 722, 722, 722, 722, 611,\n        611, 500, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 444,\n        500, 444\n    ];\n    /**\n     * `Symbol` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolWidth = [\n        250, 333, 713, 500, 549, 833, 778, 439, 333, 333, 500, 549, 250, 549,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278,\n        549, 549, 549, 444, 549, 722, 667, 722, 612, 611, 763, 603, 722, 333,\n        631, 722, 686, 889, 722, 722, 768, 741, 556, 592, 611, 690, 439, 768,\n        645, 795, 611, 333, 863, 333, 658, 500, 500, 631, 549, 549, 494, 439,\n        521, 411, 603, 329, 603, 549, 549, 576, 521, 549, 549, 521, 549, 603,\n        439, 576, 713, 686, 493, 686, 494, 480, 200, 480, 549, 750, 620, 247,\n        549, 167, 713, 500, 753, 753, 753, 753, 1042, 987, 603, 987, 603, 400,\n        549, 411, 549, 549, 713, 494, 460, 549, 549, 549, 549, 1000, 603, 1000,\n        658, 823, 686, 795, 987, 768, 768, 823, 768, 768, 713, 713, 713, 713,\n        713, 713, 713, 768, 713, 790, 790, 890, 823, 549, 250, 713, 603, 603,\n        1042, 987, 603, 987, 603, 494, 329, 790, 790, 786, 713, 384, 384, 384,\n        384, 384, 384, 494, 494, 494, 494, 329, 274, 686, 686, 686, 384, 384,\n        384, 384, 384, 384, 494, 494, 494, -1\n    ];\n    /**\n     * `Zip dingbats` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsWidth = [\n        278, 974, 961, 974, 980, 719, 789, 790, 791, 690, 960, 939, 549, 855,\n        911, 933, 911, 945, 974, 755, 846, 762, 761, 571, 677, 763, 760, 759,\n        754, 494, 552, 537, 577, 692, 786, 788, 788, 790, 793, 794, 816, 823,\n        789, 841, 823, 833, 816, 831, 923, 744, 723, 749, 790, 792, 695, 776,\n        768, 792, 759, 707, 708, 682, 701, 826, 815, 789, 789, 707, 687, 696,\n        689, 786, 787, 713, 791, 785, 791, 873, 761, 762, 762, 759, 759, 892,\n        892, 788, 784, 438, 138, 277, 415, 392, 392, 668, 668, 390, 390, 317,\n        317, 276, 276, 509, 509, 410, 410, 234, 234, 334, 334, 732, 544, 544,\n        910, 667, 760, 760, 776, 595, 694, 626, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 894, 838, 1016, 458, 748, 924, 748, 918,\n        927, 928, 928, 834, 873, 828, 924, 924, 917, 930, 931, 463, 883, 836,\n        836, 867, 867, 696, 696, 874, 874, 760, 946, 771, 865, 771, 888, 967,\n        888, 831, 873, 927, 970, 918\n    ];\n    return PdfStandardFontMetricsFactory;\n}());\nexport { PdfStandardFontMetricsFactory };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfFontFamily, PdfFontStyle, FontEncoding } from './enum';\nimport { PdfFont } from './pdf-font';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfStandardFontMetricsFactory } from './pdf-standard-font-metrics-factory';\nimport { PdfDictionary } from './../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../../primitives/pdf-name';\n/**\n * Represents one of the 14 standard fonts.\n * It's used to create a standard PDF font to draw the text in to the PDF.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * //\n * // create new standard font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * //\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStandardFont = /** @class */ (function (_super) {\n    __extends(PdfStandardFont, _super);\n    function PdfStandardFont(fontFamilyPrototype, size, style) {\n        var _this = _super.call(this, size, (typeof style === 'undefined') ? ((fontFamilyPrototype instanceof PdfStandardFont) ? fontFamilyPrototype.style : PdfFontStyle.Regular) : style) || this;\n        /**\n         * Gets `ascent` of the font.\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Gets `encodings` for internal class use.\n         * @hidden\n         * @private\n         */\n        _this.encodings = ['Unknown', 'StandardEncoding', 'MacRomanEncoding', 'MacExpertEncoding',\n            'WinAnsiEncoding', 'PDFDocEncoding', 'IdentityH'];\n        if (typeof fontFamilyPrototype === 'undefined') {\n            _this.pdfFontFamily = PdfFontFamily.Helvetica;\n        }\n        else if ((fontFamilyPrototype instanceof PdfStandardFont)) {\n            _this.pdfFontFamily = fontFamilyPrototype.fontFamily;\n        }\n        else {\n            _this.pdfFontFamily = fontFamilyPrototype;\n        }\n        _this.checkStyle();\n        _this.initializeInternals();\n        return _this;\n    }\n    Object.defineProperty(PdfStandardFont.prototype, \"fontFamily\", {\n        /* tslint:enable */\n        //Properties\n        /**\n         * Gets the `FontFamily`.\n         * @private\n         */\n        get: function () {\n            return this.pdfFontFamily;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //methods\n    /**\n     * Checks font `style` of the font.\n     * @private\n     */\n    PdfStandardFont.prototype.checkStyle = function () {\n        if (this.fontFamily === PdfFontFamily.Symbol || this.fontFamily === PdfFontFamily.ZapfDingbats) {\n            var style = this.style;\n            style &= ~(PdfFontStyle.Bold | PdfFontStyle.Italic);\n            this.setStyle(style);\n        }\n    };\n    /**\n     * Returns `width` of the line.\n     * @public\n     */\n    PdfStandardFont.prototype.getLineWidth = function (line, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException:line');\n        }\n        var width = 0;\n        var name = this.name;\n        line = PdfStandardFont.convert(line);\n        for (var i = 0, len = line.length; i < len; i++) {\n            var ch = line[i];\n            var charWidth = this.getCharWidthInternal(ch, format);\n            width += charWidth;\n        }\n        var size = this.metrics.getSize(format);\n        width *= (PdfFont.charSizeMultiplier * size);\n        width = this.applyFormatSettings(line, format, width);\n        return width;\n    };\n    /**\n     * Checks whether fonts are `equals`.\n     * @private\n     */\n    PdfStandardFont.prototype.equalsToFont = function (font) {\n        var equal = false;\n        var stFont = font;\n        if (stFont != null) {\n            var fontFamilyEqual = (this.fontFamily === stFont.fontFamily);\n            var lineReducer = (~(PdfFontStyle.Underline | PdfFontStyle.Strikeout));\n            var styleEqual = (this.style & lineReducer) === (stFont.style & lineReducer);\n            equal = (fontFamilyEqual && styleEqual);\n        }\n        return equal;\n    };\n    /**\n     * `Initializes` font internals..\n     * @private\n     */\n    PdfStandardFont.prototype.initializeInternals = function () {\n        var equalFont = null;\n        // if (PdfDocument.EnableCache) {\n        equalFont = PdfDocument.cache.search(this);\n        // }\n        var internals = null;\n        // if (equalFont == null) {\n        // Create font metrics.\n        var metrics = PdfStandardFontMetricsFactory.getMetrics(this.pdfFontFamily, this.style, this.size);\n        this.metrics = metrics;\n        internals = this.createInternals();\n        this.setInternals(internals);\n    };\n    /**\n     * `Creates` font`s dictionary.\n     * @private\n     */\n    PdfStandardFont.prototype.createInternals = function () {\n        var dictionary = new PdfDictionary();\n        dictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.type1));\n        dictionary.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.metrics.postScriptName));\n        if (this.fontFamily !== PdfFontFamily.Symbol && this.fontFamily !== PdfFontFamily.ZapfDingbats) {\n            var encoding = this.encodings[FontEncoding.WinAnsiEncoding];\n            dictionary.items.setValue(this.dictionaryProperties.encoding, new PdfName(encoding));\n        }\n        return dictionary;\n    };\n    /**\n     * Returns `width` of the char. This methods doesn`t takes into consideration font`s size.\n     * @private\n     */\n    PdfStandardFont.prototype.getCharWidthInternal = function (charCode, format) {\n        var width = 0;\n        var code = 0;\n        code = charCode.charCodeAt(0);\n        if (this.name === '0' || this.name === '1' || this.name === '2' ||\n            this.name === '3' || this.name === '4') {\n            code = code - PdfStandardFont.charOffset;\n        }\n        code = (code >= 0 && code !== 128) ? code : 0;\n        var metrics = this.metrics;\n        var widthTable = metrics.widthTable;\n        width = widthTable.items(code);\n        return width;\n    };\n    /**\n     * `Converts` the specified text.\n     * @private\n     */\n    PdfStandardFont.convert = function (text) {\n        return text;\n    };\n    //Constants\n    /**\n     * First character `position`.\n     * @private\n     */\n    PdfStandardFont.charOffset = 32;\n    return PdfStandardFont;\n}(PdfFont));\nexport { PdfStandardFont };\n","import { PdfColor } from './../graphics/pdf-color';\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfDictionary, SaveAnnotationEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfString } from './../primitives/pdf-string';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfSolidBrush } from './../graphics/brushes/pdf-solid-brush';\nimport { PdfStandardFont } from './../graphics/fonts/pdf-standard-font';\nimport { PdfFontFamily } from './../graphics/fonts/enum';\nimport { PdfStringFormat } from './../graphics/fonts/pdf-string-format';\nimport { PdfTextAlignment } from './../graphics/enum';\n/**\n * `PdfAnnotation` class represents the base class for annotation objects.\n * @private\n */\nvar PdfAnnotation = /** @class */ (function () {\n    function PdfAnnotation(arg1) {\n        // Fields\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * `Color` of the annotation\n         * @private\n         */\n        this.pdfColor = new PdfColor(255, 255, 255);\n        /**\n         * `Bounds` of the annotation.\n         * @private\n         */\n        this.rectangle = new RectangleF(0, 0, 0, 0);\n        /**\n         * Parent `page` of the annotation.\n         * @private\n         */\n        this.pdfPage = null;\n        /**\n         * `Brush of the text` of the annotation.\n         * @default new PdfSolidBrush(new PdfColor(0, 0, 0))\n         * @private\n         */\n        this.textBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        /**\n         * `Font of the text` of the annotation.\n         * @default new PdfStandardFont(PdfFontFamily.TimesRoman, 10)\n         * @private\n         */\n        this.textFont = new PdfStandardFont(PdfFontFamily.TimesRoman, 10);\n        /**\n         * `StringFormat of the text` of the annotation.\n         * @default new PdfStringFormat(PdfTextAlignment.Left)\n         * @private\n         */\n        this.format = new PdfStringFormat(PdfTextAlignment.Left);\n        /**\n         * `Text` of the annotation.\n         * @private\n         */\n        this.content = '';\n        /**\n         * Internal variable to store `dictionary`.\n         * @private\n         */\n        this.pdfDictionary = new PdfDictionary();\n        /**\n         * To specifying the `Inner color` with which to fill the annotation\n         * @private\n         */\n        this.internalColor = new PdfColor();\n        /**\n         * `opacity or darkness` of the annotation.\n         * @private\n         * @default 1.0\n         */\n        this.darkness = 1.0;\n        if (typeof arg1 === 'undefined') {\n            this.initialize();\n        }\n        else {\n            this.initialize();\n            this.bounds = arg1;\n        }\n    }\n    Object.defineProperty(PdfAnnotation.prototype, \"color\", {\n        // Properties\n        /**\n         * `Color` of the annotation\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"innerColor\", {\n        /**\n         * To specifying the `Inner color` with which to fill the annotation\n         * @private\n         */\n        get: function () {\n            return this.internalColor;\n        },\n        set: function (value) {\n            this.internalColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"bounds\", {\n        /**\n         * `bounds` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.rectangle;\n        },\n        set: function (value) {\n            this.rectangle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"page\", {\n        /**\n         * Parent `page` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"font\", {\n        /**\n         * To specifying the `Font of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.textFont;\n        },\n        set: function (value) {\n            this.textFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"stringFormat\", {\n        /**\n         * To specifying the `StringFormat of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"brush\", {\n        /**\n         * To specifying the `Brush of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.textBrush;\n        },\n        set: function (value) {\n            this.textBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"text\", {\n        /**\n         * `Text` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.contents, new PdfString(this.content));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"dictionary\", {\n        /**\n         * Internal variable to store `dictionary`.\n         * @hidden\n         */\n        get: function () {\n            return this.pdfDictionary;\n        },\n        set: function (value) {\n            this.pdfDictionary = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the annotation event handler and specifies the type of the annotation.\n     * @private\n     */\n    PdfAnnotation.prototype.initialize = function () {\n        this.pdfDictionary.annotationBeginSave = new SaveAnnotationEventHandler(this);\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.annot));\n    };\n    /**\n     * Sets related `page` of the annotation.\n     * @private\n     */\n    PdfAnnotation.prototype.setPage = function (page) {\n        this.pdfPage = page;\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.p, new PdfReferenceHolder(this.pdfPage));\n    };\n    /**\n     * Handles the `BeginSave` event of the Dictionary.\n     * @private\n     */\n    PdfAnnotation.prototype.beginSave = function () {\n        this.save();\n    };\n    /**\n     * `Saves` an annotation.\n     * @private\n     */\n    /* tslint:disable */\n    PdfAnnotation.prototype.save = function () {\n        var nativeRectangle = new RectangleF(this.rectangle.x, this.rectangle.y, this.rectangle.width, this.rectangle.height);\n        var section = this.pdfPage.section;\n        var initialHeight = nativeRectangle.height;\n        var tempLoacation = section.pointToNativePdf(this.page, new PointF(nativeRectangle.x, nativeRectangle.y));\n        nativeRectangle.x = tempLoacation.x;\n        nativeRectangle.width = tempLoacation.x + nativeRectangle.width;\n        nativeRectangle.y = (tempLoacation.y - this.page.document.pageSettings.margins.top);\n        nativeRectangle.height = nativeRectangle.y - initialHeight;\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.rect, PdfArray.fromRectangle(nativeRectangle));\n        this.dictionary.items.setValue(this.dictionaryProperties.ca, new PdfNumber(this.darkness));\n    };\n    Object.defineProperty(PdfAnnotation.prototype, \"element\", {\n        /* tslint:enable */\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotation;\n}());\nexport { PdfAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfAnnotation } from './annotation';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * `PdfLinkAnnotation` class represents the ink annotation class.\n * @private\n */\nvar PdfLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfLinkAnnotation, _super);\n    function PdfLinkAnnotation(rectangle) {\n        return _super.call(this, rectangle) || this;\n    }\n    // Implementation\n    /**\n     * `Initializes` annotation object.\n     * @private\n     */\n    PdfLinkAnnotation.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.link));\n    };\n    return PdfLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfLinkAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLinkAnnotation } from './link-annotation';\n/**\n * Represents base class for `link annotations` with associated action.\n * @private\n */\nvar PdfActionLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfActionLinkAnnotation, _super);\n    // Constructors\n    /**\n     * Specifies the constructor for `ActionLinkAnnotation`.\n     * @private\n     */\n    function PdfActionLinkAnnotation(rectangle) {\n        var _this = _super.call(this, rectangle) || this;\n        // Fields\n        /**\n         * Internal variable to store annotation's `action`.\n         * @default null\n         * @private\n         */\n        _this.pdfAction = null;\n        return _this;\n    }\n    //Public method\n    /**\n     * get and set the `action`.\n     * @hidden\n     */\n    PdfActionLinkAnnotation.prototype.getSetAction = function (value) {\n        if (typeof value === 'undefined') {\n            return this.pdfAction;\n        }\n        else {\n            this.pdfAction = value;\n        }\n    };\n    return PdfActionLinkAnnotation;\n}(PdfLinkAnnotation));\nexport { PdfActionLinkAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLinkAnnotation } from './link-annotation';\n/**\n * `PdfDocumentLinkAnnotation` class represents an annotation object with holds link on another location within a document.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // create new pages\n * let page1 : PdfPage = document.pages.add();\n * let page2 : PdfPage = document.pages.add();\n * // create a new rectangle\n * let bounds : RectangleF = new RectangleF({x : 10, y : 200}, {width : 300, height : 25});\n * //\n * // create a new document link annotation\n * let documentLinkAnnotation : PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(bounds);\n * // set the annotation text\n * documentLinkAnnotation.text = 'Document link annotation';\n * // set the destination\n * documentLinkAnnotation.destination = new PdfDestination(page2);\n * // set the documentlink annotation location\n * documentLinkAnnotation.destination.location = new PointF(10, 0);\n * // add this annotation to a new page\n * page1.annotations.add(documentLinkAnnotation);\n * //\n * // save the document to disk\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocumentLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfDocumentLinkAnnotation, _super);\n    function PdfDocumentLinkAnnotation(rectangle, destination) {\n        var _this = _super.call(this, rectangle) || this;\n        // Fields\n        /**\n         * `Destination` of the annotation.\n         * @default null\n         * @private\n         */\n        _this.pdfDestination = null;\n        if (typeof destination !== 'undefined') {\n            _this.destination = destination;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfDocumentLinkAnnotation.prototype, \"destination\", {\n        // Properties\n        /**\n         * Gets or sets the `destination` of the annotation.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create new pages\n         * let page1 : PdfPage = document.pages.add();\n         * let page2 : PdfPage = document.pages.add();\n         * // create a new rectangle\n         * let bounds : RectangleF = new RectangleF({x : 10, y : 200}, {width : 300, height : 25});\n         * //\n         * // create a new document link annotation\n         * let documentLinkAnnotation : PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(bounds);\n         * // set the annotation text\n         * documentLinkAnnotation.text = 'Document link annotation';\n         * // set the destination\n         * documentLinkAnnotation.destination = new PdfDestination(page2);\n         * // set the documentlink annotation location\n         * documentLinkAnnotation.destination.location = new PointF(10, 0);\n         * // add this annotation to a new page\n         * page1.annotations.add(documentLinkAnnotation);\n         * //\n         * // save the document to disk\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         * @default null\n         */\n        get: function () {\n            return this.pdfDestination;\n        },\n        set: function (value) {\n            // if (this.pdfDestination !== value) {\n            this.pdfDestination = value;\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Saves` annotation object.\n     * @private\n     */\n    PdfDocumentLinkAnnotation.prototype.save = function () {\n        _super.prototype.save.call(this);\n        if (this.pdfDestination != null) {\n            this.dictionary.items.setValue(this.dictionaryProperties.dest, this.pdfDestination.element);\n        }\n    };\n    /**\n     * `Clone` the document link annotation.\n     * @private\n     */\n    PdfDocumentLinkAnnotation.prototype.clone = function () {\n        var annot = new PdfDocumentLinkAnnotation(this.bounds, this.destination);\n        annot.color = this.color;\n        annot.brush = this.brush;\n        annot.destination = this.destination;\n        annot.font = this.font;\n        return annot;\n    };\n    return PdfDocumentLinkAnnotation;\n}(PdfLinkAnnotation));\nexport { PdfDocumentLinkAnnotation };\n","/**\n * ElementLayouter.ts class for EJ2-PDF\n */\nimport { RectangleF } from './../../../drawing/pdf-drawing';\n/**\n * Base class for `elements lay outing`.\n * @private\n */\nvar ElementLayouter = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `ElementLayouter` class.\n     * @private\n     */\n    function ElementLayouter(element) {\n        this.layoutElement = element;\n    }\n    Object.defineProperty(ElementLayouter.prototype, \"elements\", {\n        // Properties\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.layoutElement;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `element`.\n     * @private\n     */\n    ElementLayouter.prototype.getElement = function () {\n        return this.layoutElement;\n    };\n    // Implementation\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    ElementLayouter.prototype.layout = function (param) {\n        return this.layoutInternal(param);\n    };\n    ElementLayouter.prototype.Layouter = function (param) {\n        return this.layoutInternal(param);\n    };\n    /**\n     * Returns the `next page`.\n     * @private\n     */\n    ElementLayouter.prototype.getNextPage = function (currentPage) {\n        var section = currentPage.section;\n        var nextPage = section.add();\n        return nextPage;\n    };\n    ElementLayouter.prototype.getPaginateBounds = function (param) {\n        if ((param == null)) {\n            throw new Error('ArgumentNullException : param');\n        }\n        var result = param.format.usePaginateBounds ? param.format.paginateBounds\n            : new RectangleF(param.bounds.x, 0, param.bounds.width, param.bounds.height);\n        return result;\n    };\n    return ElementLayouter;\n}());\nexport { ElementLayouter };\nvar PdfLayoutFormat = /** @class */ (function () {\n    function PdfLayoutFormat(baseFormat) {\n        if (typeof baseFormat === 'undefined') {\n            //\n        }\n        else {\n            this.break = baseFormat.break;\n            this.layout = baseFormat.layout;\n            this.paginateBounds = baseFormat.paginateBounds;\n            this.boundsSet = baseFormat.usePaginateBounds;\n        }\n    }\n    Object.defineProperty(PdfLayoutFormat.prototype, \"layout\", {\n        // Properties\n        /**\n         * Gets or sets `layout` type of the element.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.layoutType === 'undefined' || this.layoutType == null) {\n            //      this.layoutType = PdfLayoutType.Paginate;\n            // }\n            return this.layoutType;\n        },\n        set: function (value) {\n            this.layoutType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"break\", {\n        /**\n         * Gets or sets `break` type of the element.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.breakType === 'undefined' || this.boundsSet == null) {\n            //      this.breakType = PdfLayoutBreakType.FitPage;\n            // }\n            return this.breakType;\n        },\n        set: function (value) {\n            this.breakType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"paginateBounds\", {\n        /**\n         * Gets or sets the `bounds` on the next page.\n         * @private\n         */\n        get: function () {\n            if (typeof this.layoutPaginateBounds === 'undefined' && this.layoutPaginateBounds == null) {\n                this.layoutPaginateBounds = new RectangleF(0, 0, 0, 0);\n            }\n            return this.layoutPaginateBounds;\n        },\n        set: function (value) {\n            this.layoutPaginateBounds = value;\n            this.boundsSet = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"usePaginateBounds\", {\n        /**\n         * Gets a value indicating whether [`use paginate bounds`].\n         * @private\n         */\n        get: function () {\n            // if (typeof this.boundsSet === 'undefined' || this.boundsSet == null) {\n            //      this.boundsSet = false;\n            // }\n            return this.boundsSet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutFormat;\n}());\nexport { PdfLayoutFormat };\nvar PdfLayoutParams = /** @class */ (function () {\n    function PdfLayoutParams() {\n    }\n    Object.defineProperty(PdfLayoutParams.prototype, \"page\", {\n        // Properties\n        /**\n         * Gets or sets the layout `page` for the element.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        set: function (value) {\n            this.pdfPage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutParams.prototype, \"bounds\", {\n        /**\n         * Gets or sets layout `bounds` for the element.\n         * @private\n         */\n        get: function () {\n            return new RectangleF(this.layoutBounds.x, this.layoutBounds.y, this.layoutBounds.width, this.layoutBounds.height);\n        },\n        set: function (value) {\n            this.layoutBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutParams.prototype, \"format\", {\n        /**\n         * Gets or sets `layout settings` for the element.\n         * @private\n         */\n        get: function () {\n            return this.layoutFormat;\n        },\n        set: function (value) {\n            this.layoutFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutParams;\n}());\nexport { PdfLayoutParams };\nvar PdfLayoutResult = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes the new instance of `PdfLayoutResult` class.\n     * @private\n     */\n    function PdfLayoutResult(page, bounds) {\n        this.pdfPage = page;\n        this.layoutBounds = bounds;\n    }\n    Object.defineProperty(PdfLayoutResult.prototype, \"page\", {\n        // Properties\n        /**\n         * Gets the last `page` where the element was drawn.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutResult.prototype, \"bounds\", {\n        /**\n         * Gets the `bounds` of the element on the last page where it was drawn.\n         * @private\n         */\n        get: function () {\n            return this.layoutBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutResult;\n}());\nexport { PdfLayoutResult };\n","/**\n * PdfBorders.ts class for EJ2-PDF\n */\nimport { PdfPen } from './../../../graphics/pdf-pen';\nimport { PdfDashStyle } from './../../../graphics/enum';\nimport { PdfColor } from './../../../graphics/pdf-color';\n/**\n * `PdfBorders` class used represents the cell border of the PDF grid.\n */\nvar PdfBorders = /** @class */ (function () {\n    // Constructor\n    /**\n     * Create a new instance for `PdfBorders` class.\n     * @private\n     */\n    function PdfBorders() {\n        var defaultBorderPenLeft = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenLeft.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenRight = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenRight.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenTop = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenTop.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenBottom = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenBottom.dashStyle = PdfDashStyle.Solid;\n        this.leftPen = defaultBorderPenLeft;\n        this.rightPen = defaultBorderPenRight;\n        this.topPen = defaultBorderPenTop;\n        this.bottomPen = defaultBorderPenBottom;\n    }\n    Object.defineProperty(PdfBorders.prototype, \"left\", {\n        // Properties\n        /**\n         * Gets or sets the `Left`.\n         * @private\n         */\n        get: function () {\n            return this.leftPen;\n        },\n        set: function (value) {\n            this.leftPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"right\", {\n        /**\n         * Gets or sets the `Right`.\n         * @private\n         */\n        get: function () {\n            return this.rightPen;\n        },\n        set: function (value) {\n            this.rightPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"top\", {\n        /**\n         * Gets or sets the `Top`.\n         * @private\n         */\n        get: function () {\n            return this.topPen;\n        },\n        set: function (value) {\n            this.topPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `Bottom`.\n         * @private\n         */\n        get: function () {\n            return this.bottomPen;\n        },\n        set: function (value) {\n            this.bottomPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"all\", {\n        /**\n         * sets the `All`.\n         * @private\n         */\n        set: function (value) {\n            this.leftPen = this.rightPen = this.topPen = this.bottomPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"isAll\", {\n        /**\n         * Gets a value indicating whether this instance `is all`.\n         * @private\n         */\n        get: function () {\n            return ((this.leftPen === this.rightPen) && (this.leftPen === this.topPen) && (this.leftPen === this.bottomPen));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders, \"default\", {\n        /**\n         * Gets the `default`.\n         * @private\n         */\n        get: function () {\n            return new PdfBorders();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfBorders;\n}());\nexport { PdfBorders };\nvar PdfPaddings = /** @class */ (function () {\n    function PdfPaddings(left, right, top, bottom) {\n        /**\n         * The 'left' border padding set.\n         * @private\n         */\n        this.hasLeftPad = false;\n        /**\n         * The 'right' border padding set.\n         * @private\n         */\n        this.hasRightPad = false;\n        /**\n         * The 'top' border padding set.\n         * @private\n         */\n        this.hasTopPad = false;\n        /**\n         * The 'bottom' border padding set.\n         * @private\n         */\n        this.hasBottomPad = false;\n        if (typeof left === 'undefined') {\n            //5.76 and 0 are taken from ms-word default table margins.\n            this.leftPad = this.rightPad = 5.76;\n            //0.5 is set for top and bottom by default.\n            this.bottomPad = this.topPad = 0.5;\n        }\n        else {\n            this.leftPad = left;\n            this.rightPad = right;\n            this.topPad = top;\n            this.bottomPad = bottom;\n            this.hasLeftPad = true;\n            this.hasRightPad = true;\n            this.hasTopPad = true;\n            this.hasBottomPad = true;\n        }\n    }\n    Object.defineProperty(PdfPaddings.prototype, \"left\", {\n        // Properties\n        /**\n         * Gets or sets the `left` value of the edge\n         * @private\n         */\n        get: function () {\n            return this.leftPad;\n        },\n        set: function (value) {\n            this.leftPad = value;\n            this.hasLeftPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"right\", {\n        /**\n         * Gets or sets the `right` value of the edge.\n         * @private\n         */\n        get: function () {\n            return this.rightPad;\n        },\n        set: function (value) {\n            this.rightPad = value;\n            this.hasRightPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"top\", {\n        /**\n         * Gets or sets the `top` value of the edge\n         * @private\n         */\n        get: function () {\n            return this.topPad;\n        },\n        set: function (value) {\n            this.topPad = value;\n            this.hasTopPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `bottom` value of the edge.\n         * @private\n         */\n        get: function () {\n            return this.bottomPad;\n        },\n        set: function (value) {\n            this.bottomPad = value;\n            this.hasBottomPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"all\", {\n        /**\n         * Sets value to all sides `left,right,top and bottom`.s\n         * @private\n         */\n        set: function (value) {\n            this.leftPad = this.rightPad = this.topPad = this.bottomPad = value;\n            this.hasLeftPad = true;\n            this.hasRightPad = true;\n            this.hasTopPad = true;\n            this.hasBottomPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfPaddings;\n}());\nexport { PdfPaddings };\n","import { RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutParams, PdfLayoutFormat } from './base/element-layouter';\nimport { PdfBorders } from './../../structured-elements/grid/styles/pdf-borders';\n/**\n * `PdfLayoutElement` class represents the base class for all elements that can be layout on the pages.\n * @private\n */\nvar PdfLayoutElement = /** @class */ (function () {\n    function PdfLayoutElement() {\n    }\n    Object.defineProperty(PdfLayoutElement.prototype, \"raiseBeginPageLayout\", {\n        // Property\n        /**\n         * Gets a value indicating whether the `start page layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.beginPageLayout !== 'undefined');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutElement.prototype, \"raiseEndPageLayout\", {\n        /**\n         * Gets a value indicating whether the `ending page layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.endPageLayout !== 'undefined');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Event Handlers\n    PdfLayoutElement.prototype.onBeginPageLayout = function (args) {\n        if (this.beginPageLayout) {\n            this.beginPageLayout(this, args);\n        }\n    };\n    PdfLayoutElement.prototype.onEndPageLayout = function (args) {\n        if (this.endPageLayout) {\n            this.endPageLayout(this, args);\n        }\n    };\n    PdfLayoutElement.prototype.drawHelper = function (arg2, arg3, arg4, arg5) {\n        if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg2, arg3.x, arg3.y);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            return this.drawHelper(arg2, arg3, arg4, null);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg2, arg3, null);\n        }\n        else if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && arg4 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg2, arg3.x, arg3.y, arg4);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && (arg5 instanceof PdfLayoutFormat || arg5 == null)) {\n            var width = (arg2.graphics.clientSize.width - arg3);\n            var layoutRectangle = new RectangleF(arg3, arg4, width, 0);\n            return this.drawHelper(arg2, layoutRectangle, arg5);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'boolean') {\n            this.bEmbedFonts = arg4;\n            return this.drawHelper(arg2, arg3, null);\n        }\n        else {\n            var param = new PdfLayoutParams();\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            param.page = arg2;\n            param.bounds = temparg3;\n            if (param != null) {\n                var x = param.bounds.x;\n                var y = param.bounds.y;\n                if (param.bounds.x === 0) {\n                    x = PdfBorders.default.right.width / 2;\n                }\n                if (param.bounds.y === 0) {\n                    y = PdfBorders.default.top.width / 2;\n                }\n                var newBound = new RectangleF(x, y, param.bounds.width, param.bounds.height);\n                param.bounds = newBound;\n            }\n            param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n            var result = this.layout(param);\n            return result;\n        }\n    };\n    return PdfLayoutElement;\n}());\nexport { PdfLayoutElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * TextLayouter.ts class for EJ2-PDF\n */\nimport { ElementLayouter, PdfLayoutResult } from './element-layouter';\nimport { RectangleF, SizeF } from './../../../drawing/pdf-drawing';\nimport { PdfStringLayouter } from './../../fonts/string-layouter';\nimport { PdfLayoutBreakType } from './../../figures/enum';\nimport { PdfColor } from './../../pdf-color';\nimport { PdfTextWebLink } from './../../../annotations/pdf-text-web-link';\n/**\n * Class that `layouts the text`.\n * @private\n */\nvar TextLayouter = /** @class */ (function (_super) {\n    __extends(TextLayouter, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `TextLayouter` class.\n     * @private\n     */\n    function TextLayouter(element) {\n        return _super.call(this, element) || this;\n    }\n    Object.defineProperty(TextLayouter.prototype, \"element\", {\n        /**\n         * Gets the layout `element`.\n         * @private\n         */\n        get: function () {\n            return _super.prototype.getElement.call(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    TextLayouter.prototype.layoutInternal = function (param) {\n        /* tslint:disable */\n        this.format = (this.element.stringFormat !== null && typeof this.element.stringFormat !== 'undefined') ? this.element.stringFormat : null;\n        var currentPage = param.page;\n        var currentBounds = param.bounds;\n        var text = this.element.value;\n        var result = null;\n        var pageResult = new TextPageLayoutResult();\n        pageResult.page = currentPage;\n        pageResult.remainder = text;\n        for (;;) {\n            pageResult = this.layoutOnPage(text, currentPage, currentBounds, param);\n            result = this.getLayoutResult(pageResult);\n            break;\n        }\n        /* tslint:enable */\n        return result;\n    };\n    /**\n     * Raises `PageLayout` event if needed.\n     * @private\n     */\n    TextLayouter.prototype.getLayoutResult = function (pageResult) {\n        var result = new PdfTextLayoutResult(pageResult.page, pageResult.bounds, pageResult.remainder, pageResult.lastLineBounds);\n        return result;\n    };\n    /* tslint:disable */\n    /**\n     * `Layouts` the text on the page.\n     * @private\n     */\n    TextLayouter.prototype.layoutOnPage = function (text, currentPage, currentBounds, param) {\n        var result = new TextPageLayoutResult();\n        result.remainder = text;\n        result.page = currentPage;\n        currentBounds = this.checkCorrectBounds(currentPage, currentBounds);\n        var layouter = new PdfStringLayouter();\n        var stringResult = layouter.layout(text, this.element.font, this.format, currentBounds, currentPage.getClientSize().height, false, new SizeF(0, 0));\n        var textFinished = (stringResult.remainder == null);\n        var doesntFit = (param.format.break === PdfLayoutBreakType.FitElement);\n        var canDraw = !(doesntFit || stringResult.empty);\n        // Draw the text.\n        var graphics = currentPage.graphics;\n        var brush = this.element.getBrush();\n        if (this.element instanceof PdfTextWebLink) {\n            brush.color = new PdfColor(0, 0, 255);\n        }\n        graphics.drawStringLayoutResult(stringResult, this.element.font, this.element.pen, brush, currentBounds, this.format);\n        var lineInfo = stringResult.lines[stringResult.lineCount - 1];\n        result.lastLineBounds = graphics.getLineBounds(stringResult.lineCount - 1, stringResult, this.element.font, currentBounds, this.format);\n        result.bounds = this.getTextPageBounds(currentPage, currentBounds, stringResult);\n        result.remainder = stringResult.remainder;\n        result.end = (textFinished);\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * `Corrects current bounds` on the page.\n     * @private\n     */\n    TextLayouter.prototype.checkCorrectBounds = function (currentPage, currentBounds) {\n        var pageSize = currentPage.graphics.clientSize;\n        currentBounds.height = (currentBounds.height > 0) ? currentBounds.height : pageSize.height - currentBounds.y;\n        return currentBounds;\n    };\n    /**\n     * Returns a `rectangle` where the text was printed on the page.\n     * @private\n     */\n    /* tslint:disable */\n    TextLayouter.prototype.getTextPageBounds = function (currentPage, currentBounds, stringResult) {\n        var textSize = stringResult.actualSize;\n        var x = currentBounds.x;\n        var y = currentBounds.y;\n        var width = (currentBounds.width > 0) ? currentBounds.width : textSize.width;\n        var height = textSize.height;\n        var shiftedRect = currentPage.graphics.checkCorrectLayoutRectangle(textSize, currentBounds.x, currentBounds.y, this.format);\n        // if (currentBounds.width <= 0) {\n        x = shiftedRect.x;\n        // }\n        var verticalShift = currentPage.graphics.getTextVerticalAlignShift(textSize.height, currentBounds.height, this.format);\n        y += verticalShift;\n        var bounds = new RectangleF(x, y, width, height);\n        return bounds;\n    };\n    return TextLayouter;\n}(ElementLayouter));\nexport { TextLayouter };\nvar TextPageLayoutResult = /** @class */ (function () {\n    function TextPageLayoutResult() {\n    }\n    return TextPageLayoutResult;\n}());\nexport { TextPageLayoutResult };\nvar PdfTextLayoutResult = /** @class */ (function (_super) {\n    __extends(PdfTextLayoutResult, _super);\n    // Constructors\n    /**\n     * Initializes the new instance of `PdfTextLayoutResult` class.\n     * @private\n     */\n    function PdfTextLayoutResult(page, bounds, remainder, lastLineBounds) {\n        var _this = _super.call(this, page, bounds) || this;\n        _this.remainderText = remainder;\n        _this.lastLineTextBounds = lastLineBounds;\n        return _this;\n    }\n    Object.defineProperty(PdfTextLayoutResult.prototype, \"remainder\", {\n        // Properties\n        /**\n         * Gets a value that contains the `text` that was not printed.\n         * @private\n         */\n        get: function () {\n            return this.remainderText;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextLayoutResult.prototype, \"lastLineBounds\", {\n        /**\n         * Gets a value that indicates the `bounds` of the last line that was printed on the page.\n         * @private\n         */\n        get: function () {\n            return this.lastLineTextBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTextLayoutResult;\n}(PdfLayoutResult));\nexport { PdfTextLayoutResult };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfTextElement.ts class for EJ2-PDF\n */\nimport { PdfLayoutElement } from './../figures/layout-element';\nimport { PdfBrush } from './../brushes/pdf-brush';\nimport { PdfFont } from './../fonts/pdf-font';\nimport { PdfStandardFont } from './../fonts/pdf-standard-font';\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutParams } from './../figures/base/element-layouter';\nimport { TextLayouter } from './base/text-layouter';\nimport { PdfSolidBrush } from './../brushes/pdf-solid-brush';\nimport { PdfColor } from './../pdf-color';\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutFormat } from './base/element-layouter';\nimport { PdfStringLayouter } from './../fonts/string-layouter';\nimport { PdfTextAlignment } from './../enum';\n/**\n * `PdfTextElement` class represents the text area with the ability to span several pages\n * and inherited from the 'PdfLayoutElement' class.\n * @private\n */\nvar PdfTextElement = /** @class */ (function (_super) {\n    __extends(PdfTextElement, _super);\n    function PdfTextElement(arg1, arg2, arg3, arg4, arg5) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * `Text` data.\n         * @private\n         */\n        _this.content = '';\n        /**\n         * `Value` of text data.\n         * @private\n         */\n        _this.elementValue = '';\n        /**\n         * indicate whether the drawText with PointF overload is called or not.\n         * @default false\n         * @private\n         */\n        _this.hasPointOverload = false;\n        /**\n         * indicate whether the PdfGridCell value is `PdfTextElement`\n         * @default false\n         * @private\n         */\n        _this.isPdfTextElement = false;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (typeof arg1 === 'string' && typeof arg2 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && typeof arg3 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && arg3 instanceof PdfPen && typeof arg4 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfPen = arg3;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && arg3 instanceof PdfBrush && typeof arg4 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfBrush = arg3;\n        }\n        else {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfPen = arg3;\n            _this.pdfBrush = arg4;\n            _this.format = arg5;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTextElement.prototype, \"text\", {\n        // Properties\n        /**\n         * Gets or sets a value indicating the `text` that should be printed.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * //\n         * // set the link text\n         * textLink.text = 'Google';\n         * //\n         * // set the font\n         * textLink.font = font;\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.elementValue = value;\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"value\", {\n        //get value\n        /**\n         * Gets or sets a `value` indicating the text that should be printed.\n         * @private\n         */\n        get: function () {\n            return this.elementValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"pen\", {\n        //get pen\n        /**\n         * Gets or sets a `PdfPen` that determines the color, width, and style of the text\n         * @private\n         */\n        get: function () {\n            return this.pdfPen;\n        },\n        //Set pen value\n        set: function (value) {\n            this.pdfPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"brush\", {\n        //get brush\n        /**\n         * Gets or sets the `PdfBrush` that will be used to draw the text with color and texture.\n         * @private\n         */\n        get: function () {\n            return this.pdfBrush;\n        },\n        //Set brush value\n        set: function (value) {\n            this.pdfBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"font\", {\n        //get font\n        /**\n         * Gets or sets a `PdfFont` that defines the text format.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * // set the link text\n         * textLink.text = 'Google';\n         * //\n         * // set the font\n         * textLink.font = font;\n         * //\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfFont;\n        },\n        set: function (value) {\n            this.pdfFont = value;\n            if (this.pdfFont instanceof PdfStandardFont && this.content != null) {\n                this.elementValue = PdfStandardFont.convert(this.content);\n            }\n            else {\n                this.elementValue = this.content;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"stringFormat\", {\n        /**\n         * Gets or sets the `PdfStringFormat` that will be used to set the string format\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Gets a `brush` for drawing.\n     * @private\n     */\n    PdfTextElement.prototype.getBrush = function () {\n        return (this.pdfBrush == null || typeof this.pdfBrush === 'undefined') ? new PdfSolidBrush(new PdfColor(0, 0, 0)) : this.pdfBrush;\n    };\n    // /**\n    //  * `Draws` an element on the Graphics.\n    //  * @private\n    //  */\n    // public drawInternal(graphics : PdfGraphics) : void {\n    //     graphics.drawString(this.elementValue, this.pdfFont, this.pdfPen, this.getBrush(), 0, 0, this.stringFormat);\n    // }\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    PdfTextElement.prototype.layout = function (param) {\n        var layouter = new TextLayouter(this);\n        var result = layouter.layout(param);\n        return result;\n    };\n    PdfTextElement.prototype.drawText = function (arg2, arg3, arg4, arg5) {\n        if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && typeof arg4 === 'undefined') {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3.x, arg3.y);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3, arg4, null);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawText(arg2, arg3, null);\n        }\n        else if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && arg4 instanceof PdfLayoutFormat) {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3.x, arg3.y, arg4);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && (arg5 instanceof PdfLayoutFormat || arg5 == null)) {\n            this.hasPointOverload = true;\n            var width = (arg2.graphics.clientSize.width - arg3);\n            var layoutRectangle = new RectangleF(arg3, arg4, width, 0);\n            return this.drawText(arg2, layoutRectangle, arg5);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'boolean') {\n            return this.drawText(arg2, arg3, null);\n        }\n        else {\n            var layout = new PdfStringLayouter();\n            if (this.hasPointOverload) {\n                var stringLayoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF((arg2.graphics.clientSize.width - arg3.x), 0), true, arg2.graphics.clientSize);\n                var layoutResult = void 0;\n                var param = new PdfLayoutParams();\n                var temparg3 = arg3;\n                var temparg4 = arg4;\n                param.page = arg2;\n                var previousPage = arg2;\n                param.bounds = temparg3;\n                param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n                if (stringLayoutResult.lines.length > 1) {\n                    this.text = stringLayoutResult.layoutLines[0].text;\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        var previousPosition = new PointF(param.bounds.x, param.bounds.y);\n                        layoutResult = this.layout(param);\n                        var bounds = new RectangleF(0, layoutResult.bounds.y + stringLayoutResult.lineHeight, arg2.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                        var isPaginate = false;\n                        for (var i = 1; i < stringLayoutResult.lines.length; i++) {\n                            param.page = layoutResult.page;\n                            param.bounds = new RectangleF(new PointF(bounds.x, bounds.y), new SizeF(bounds.width, bounds.height));\n                            this.text = stringLayoutResult.layoutLines[i].text;\n                            if (bounds.y + stringLayoutResult.lineHeight > layoutResult.page.graphics.clientSize.height) {\n                                isPaginate = true;\n                                param.page = param.page.graphics.getNextPage();\n                                if (previousPosition.y > (layoutResult.page.graphics.clientSize.height - layoutResult.bounds.height)) {\n                                    bounds = new RectangleF(0, layoutResult.bounds.height, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                                }\n                                else {\n                                    bounds = new RectangleF(0, 0, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                                }\n                                param.bounds = bounds;\n                            }\n                            layoutResult = this.layout(param);\n                            if (i !== (stringLayoutResult.lines.length - 1)) {\n                                bounds = new RectangleF(0, layoutResult.bounds.y + stringLayoutResult.lineHeight, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                            }\n                            else {\n                                var lineWidth = this.font.measureString(this.text, this.format).width;\n                                layoutResult = this.calculateResultBounds(layoutResult, lineWidth, layoutResult.page.graphics.clientSize.width, 0);\n                            }\n                        }\n                    }\n                    return layoutResult;\n                }\n                else {\n                    var lineSize = this.font.measureString(this.text, this.format);\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        layoutResult = this.layout(param);\n                        layoutResult = this.calculateResultBounds(layoutResult, lineSize.width, layoutResult.page.graphics.clientSize.width, 0);\n                    }\n                    return layoutResult;\n                }\n            }\n            else {\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg3.width, 0), false, arg2.graphics.clientSize);\n                var result = void 0;\n                var param = new PdfLayoutParams();\n                var temparg3 = arg3;\n                var temparg4 = arg4;\n                param.page = arg2;\n                param.bounds = temparg3;\n                param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n                if (layoutResult.lines.length > 1) {\n                    this.text = layoutResult.layoutLines[0].text;\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        var previousPosition = new PointF(param.bounds.x, param.bounds.y);\n                        result = this.layout(param);\n                        var bounds = new RectangleF(temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                        var isPaginate = false;\n                        for (var i = 1; i < layoutResult.lines.length; i++) {\n                            param.page = result.page;\n                            param.bounds = new RectangleF(bounds.x, bounds.y, bounds.width, bounds.height);\n                            this.text = layoutResult.layoutLines[i].text;\n                            if (bounds.y + layoutResult.lineHeight > result.page.graphics.clientSize.height) {\n                                isPaginate = true;\n                                param.page = param.page.graphics.getNextPage();\n                                if (previousPosition.y > (result.page.graphics.clientSize.height - result.bounds.height)) {\n                                    bounds = new RectangleF(temparg3.x, layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                                }\n                                else {\n                                    bounds = new RectangleF(temparg3.x, 0, temparg3.width, layoutResult.lineHeight);\n                                }\n                                param.bounds = bounds;\n                            }\n                            result = this.layout(param);\n                            if (i !== (layoutResult.lines.length - 1)) {\n                                bounds = new RectangleF(temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                            }\n                            else {\n                                var lineWidth = this.font.measureString(this.text, this.format).width;\n                                result = this.calculateResultBounds(result, lineWidth, temparg3.width, temparg3.x);\n                            }\n                        }\n                    }\n                    return result;\n                }\n                else {\n                    var lineSize = this.font.measureString(this.text, this.format);\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        result = this.layout(param);\n                        result = this.calculateResultBounds(result, lineSize.width, temparg3.width, temparg3.x);\n                    }\n                    return result;\n                }\n            }\n        }\n    };\n    PdfTextElement.prototype.calculateResultBounds = function (result, lineWidth, maximumWidth, startPosition) {\n        var shift = 0;\n        if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Center) {\n            result.bounds.x = startPosition + (maximumWidth - lineWidth) / 2;\n            result.bounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Right) {\n            result.bounds.x = startPosition + (maximumWidth - lineWidth);\n            result.bounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n            result.bounds.x = startPosition;\n            result.bounds.width = maximumWidth;\n        }\n        else {\n            result.bounds.width = startPosition;\n            result.bounds.width = lineWidth;\n        }\n        return result;\n    };\n    return PdfTextElement;\n}(PdfLayoutElement));\nexport { PdfTextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfActionLinkAnnotation } from './action-link-annotation';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfUriAction } from './../actions/uri-action';\n/**\n * `PdfUriAnnotation` class represents the Uri annotation.\n * @private\n */\nvar PdfUriAnnotation = /** @class */ (function (_super) {\n    __extends(PdfUriAnnotation, _super);\n    function PdfUriAnnotation(rectangle, uri) {\n        var _this = _super.call(this, rectangle) || this;\n        if (typeof uri !== 'undefined') {\n            _this.uri = uri;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uriAction\", {\n        /**\n         * Get `action` of the annotation.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfUriAction === 'undefined') {\n                this.pdfUriAction = new PdfUriAction();\n            }\n            return this.pdfUriAction;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uri\", {\n        // Properties\n        /**\n         * Gets or sets the `Uri` address.\n         * @private\n         */\n        get: function () {\n            return this.uriAction.uri;\n        },\n        set: function (value) {\n            if (this.uriAction.uri !== value) {\n                this.uriAction.uri = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfUriAnnotation.prototype, \"action\", {\n        /**\n         * Gets or sets the `action`.\n         * @private\n         */\n        get: function () {\n            return this.getSetAction();\n        },\n        set: function (value) {\n            this.getSetAction(value);\n            this.uriAction.next = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initializes` annotation object.\n     * @private\n     */\n    PdfUriAnnotation.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.link));\n        var tempPrimitive = this.uriAction.element;\n        this.dictionary.items.setValue(this.dictionaryProperties.a, this.uriAction.element);\n    };\n    return PdfUriAnnotation;\n}(PdfActionLinkAnnotation));\nexport { PdfUriAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPage } from './../pages/pdf-page';\nimport { PointF, RectangleF, SizeF } from './../drawing/pdf-drawing';\nimport { PdfTextElement } from './../graphics/figures/text-element';\nimport { PdfUriAnnotation } from './uri-annotation';\nimport { PdfStringLayouter } from './../graphics/fonts/string-layouter';\nimport { PdfFontStyle } from './../graphics/fonts/enum';\nimport { PdfTextAlignment } from './../graphics/enum';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\n/**\n * `PdfTextWebLink` class represents the class for text web link annotation.\n * ```typescript\n * // create a new PDF document.\n * let document : PdfDocument = new PdfDocument();\n * // add a page to the document.\n * let page1 : PdfPage = document.pages.add();\n * // create the font\n * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n * //\n * // create the Text Web Link\n * let textLink : PdfTextWebLink = new PdfTextWebLink();\n * // set the hyperlink\n * textLink.url = 'http://www.google.com';\n * // set the link text\n * textLink.text = 'Google';\n * // set the font\n * textLink.font = font;\n * // draw the hyperlink in PDF page\n * textLink.draw(page1, new PointF(10, 40));\n * //\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextWebLink = /** @class */ (function (_super) {\n    __extends(PdfTextWebLink, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfTextWebLink` class.\n     * @private\n     */\n    function PdfTextWebLink() {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Internal variable to store `Url`.\n         * @default ''\n         * @private\n         */\n        _this.uniformResourceLocator = '';\n        /**\n         * Internal variable to store `Uri Annotation` object.\n         * @default null\n         * @private\n         */\n        _this.uriAnnotation = null;\n        /**\n         * Checks whether the drawTextWebLink method with `PointF` overload is called or not.\n         * If it set as true, then the start position of each lines excluding firest line is changed as (0, Y).\n         * @private\n         * @hidden\n         */\n        _this.recalculateBounds = false;\n        _this.defaultBorder = new PdfArray();\n        for (var i = 0; i < 3; i++) {\n            _this.defaultBorder.add(new PdfNumber(0));\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTextWebLink.prototype, \"url\", {\n        // Properties\n        /**\n         * Gets or sets the `Uri address`.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * //\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * //\n         * // set the link text\n         * textLink.text = 'Google';\n         * // set the font\n         * textLink.font = font;\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.uniformResourceLocator;\n        },\n        set: function (value) {\n            if (value.length === 0) {\n                throw new Error('ArgumentException : Url - string can not be empty');\n            }\n            this.uniformResourceLocator = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextWebLink.prototype.draw = function (arg1, arg2) {\n        if (arg1 instanceof PdfPage) {\n            var layout = new PdfStringLayouter();\n            var previousFontStyle = this.font.style;\n            if (arg2 instanceof PointF) {\n                this.recalculateBounds = true;\n                this.font.style = PdfFontStyle.Underline;\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF((arg1.graphics.clientSize.width - arg2.x), 0), true, arg1.graphics.clientSize);\n                if (layoutResult.lines.length === 1) {\n                    var textSize = this.font.measureString(this.value);\n                    var rect = new RectangleF(arg2, textSize);\n                    rect = this.calculateBounds(rect, textSize.width, arg1.graphics.clientSize.width, arg2.x);\n                    this.uriAnnotation = new PdfUriAnnotation(rect, this.url);\n                    this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n                    arg1.annotations.add(this.uriAnnotation);\n                    var result = this.drawText(arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return result;\n                }\n                else {\n                    var result = this.drawMultipleLineWithPoint(layoutResult, arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return result;\n                }\n            }\n            else {\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg2.width, 0), false, new SizeF(0, 0));\n                this.font.style = PdfFontStyle.Underline;\n                if (layoutResult.lines.length === 1) {\n                    var textSize = this.font.measureString(this.value);\n                    var rect = new RectangleF(new PointF(arg2.x, arg2.y), textSize);\n                    rect = this.calculateBounds(rect, textSize.width, arg2.width, arg2.x);\n                    this.uriAnnotation = new PdfUriAnnotation(rect, this.url);\n                    this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n                    arg1.annotations.add(this.uriAnnotation);\n                    var returnValue = this.drawText(arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return returnValue;\n                }\n                else {\n                    var returnValue = this.drawMultipleLineWithBounds(layoutResult, arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return returnValue;\n                }\n            }\n        }\n        else {\n            var page = new PdfPage();\n            page = arg1.page;\n            return this.draw(page, arg2);\n        }\n    };\n    /* tslint:enable */\n    //Private methods\n    /**\n     * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified location.\n     * @private\n     */\n    PdfTextWebLink.prototype.drawMultipleLineWithPoint = function (result, page, location) {\n        var layoutResult;\n        for (var i = 0; i < result.layoutLines.length; i++) {\n            var size = this.font.measureString(result.lines[i].text);\n            var bounds = new RectangleF(location, size);\n            if (i !== 0) {\n                bounds.x = 0;\n            }\n            this.text = result.lines[i].text;\n            if (bounds.y + size.height > page.graphics.clientSize.height) {\n                if (i !== 0) {\n                    page = page.graphics.getNextPage();\n                    bounds = new RectangleF(0, 0, page.graphics.clientSize.width, size.height);\n                    location.y = 0;\n                }\n                else {\n                    break;\n                }\n            }\n            bounds = this.calculateBounds(bounds, size.width, page.graphics.clientSize.width, bounds.x);\n            this.uriAnnotation = new PdfUriAnnotation(bounds, this.url);\n            this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n            page.annotations.add(this.uriAnnotation);\n            if (i !== 0) {\n                layoutResult = this.drawText(page, new PointF(0, bounds.y));\n            }\n            else {\n                layoutResult = this.drawText(page, bounds.x, bounds.y);\n            }\n            location.y += size.height;\n        }\n        return layoutResult;\n    };\n    /**\n     * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified bounds.\n     * @private\n     */\n    PdfTextWebLink.prototype.drawMultipleLineWithBounds = function (result, page, bounds) {\n        var layoutResult;\n        for (var i = 0; i < result.layoutLines.length; i++) {\n            var size = this.font.measureString(result.lines[i].text);\n            var internalBounds = new RectangleF(new PointF(bounds.x, bounds.y), size);\n            internalBounds = this.calculateBounds(internalBounds, size.width, bounds.width, bounds.x);\n            this.text = result.lines[i].text;\n            if (bounds.y + size.height > page.graphics.clientSize.height) {\n                if (i !== 0) {\n                    page = page.graphics.getNextPage();\n                    bounds = new RectangleF(bounds.x, 0, bounds.width, size.height);\n                    internalBounds.y = 0;\n                }\n                else {\n                    break;\n                }\n            }\n            this.uriAnnotation = new PdfUriAnnotation(internalBounds, this.url);\n            this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n            page.annotations.add(this.uriAnnotation);\n            layoutResult = this.drawText(page, bounds);\n            bounds.y += size.height;\n        }\n        return layoutResult;\n    };\n    /* tslint:disable */\n    PdfTextWebLink.prototype.calculateBounds = function (currentBounds, lineWidth, maximumWidth, startPosition) {\n        var shift = 0;\n        if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Center) {\n            currentBounds.x = startPosition + (maximumWidth - lineWidth) / 2;\n            currentBounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Right) {\n            currentBounds.x = startPosition + (maximumWidth - lineWidth);\n            currentBounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n            currentBounds.x = startPosition;\n            currentBounds.width = maximumWidth;\n        }\n        else {\n            currentBounds.width = startPosition;\n            currentBounds.width = lineWidth;\n        }\n        return currentBounds;\n    };\n    return PdfTextWebLink;\n}(PdfTextElement));\nexport { PdfTextWebLink };\n","/**\n * PdfNumbersConvertor.ts class for EJ2-PDF\n * @private\n */\nimport { PdfNumberStyle } from './../../pages/enum';\n/**\n * `PdfNumbersConvertor` for convert page number into numbers, roman letters, etc.,\n * @private\n */\nvar PdfNumbersConvertor = /** @class */ (function () {\n    function PdfNumbersConvertor() {\n    }\n    // Static methods\n    /**\n     * Convert string value from page number with correct format.\n     * @private\n     */\n    PdfNumbersConvertor.convert = function (intArabic, numberStyle) {\n        var result = '';\n        switch (numberStyle) {\n            case PdfNumberStyle.None:\n                result = '';\n                break;\n            case PdfNumberStyle.Numeric:\n                result = intArabic.toString();\n                break;\n            case PdfNumberStyle.LowerLatin:\n                result = this.arabicToLetter(intArabic).toLowerCase();\n                break;\n            case PdfNumberStyle.LowerRoman:\n                result = this.arabicToRoman(intArabic).toLowerCase();\n                break;\n            case PdfNumberStyle.UpperLatin:\n                result = this.arabicToLetter(intArabic);\n                break;\n            case PdfNumberStyle.UpperRoman:\n                result = this.arabicToRoman(intArabic);\n                break;\n        }\n        return result;\n    };\n    /**\n     * Converts `arabic to roman` letters.\n     * @private\n     */\n    PdfNumbersConvertor.arabicToRoman = function (intArabic) {\n        var retval = '';\n        var retvalM = this.generateNumber(intArabic, 1000, 'M');\n        retval += retvalM.returnValue;\n        intArabic = retvalM.intArabic;\n        var retvalCM = this.generateNumber(intArabic, 900, 'CM');\n        retval += retvalCM.returnValue;\n        intArabic = retvalCM.intArabic;\n        var retvalD = this.generateNumber(intArabic, 500, 'D');\n        retval += retvalD.returnValue;\n        intArabic = retvalD.intArabic;\n        var retvalCD = this.generateNumber(intArabic, 400, 'CD');\n        retval += retvalCD.returnValue;\n        intArabic = retvalCD.intArabic;\n        var retvalC = this.generateNumber(intArabic, 100, 'C');\n        retval += retvalC.returnValue;\n        intArabic = retvalC.intArabic;\n        var retvalXC = this.generateNumber(intArabic, 90, 'XC');\n        retval += retvalXC.returnValue;\n        intArabic = retvalXC.intArabic;\n        var retvalL = this.generateNumber(intArabic, 50, 'L');\n        retval += retvalL.returnValue;\n        intArabic = retvalL.intArabic;\n        var retvalXL = this.generateNumber(intArabic, 40, 'XL');\n        retval += retvalXL.returnValue;\n        intArabic = retvalXL.intArabic;\n        var retvalX = this.generateNumber(intArabic, 10, 'X');\n        retval += retvalX.returnValue;\n        intArabic = retvalX.intArabic;\n        var retvalIX = this.generateNumber(intArabic, 9, 'IX');\n        retval += retvalIX.returnValue;\n        intArabic = retvalIX.intArabic;\n        var retvalV = this.generateNumber(intArabic, 5, 'V');\n        retval += retvalV.returnValue;\n        intArabic = retvalV.intArabic;\n        var retvalIV = this.generateNumber(intArabic, 4, 'IV');\n        retval += retvalIV.returnValue;\n        intArabic = retvalIV.intArabic;\n        var retvalI = this.generateNumber(intArabic, 1, 'I');\n        retval += retvalI.returnValue;\n        intArabic = retvalI.intArabic;\n        return retval.toString();\n    };\n    /**\n     * Converts `arabic to normal letters`.\n     * @private\n     */\n    PdfNumbersConvertor.arabicToLetter = function (arabic) {\n        var stack = this.convertToLetter(arabic);\n        var result = '';\n        while (stack.length > 0) {\n            var num = stack.pop();\n            result = this.appendChar(result, num);\n        }\n        return result.toString();\n    };\n    /**\n     * Generate a string value of an input number.\n     * @private\n     */\n    PdfNumbersConvertor.generateNumber = function (value, magnitude, letter) {\n        var numberstring = '';\n        while (value >= magnitude) {\n            value -= magnitude;\n            numberstring += letter;\n        }\n        return { returnValue: numberstring.toString(), intArabic: value };\n    };\n    /**\n     * Convert a input number into letters.\n     * @private\n     */\n    PdfNumbersConvertor.convertToLetter = function (arabic) {\n        if (arabic <= 0) {\n            throw Error('ArgumentOutOfRangeException-arabic, Value can not be less 0');\n        }\n        var stack = [];\n        while (arabic > this.letterLimit) {\n            var remainder = arabic % this.letterLimit;\n            if (remainder === 0.0) {\n                arabic = arabic / this.letterLimit - 1;\n                remainder = this.letterLimit;\n            }\n            else {\n                arabic /= this.letterLimit;\n            }\n            stack.push(remainder);\n        }\n        stack.push(arabic);\n        return stack;\n    };\n    /**\n     * Convert number to actual string value.\n     * @private\n     */\n    PdfNumbersConvertor.appendChar = function (builder, value) {\n        var letter = String.fromCharCode(PdfNumbersConvertor.acsiiStartIndex + value);\n        builder += letter;\n        return builder;\n    };\n    // Fields\n    /**\n     * numbers of letters in english [readonly].\n     * @default = 26.0\n     * @private\n     */\n    PdfNumbersConvertor.letterLimit = 26.0;\n    /**\n     * Resturns `acsii start index` value.\n     * @default 64\n     * @private\n     */\n    PdfNumbersConvertor.acsiiStartIndex = (65 - 1);\n    return PdfNumbersConvertor;\n}());\nexport { PdfNumbersConvertor };\n","/**\n * Represent class to store information about `template and value pairs`.\n * @private\n */\nvar PdfTemplateValuePair = /** @class */ (function () {\n    function PdfTemplateValuePair(template, value) {\n        // Fields\n        /**\n         * Internal variable to store template.\n         * @default null\n         * @private\n         */\n        this.pdfTemplate = null;\n        /**\n         * Intenal variable to store value.\n         * @private\n         */\n        this.content = '';\n        if (typeof template === 'undefined') {\n            //\n        }\n        else {\n            this.template = template;\n            this.value = value;\n        }\n    }\n    Object.defineProperty(PdfTemplateValuePair.prototype, \"template\", {\n        // Properties\n        /**\n         * Gets or sets the template.\n         * @private\n         */\n        get: function () {\n            return this.pdfTemplate;\n        },\n        set: function (value) {\n            this.pdfTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplateValuePair.prototype, \"value\", {\n        /**\n         * Gets or sets the value.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTemplateValuePair;\n}());\nexport { PdfTemplateValuePair };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfAutomaticField.ts class for EJ2-PDF\n */\nimport { PdfAutomaticField } from './automatic-field';\nimport { TemporaryDictionary } from './../../collections/object-object-pair/dictionary';\nimport { PdfTemplateValuePair } from './pdf-template-value-pair';\nimport { SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfTemplate } from './../../graphics/figures/pdf-template';\n/**\n * Represents automatic field which has the same value within the `PdfGraphics`.\n */\nvar PdfMultipleValueField = /** @class */ (function (_super) {\n    __extends(PdfMultipleValueField, _super);\n    function PdfMultipleValueField() {\n        var _this = _super.call(this) || this;\n        //  Fields\n        /**\n         * Stores the instance of dictionary values of `graphics and template value pair`.\n         * @private\n         */\n        _this.list = new TemporaryDictionary();\n        return _this;\n    }\n    // Implementation\n    /* tslint:disable */\n    PdfMultipleValueField.prototype.performDraw = function (graphics, location, scalingX, scalingY) {\n        _super.prototype.performDrawHelper.call(this, graphics, location, scalingX, scalingY);\n        var value = this.getValue(graphics);\n        var template = new PdfTemplate(this.getSize());\n        this.list.setValue(graphics, new PdfTemplateValuePair(template, value));\n        var g = template.graphics;\n        var size = this.getSize();\n        template.graphics.drawString(value, this.getFont(), this.pen, this.getBrush(), 0, 0, size.width, size.height, this.stringFormat);\n        var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n        graphics.drawPdfTemplate(template, drawLocation, new SizeF(template.width * scalingX, template.height * scalingY));\n    };\n    return PdfMultipleValueField;\n}(PdfAutomaticField));\nexport { PdfMultipleValueField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfBrush } from './../../graphics/brushes/pdf-brush';\nimport { PdfNumberStyle } from './../../pages/enum';\nimport { PdfNumbersConvertor } from './pdf-numbers-convertor';\nimport { PdfMultipleValueField } from './multiple-value-field';\n/**\n * Represents PDF document `page number field`.\n * @public\n */\nvar PdfPageNumberField = /** @class */ (function (_super) {\n    __extends(PdfPageNumberField, _super);\n    function PdfPageNumberField(font, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the number style of the page number field.\n         * @private\n         */\n        _this.internalNumberStyle = PdfNumberStyle.Numeric;\n        if (typeof arg2 === 'undefined') {\n            _this.font = font;\n        }\n        else if (arg2 instanceof PdfBrush) {\n            _this.font = font;\n            _this.brush = arg2;\n        }\n        else {\n            _this.font = font;\n            _this.bounds = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPageNumberField.prototype, \"numberStyle\", {\n        // Properties\n        /**\n         * Gets and sets the number style of the page number field.\n         * @private\n         */\n        get: function () {\n            return this.internalNumberStyle;\n        },\n        set: function (value) {\n            this.internalNumberStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return the `string` value of page number field.\n     * @public\n     */\n    PdfPageNumberField.prototype.getValue = function (graphics) {\n        var result = null;\n        var page = this.getPageFromGraphics(graphics);\n        result = this.internalGetValue(page);\n        return result;\n    };\n    /**\n     * Internal method to `get actual value of page number`.\n     * @private\n     */\n    PdfPageNumberField.prototype.internalGetValue = function (page) {\n        var document = page.document;\n        var pageIndex = document.pages.indexOf(page) + 1;\n        return PdfNumbersConvertor.convert(pageIndex, this.numberStyle);\n    };\n    return PdfPageNumberField;\n}(PdfMultipleValueField));\nexport { PdfPageNumberField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfCompositeField.ts class for EJ2-PDF\n */\nimport { PdfMultipleValueField } from './multiple-value-field';\n/**\n * Represents class which can concatenate multiple automatic fields into single string.\n */\nvar PdfCompositeField = /** @class */ (function (_super) {\n    __extends(PdfCompositeField, _super);\n    // Constructor\n    /**\n     * Initialize a new instance of `PdfCompositeField` class.\n     * @param font Font of the field.\n     * @param brush Color of the field.\n     * @param text Content of the field.\n     * @param list List of the automatic fields in specific order based on the text content.\n     */\n    function PdfCompositeField(font, brush, text) {\n        var list = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            list[_i - 3] = arguments[_i];\n        }\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the array of automatic fields.\n         * @private\n         */\n        _this.internalAutomaticFields = null;\n        /**\n         * Stores the text value of the field.\n         * @private\n         */\n        _this.internalText = '';\n        _this.font = font;\n        _this.brush = brush;\n        _this.text = text;\n        _this.automaticFields = list;\n        return _this;\n    }\n    Object.defineProperty(PdfCompositeField.prototype, \"text\", {\n        // Properties\n        /**\n         * Gets and sets the content of the field.\n         * @public\n         */\n        get: function () {\n            return this.internalText;\n        },\n        set: function (value) {\n            this.internalText = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCompositeField.prototype, \"automaticFields\", {\n        /**\n         * Gets and sets the list of the field to drawn.\n         * @public\n         */\n        get: function () {\n            return this.internalAutomaticFields;\n        },\n        set: function (value) {\n            this.internalAutomaticFields = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Return the actual value generated from the list of automatic fields.\n     * @public\n     */\n    PdfCompositeField.prototype.getValue = function (graphics) {\n        var values = [];\n        var text = this.text.toString();\n        if (typeof this.automaticFields !== 'undefined' && this.automaticFields != null && this.automaticFields.length > 0) {\n            for (var i = 0; i < this.automaticFields.length; i++) {\n                var automaticField = this.automaticFields[i];\n                text = text.replace('{' + i + '}', automaticField.getValue(graphics));\n            }\n        }\n        return text;\n    };\n    return PdfCompositeField;\n}(PdfMultipleValueField));\nexport { PdfCompositeField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSingleValueField.ts class for EJ2-PDF\n */\nimport { PdfAutomaticField } from './automatic-field';\nimport { TemporaryDictionary } from './../../collections/object-object-pair/dictionary';\nimport { PdfTemplateValuePair } from './pdf-template-value-pair';\nimport { PointF, SizeF } from './../../drawing/pdf-drawing';\nimport { PdfTemplate } from './../../graphics/figures/pdf-template';\n/**\n * Represents automatic field which has the same value in the whole document.\n */\nvar PdfSingleValueField = /** @class */ (function (_super) {\n    __extends(PdfSingleValueField, _super);\n    // Constructors\n    function PdfSingleValueField() {\n        var _this = _super.call(this) || this;\n        // Fields\n        /* tslint:disable */\n        _this.list = new TemporaryDictionary();\n        /* tslint:enable */\n        _this.painterGraphics = [];\n        return _this;\n    }\n    PdfSingleValueField.prototype.performDraw = function (graphics, location, scalingX, scalingY) {\n        _super.prototype.performDrawHelper.call(this, graphics, location, scalingX, scalingY);\n        var page = this.getPageFromGraphics(graphics);\n        var document = page.document;\n        var textValue = this.getValue(graphics);\n        /* tslint:disable */\n        if (this.list.containsKey(document)) {\n            var pair = this.list.getValue(document);\n            var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n            graphics.drawPdfTemplate(pair.template, drawLocation, new SizeF(pair.template.width * scalingX, pair.template.height * scalingY));\n            this.painterGraphics.push(graphics);\n        }\n        else {\n            var size = this.getSize();\n            var template = new PdfTemplate(size);\n            this.list.setValue(document, new PdfTemplateValuePair(template, textValue));\n            template.graphics.drawString(textValue, this.getFont(), this.pen, this.getBrush(), 0, 0, size.width, size.height, this.stringFormat);\n            var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n            graphics.drawPdfTemplate(template, drawLocation, new SizeF(template.width * scalingX, template.height * scalingY));\n            this.painterGraphics.push(graphics);\n        }\n        /* tslint:enable */\n    };\n    return PdfSingleValueField;\n}(PdfAutomaticField));\nexport { PdfSingleValueField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfPageCountField.ts class for EJ2-PDF\n */\nimport { PdfSingleValueField } from './single-value-field';\nimport { PdfNumberStyle } from './../../pages/enum';\nimport { PdfBrush } from './../../graphics/brushes/pdf-brush';\nimport { PdfNumbersConvertor } from './pdf-numbers-convertor';\n/**\n * Represents total PDF document page count automatic field.\n */\nvar PdfPageCountField = /** @class */ (function (_super) {\n    __extends(PdfPageCountField, _super);\n    function PdfPageCountField(font, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the number style of the field.\n         * @private\n         */\n        _this.internalNumberStyle = PdfNumberStyle.Numeric;\n        if (typeof arg2 === 'undefined') {\n            _this.font = font;\n        }\n        else if (arg2 instanceof PdfBrush) {\n            _this.font = font;\n            _this.brush = arg2;\n        }\n        else {\n            _this.font = font;\n            _this.bounds = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPageCountField.prototype, \"numberStyle\", {\n        // Properties\n        /**\n         * Gets and sets the number style of the field.\n         * @public\n         */\n        get: function () {\n            return this.internalNumberStyle;\n        },\n        set: function (value) {\n            this.internalNumberStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Return the actual value of the content to drawn.\n     * @public\n     */\n    PdfPageCountField.prototype.getValue = function (graphics) {\n        var result = null;\n        var page = this.getPageFromGraphics(graphics);\n        var document = page.section.parent.document;\n        var count = document.pages.count;\n        result = PdfNumbersConvertor.convert(count, this.numberStyle);\n        return result;\n    };\n    return PdfPageCountField;\n}(PdfSingleValueField));\nexport { PdfPageCountField };\n","/**\n * public Enum for `PdfDestinationMode`.\n * @private\n */\nexport var PdfDestinationMode;\n(function (PdfDestinationMode) {\n    /**\n     * Specifies the type of `Location`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"Location\"] = 0] = \"Location\";\n    /**\n     * Specifies the type of `FitToPage`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"FitToPage\"] = 1] = \"FitToPage\";\n    /**\n     * Specifies the type of `FitR`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"FitR\"] = 2] = \"FitR\";\n})(PdfDestinationMode || (PdfDestinationMode = {}));\n","import { PointF, RectangleF } from './../drawing/pdf-drawing';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfPageRotateAngle } from './../pages/enum';\nimport { PdfDestinationMode } from './../general/enum';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfDestination` class represents an anchor in the document\n * where bookmarks or annotations can direct when clicked.\n */\nvar PdfDestination = /** @class */ (function () {\n    function PdfDestination(arg1, arg2) {\n        // Fields\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Type of the `destination`.\n         * @private\n         */\n        this.destinationMode = PdfDestinationMode.Location;\n        /**\n         * `Zoom` factor.\n         * @private\n         * @default 0\n         */\n        this.zoomFactor = 0;\n        /**\n         * `Location` of the destination.\n         * @default new PointF() with 0 ,0 as co-ordinates\n         * @private\n         */\n        this.destinationLocation = new PointF(0, 0);\n        /**\n         * `Bounds` of the destination as RectangleF.\n         * @default RectangleF.Empty\n         * @private\n         */\n        this.bounds = new RectangleF();\n        /**\n         * Pdf primitive representing `this` object.\n         * @private\n         */\n        this.array = new PdfArray();\n        var angle = PdfPageRotateAngle.RotateAngle0;\n        this.destinationLocation = new PointF(0, this.destinationLocation.y);\n        this.pdfPage = arg1;\n        if (arg2 instanceof PointF) {\n            this.destinationLocation = arg2;\n        }\n        else {\n            this.bounds = arg2;\n        }\n    }\n    Object.defineProperty(PdfDestination.prototype, \"zoom\", {\n        // Properties\n        /**\n         * Gets and Sets the `zoom` factor.\n         * @private\n         */\n        get: function () {\n            return this.zoomFactor;\n        },\n        set: function (value) {\n            this.zoomFactor = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"page\", {\n        /**\n         * Gets and Sets the `page` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        set: function (value) {\n            this.pdfPage = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"mode\", {\n        /**\n         * Gets and Sets the destination `mode`.\n         * @private\n         */\n        get: function () {\n            return this.destinationMode;\n        },\n        set: function (value) {\n            this.destinationMode = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"location\", {\n        /**\n         * Gets and Sets the `location`.\n         * @private\n         */\n        get: function () {\n            return this.destinationLocation;\n        },\n        set: function (value) {\n            this.destinationLocation = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Translates` co-ordinates to PDF co-ordinate system (lower/left).\n     * @private\n     */\n    PdfDestination.prototype.pointToNativePdf = function (page, point) {\n        var section = page.section;\n        return section.pointToNativePdf(page, point);\n    };\n    /**\n     * `In fills` array by correct values.\n     * @private\n     */\n    PdfDestination.prototype.initializePrimitive = function () {\n        this.array.clear();\n        this.array.add(new PdfReferenceHolder(this.pdfPage));\n        switch (this.destinationMode) {\n            case PdfDestinationMode.Location:\n                var simplePage = this.pdfPage;\n                var point = new PointF();\n                point = this.pointToNativePdf(simplePage, this.destinationLocation);\n                this.array.add(new PdfName(this.dictionaryProperties.xyz));\n                this.array.add(new PdfNumber(point.x));\n                this.array.add(new PdfNumber(point.y));\n                this.array.add(new PdfNumber(this.zoomFactor));\n                break;\n            case PdfDestinationMode.FitToPage:\n                this.array.add(new PdfName(this.dictionaryProperties.fit));\n                break;\n        }\n    };\n    Object.defineProperty(PdfDestination.prototype, \"element\", {\n        /**\n         * Gets the `element` representing this object.\n         * @private\n         */\n        get: function () {\n            this.initializePrimitive();\n            return this.array;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfDestination;\n}());\nexport { PdfDestination };\n","/**\n * Specifies the constant values specifying whether to extend the shading\n * beyond the starting and ending points of the axis.\n */\nexport var PdfExtend;\n(function (PdfExtend) {\n    /**\n     * Do not extend any point.\n     */\n    PdfExtend[PdfExtend[\"None\"] = 0] = \"None\";\n    /**\n     * Extend start point.\n     */\n    PdfExtend[PdfExtend[\"Start\"] = 1] = \"Start\";\n    /**\n     * Extend end point.\n     */\n    PdfExtend[PdfExtend[\"End\"] = 2] = \"End\";\n    /**\n     * Extend both start and end points.\n     */\n    PdfExtend[PdfExtend[\"Both\"] = 3] = \"Both\";\n})(PdfExtend || (PdfExtend = {}));\n/**\n * Specifies the gradient direction of the linear gradient brush.\n */\nexport var PdfLinearGradientMode;\n(function (PdfLinearGradientMode) {\n    /**\n     * Specifies a gradient from upper right to lower left.\n     */\n    PdfLinearGradientMode[PdfLinearGradientMode[\"BackwardDiagonal\"] = 0] = \"BackwardDiagonal\";\n    /**\n     * Specifies a gradient from upper left to lower right.\n     */\n    PdfLinearGradientMode[PdfLinearGradientMode[\"ForwardDiagonal\"] = 1] = \"ForwardDiagonal\";\n    /**\n     * Specifies a gradient from left to right.\n     */\n    PdfLinearGradientMode[PdfLinearGradientMode[\"Horizontal\"] = 2] = \"Horizontal\";\n    /**\n     * Specifies a gradient from top to bottom.\n     */\n    PdfLinearGradientMode[PdfLinearGradientMode[\"Vertical\"] = 3] = \"Vertical\";\n})(PdfLinearGradientMode || (PdfLinearGradientMode = {}));\n/**\n * Shading type constants.\n */\nexport var ShadingType;\n(function (ShadingType) {\n    /**\n     * Function-based shading.\n     */\n    ShadingType[ShadingType[\"Function\"] = 1] = \"Function\";\n    /**\n     * Axial shading.\n     */\n    ShadingType[ShadingType[\"Axial\"] = 2] = \"Axial\";\n    /**\n     * Radial shading.\n     */\n    ShadingType[ShadingType[\"Radial\"] = 3] = \"Radial\";\n})(ShadingType || (ShadingType = {}));\nexport var KnownColor;\n(function (KnownColor) {\n    KnownColor[KnownColor[\"ActiveBorder\"] = 1] = \"ActiveBorder\";\n    KnownColor[KnownColor[\"ActiveCaption\"] = 2] = \"ActiveCaption\";\n    KnownColor[KnownColor[\"ActiveCaptionText\"] = 3] = \"ActiveCaptionText\";\n    KnownColor[KnownColor[\"AppWorkspace\"] = 4] = \"AppWorkspace\";\n    KnownColor[KnownColor[\"Control\"] = 5] = \"Control\";\n    KnownColor[KnownColor[\"ControlDark\"] = 6] = \"ControlDark\";\n    KnownColor[KnownColor[\"ControlDarkDark\"] = 7] = \"ControlDarkDark\";\n    KnownColor[KnownColor[\"ControlLight\"] = 8] = \"ControlLight\";\n    KnownColor[KnownColor[\"ControlLightLight\"] = 9] = \"ControlLightLight\";\n    KnownColor[KnownColor[\"ControlText\"] = 10] = \"ControlText\";\n    KnownColor[KnownColor[\"Desktop\"] = 11] = \"Desktop\";\n    KnownColor[KnownColor[\"GrayText\"] = 12] = \"GrayText\";\n    KnownColor[KnownColor[\"Highlight\"] = 13] = \"Highlight\";\n    KnownColor[KnownColor[\"HighlightText\"] = 14] = \"HighlightText\";\n    KnownColor[KnownColor[\"HotTrack\"] = 15] = \"HotTrack\";\n    KnownColor[KnownColor[\"InactiveBorder\"] = 16] = \"InactiveBorder\";\n    KnownColor[KnownColor[\"InactiveCaption\"] = 17] = \"InactiveCaption\";\n    KnownColor[KnownColor[\"InactiveCaptionText\"] = 18] = \"InactiveCaptionText\";\n    KnownColor[KnownColor[\"Info\"] = 19] = \"Info\";\n    KnownColor[KnownColor[\"InfoText\"] = 20] = \"InfoText\";\n    KnownColor[KnownColor[\"Menu\"] = 21] = \"Menu\";\n    KnownColor[KnownColor[\"MenuText\"] = 22] = \"MenuText\";\n    KnownColor[KnownColor[\"ScrollBar\"] = 23] = \"ScrollBar\";\n    KnownColor[KnownColor[\"Window\"] = 24] = \"Window\";\n    KnownColor[KnownColor[\"WindowFrame\"] = 25] = \"WindowFrame\";\n    KnownColor[KnownColor[\"WindowText\"] = 26] = \"WindowText\";\n    KnownColor[KnownColor[\"Transparent\"] = 27] = \"Transparent\";\n    KnownColor[KnownColor[\"AliceBlue\"] = 28] = \"AliceBlue\";\n    KnownColor[KnownColor[\"AntiqueWhite\"] = 29] = \"AntiqueWhite\";\n    KnownColor[KnownColor[\"Aqua\"] = 30] = \"Aqua\";\n    KnownColor[KnownColor[\"Aquamarine\"] = 31] = \"Aquamarine\";\n    KnownColor[KnownColor[\"Azure\"] = 32] = \"Azure\";\n    KnownColor[KnownColor[\"Beige\"] = 33] = \"Beige\";\n    KnownColor[KnownColor[\"Bisque\"] = 34] = \"Bisque\";\n    KnownColor[KnownColor[\"Black\"] = 35] = \"Black\";\n    KnownColor[KnownColor[\"BlanchedAlmond\"] = 36] = \"BlanchedAlmond\";\n    KnownColor[KnownColor[\"Blue\"] = 37] = \"Blue\";\n    KnownColor[KnownColor[\"BlueViolet\"] = 38] = \"BlueViolet\";\n    KnownColor[KnownColor[\"Brown\"] = 39] = \"Brown\";\n    KnownColor[KnownColor[\"BurlyWood\"] = 40] = \"BurlyWood\";\n    KnownColor[KnownColor[\"CadetBlue\"] = 41] = \"CadetBlue\";\n    KnownColor[KnownColor[\"Chartreuse\"] = 42] = \"Chartreuse\";\n    KnownColor[KnownColor[\"Chocolate\"] = 43] = \"Chocolate\";\n    KnownColor[KnownColor[\"Coral\"] = 44] = \"Coral\";\n    KnownColor[KnownColor[\"CornflowerBlue\"] = 45] = \"CornflowerBlue\";\n    KnownColor[KnownColor[\"Cornsilk\"] = 46] = \"Cornsilk\";\n    KnownColor[KnownColor[\"Crimson\"] = 47] = \"Crimson\";\n    KnownColor[KnownColor[\"Cyan\"] = 48] = \"Cyan\";\n    KnownColor[KnownColor[\"DarkBlue\"] = 49] = \"DarkBlue\";\n    KnownColor[KnownColor[\"DarkCyan\"] = 50] = \"DarkCyan\";\n    KnownColor[KnownColor[\"DarkGoldenrod\"] = 51] = \"DarkGoldenrod\";\n    KnownColor[KnownColor[\"DarkGray\"] = 52] = \"DarkGray\";\n    KnownColor[KnownColor[\"DarkGreen\"] = 53] = \"DarkGreen\";\n    KnownColor[KnownColor[\"DarkKhaki\"] = 54] = \"DarkKhaki\";\n    KnownColor[KnownColor[\"DarkMagenta\"] = 55] = \"DarkMagenta\";\n    KnownColor[KnownColor[\"DarkOliveGreen\"] = 56] = \"DarkOliveGreen\";\n    KnownColor[KnownColor[\"DarkOrange\"] = 57] = \"DarkOrange\";\n    KnownColor[KnownColor[\"DarkOrchid\"] = 58] = \"DarkOrchid\";\n    KnownColor[KnownColor[\"DarkRed\"] = 59] = \"DarkRed\";\n    KnownColor[KnownColor[\"DarkSalmon\"] = 60] = \"DarkSalmon\";\n    KnownColor[KnownColor[\"DarkSeaGreen\"] = 61] = \"DarkSeaGreen\";\n    KnownColor[KnownColor[\"DarkSlateBlue\"] = 62] = \"DarkSlateBlue\";\n    KnownColor[KnownColor[\"DarkSlateGray\"] = 63] = \"DarkSlateGray\";\n    KnownColor[KnownColor[\"DarkTurquoise\"] = 64] = \"DarkTurquoise\";\n    KnownColor[KnownColor[\"DarkViolet\"] = 65] = \"DarkViolet\";\n    KnownColor[KnownColor[\"DeepPink\"] = 66] = \"DeepPink\";\n    KnownColor[KnownColor[\"DeepSkyBlue\"] = 67] = \"DeepSkyBlue\";\n    KnownColor[KnownColor[\"DimGray\"] = 68] = \"DimGray\";\n    KnownColor[KnownColor[\"DodgerBlue\"] = 69] = \"DodgerBlue\";\n    KnownColor[KnownColor[\"Firebrick\"] = 70] = \"Firebrick\";\n    KnownColor[KnownColor[\"FloralWhite\"] = 71] = \"FloralWhite\";\n    KnownColor[KnownColor[\"ForestGreen\"] = 72] = \"ForestGreen\";\n    KnownColor[KnownColor[\"Fuchsia\"] = 73] = \"Fuchsia\";\n    KnownColor[KnownColor[\"Gainsboro\"] = 74] = \"Gainsboro\";\n    KnownColor[KnownColor[\"GhostWhite\"] = 75] = \"GhostWhite\";\n    KnownColor[KnownColor[\"Gold\"] = 76] = \"Gold\";\n    KnownColor[KnownColor[\"Goldenrod\"] = 77] = \"Goldenrod\";\n    KnownColor[KnownColor[\"Gray\"] = 78] = \"Gray\";\n    KnownColor[KnownColor[\"Green\"] = 79] = \"Green\";\n    KnownColor[KnownColor[\"GreenYellow\"] = 80] = \"GreenYellow\";\n    KnownColor[KnownColor[\"Honeydew\"] = 81] = \"Honeydew\";\n    KnownColor[KnownColor[\"HotPink\"] = 82] = \"HotPink\";\n    KnownColor[KnownColor[\"IndianRed\"] = 83] = \"IndianRed\";\n    KnownColor[KnownColor[\"Indigo\"] = 84] = \"Indigo\";\n    KnownColor[KnownColor[\"Ivory\"] = 85] = \"Ivory\";\n    KnownColor[KnownColor[\"Khaki\"] = 86] = \"Khaki\";\n    KnownColor[KnownColor[\"Lavender\"] = 87] = \"Lavender\";\n    KnownColor[KnownColor[\"LavenderBlush\"] = 88] = \"LavenderBlush\";\n    KnownColor[KnownColor[\"LawnGreen\"] = 89] = \"LawnGreen\";\n    KnownColor[KnownColor[\"LemonChiffon\"] = 90] = \"LemonChiffon\";\n    KnownColor[KnownColor[\"LightBlue\"] = 91] = \"LightBlue\";\n    KnownColor[KnownColor[\"LightCoral\"] = 92] = \"LightCoral\";\n    KnownColor[KnownColor[\"LightCyan\"] = 93] = \"LightCyan\";\n    KnownColor[KnownColor[\"LightGoldenrodYellow\"] = 94] = \"LightGoldenrodYellow\";\n    KnownColor[KnownColor[\"LightGray\"] = 95] = \"LightGray\";\n    KnownColor[KnownColor[\"LightGreen\"] = 96] = \"LightGreen\";\n    KnownColor[KnownColor[\"LightPink\"] = 97] = \"LightPink\";\n    KnownColor[KnownColor[\"LightSalmon\"] = 98] = \"LightSalmon\";\n    KnownColor[KnownColor[\"LightSeaGreen\"] = 99] = \"LightSeaGreen\";\n    KnownColor[KnownColor[\"LightSkyBlue\"] = 100] = \"LightSkyBlue\";\n    KnownColor[KnownColor[\"LightSlateGray\"] = 101] = \"LightSlateGray\";\n    KnownColor[KnownColor[\"LightSteelBlue\"] = 102] = \"LightSteelBlue\";\n    KnownColor[KnownColor[\"LightYellow\"] = 103] = \"LightYellow\";\n    KnownColor[KnownColor[\"Lime\"] = 104] = \"Lime\";\n    KnownColor[KnownColor[\"LimeGreen\"] = 105] = \"LimeGreen\";\n    KnownColor[KnownColor[\"Linen\"] = 106] = \"Linen\";\n    KnownColor[KnownColor[\"Magenta\"] = 107] = \"Magenta\";\n    KnownColor[KnownColor[\"Maroon\"] = 108] = \"Maroon\";\n    KnownColor[KnownColor[\"MediumAquamarine\"] = 109] = \"MediumAquamarine\";\n    KnownColor[KnownColor[\"MediumBlue\"] = 110] = \"MediumBlue\";\n    KnownColor[KnownColor[\"MediumOrchid\"] = 111] = \"MediumOrchid\";\n    KnownColor[KnownColor[\"MediumPurple\"] = 112] = \"MediumPurple\";\n    KnownColor[KnownColor[\"MediumSeaGreen\"] = 113] = \"MediumSeaGreen\";\n    KnownColor[KnownColor[\"MediumSlateBlue\"] = 114] = \"MediumSlateBlue\";\n    KnownColor[KnownColor[\"MediumSpringGreen\"] = 115] = \"MediumSpringGreen\";\n    KnownColor[KnownColor[\"MediumTurquoise\"] = 116] = \"MediumTurquoise\";\n    KnownColor[KnownColor[\"MediumVioletRed\"] = 117] = \"MediumVioletRed\";\n    KnownColor[KnownColor[\"MidnightBlue\"] = 118] = \"MidnightBlue\";\n    KnownColor[KnownColor[\"MintCream\"] = 119] = \"MintCream\";\n    KnownColor[KnownColor[\"MistyRose\"] = 120] = \"MistyRose\";\n    KnownColor[KnownColor[\"Moccasin\"] = 121] = \"Moccasin\";\n    KnownColor[KnownColor[\"NavajoWhite\"] = 122] = \"NavajoWhite\";\n    KnownColor[KnownColor[\"Navy\"] = 123] = \"Navy\";\n    KnownColor[KnownColor[\"OldLace\"] = 124] = \"OldLace\";\n    KnownColor[KnownColor[\"Olive\"] = 125] = \"Olive\";\n    KnownColor[KnownColor[\"OliveDrab\"] = 126] = \"OliveDrab\";\n    KnownColor[KnownColor[\"Orange\"] = 127] = \"Orange\";\n    KnownColor[KnownColor[\"OrangeRed\"] = 128] = \"OrangeRed\";\n    KnownColor[KnownColor[\"Orchid\"] = 129] = \"Orchid\";\n    KnownColor[KnownColor[\"PaleGoldenrod\"] = 130] = \"PaleGoldenrod\";\n    KnownColor[KnownColor[\"PaleGreen\"] = 131] = \"PaleGreen\";\n    KnownColor[KnownColor[\"PaleTurquoise\"] = 132] = \"PaleTurquoise\";\n    KnownColor[KnownColor[\"PaleVioletRed\"] = 133] = \"PaleVioletRed\";\n    KnownColor[KnownColor[\"PapayaWhip\"] = 134] = \"PapayaWhip\";\n    KnownColor[KnownColor[\"PeachPuff\"] = 135] = \"PeachPuff\";\n    KnownColor[KnownColor[\"Peru\"] = 136] = \"Peru\";\n    KnownColor[KnownColor[\"Pink\"] = 137] = \"Pink\";\n    KnownColor[KnownColor[\"Plum\"] = 138] = \"Plum\";\n    KnownColor[KnownColor[\"PowderBlue\"] = 139] = \"PowderBlue\";\n    KnownColor[KnownColor[\"Purple\"] = 140] = \"Purple\";\n    KnownColor[KnownColor[\"Red\"] = 141] = \"Red\";\n    KnownColor[KnownColor[\"RosyBrown\"] = 142] = \"RosyBrown\";\n    KnownColor[KnownColor[\"RoyalBlue\"] = 143] = \"RoyalBlue\";\n    KnownColor[KnownColor[\"SaddleBrown\"] = 144] = \"SaddleBrown\";\n    KnownColor[KnownColor[\"Salmon\"] = 145] = \"Salmon\";\n    KnownColor[KnownColor[\"SandyBrown\"] = 146] = \"SandyBrown\";\n    KnownColor[KnownColor[\"SeaGreen\"] = 147] = \"SeaGreen\";\n    KnownColor[KnownColor[\"SeaShell\"] = 148] = \"SeaShell\";\n    KnownColor[KnownColor[\"Sienna\"] = 149] = \"Sienna\";\n    KnownColor[KnownColor[\"Silver\"] = 150] = \"Silver\";\n    KnownColor[KnownColor[\"SkyBlue\"] = 151] = \"SkyBlue\";\n    KnownColor[KnownColor[\"SlateBlue\"] = 152] = \"SlateBlue\";\n    KnownColor[KnownColor[\"SlateGray\"] = 153] = \"SlateGray\";\n    KnownColor[KnownColor[\"Snow\"] = 154] = \"Snow\";\n    KnownColor[KnownColor[\"SpringGreen\"] = 155] = \"SpringGreen\";\n    KnownColor[KnownColor[\"SteelBlue\"] = 156] = \"SteelBlue\";\n    KnownColor[KnownColor[\"Tan\"] = 157] = \"Tan\";\n    KnownColor[KnownColor[\"Teal\"] = 158] = \"Teal\";\n    KnownColor[KnownColor[\"Thistle\"] = 159] = \"Thistle\";\n    KnownColor[KnownColor[\"Tomato\"] = 160] = \"Tomato\";\n    KnownColor[KnownColor[\"Turquoise\"] = 161] = \"Turquoise\";\n    KnownColor[KnownColor[\"Violet\"] = 162] = \"Violet\";\n    KnownColor[KnownColor[\"Wheat\"] = 163] = \"Wheat\";\n    KnownColor[KnownColor[\"White\"] = 164] = \"White\";\n    KnownColor[KnownColor[\"WhiteSmoke\"] = 165] = \"WhiteSmoke\";\n    KnownColor[KnownColor[\"Yellow\"] = 166] = \"Yellow\";\n    KnownColor[KnownColor[\"YellowGreen\"] = 167] = \"YellowGreen\";\n    KnownColor[KnownColor[\"ButtonFace\"] = 168] = \"ButtonFace\";\n    KnownColor[KnownColor[\"ButtonHighlight\"] = 169] = \"ButtonHighlight\";\n    KnownColor[KnownColor[\"ButtonShadow\"] = 170] = \"ButtonShadow\";\n    KnownColor[KnownColor[\"GradientActiveCaption\"] = 171] = \"GradientActiveCaption\";\n    KnownColor[KnownColor[\"GradientInactiveCaption\"] = 172] = \"GradientInactiveCaption\";\n    KnownColor[KnownColor[\"MenuBar\"] = 173] = \"MenuBar\";\n    KnownColor[KnownColor[\"MenuHighlight\"] = 174] = \"MenuHighlight\";\n})(KnownColor || (KnownColor = {}));\n","import { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nvar PdfFunction = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfFunction` class.\n     * @public\n     */\n    function PdfFunction(dictionary) {\n        //Field\n        /**\n         * Internal variable to store dictionary.\n         * @private\n         */\n        this.mDictionary = null;\n        /**\n         * Local variable to store the dictionary properties.\n         * @private\n         */\n        this.mDictionaryProperties = new DictionaryProperties();\n        this.mDictionary = dictionary;\n    }\n    Object.defineProperty(PdfFunction.prototype, \"domain\", {\n        //Properties\n        /**\n         * Gets or sets the domain of the function.\n         * @public\n         */\n        get: function () {\n            var domain = this.mDictionary.items.getValue(this.mDictionaryProperties.domain);\n            return domain;\n        },\n        set: function (value) {\n            this.mDictionary.items.setValue(this.mDictionaryProperties.domain, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFunction.prototype, \"range\", {\n        /**\n         * Gets or sets the range.\n         * @public\n         */\n        get: function () {\n            var range = (this.mDictionary.items.getValue(this.mDictionaryProperties.range));\n            return range;\n        },\n        set: function (value) {\n            this.mDictionary.items.setValue(this.mDictionaryProperties.range, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFunction.prototype, \"dictionary\", {\n        /**\n         * Gets the dictionary.\n         */\n        get: function () {\n            return this.mDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFunction.prototype, \"element\", {\n        //IPdfWrapper Members\n        /**\n         * Gets the element.\n         */\n        get: function () {\n            return this.mDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFunction;\n}());\nexport { PdfFunction };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSampledFunction.ts class for EJ2-PDF\n * Implements PDF Sampled Function.\n */\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfFunction } from './pdf-function';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { PdfNumber } from './../../primitives/pdf-number';\nvar PdfSampledFunction = /** @class */ (function (_super) {\n    __extends(PdfSampledFunction, _super);\n    /**\n     * Initializes a new instance of the `PdfSampledFunction` class.\n     * @public\n     */\n    function PdfSampledFunction(domain, range, sizes, samples) {\n        var _this = _super.call(this, new PdfStream()) || this;\n        if (typeof domain === 'undefined') {\n            _this.dictionary.items.setValue(_this.mDictionaryProperties.functionType, new PdfNumber(0));\n        }\n        else {\n            _this.dictionary.items.setValue(_this.mDictionaryProperties.functionType, new PdfNumber(0));\n            _this.checkParams(domain, range, sizes, samples);\n            _this.setDomainAndRange(domain, range);\n            _this.setSizeAndValues(sizes, samples);\n        }\n        return _this;\n    }\n    // Helper methods\n    /**\n     * Checks the input parameters.\n     */\n    PdfSampledFunction.prototype.checkParams = function (domain, range, sizes, samples) {\n        var rLength = range.length;\n        var dLength = domain.length;\n        var sLength = samples.length;\n        var frameLength = (rLength * (dLength / 4));\n    };\n    /**\n     * Sets the domain and range.\n     */\n    PdfSampledFunction.prototype.setDomainAndRange = function (domain, range) {\n        this.domain = new PdfArray(domain);\n        this.range = new PdfArray(range);\n    };\n    /**\n     * Sets the size and values.\n     */\n    PdfSampledFunction.prototype.setSizeAndValues = function (sizes, samples) {\n        var s = (this.dictionary);\n        this.dictionary.items.setValue(this.mDictionaryProperties.size, new PdfArray(sizes));\n        this.dictionary.items.setValue(this.mDictionaryProperties.bitsPerSample, new PdfNumber(8));\n        s.writeBytes(samples);\n    };\n    return PdfSampledFunction;\n}(PdfFunction));\nexport { PdfSampledFunction };\n","/**\n * PdfBrushes.ts class for EJ2-PDF\n */\nimport { PdfColor } from './../pdf-color';\nimport { Dictionary } from './../../collections/dictionary';\nimport { KnownColor } from './enum';\nimport { PdfSolidBrush } from './pdf-solid-brush';\n/**\n * `PdfBrushes` class provides objects used to fill the interiors of graphical shapes such as rectangles,\n * ellipses, pies, polygons, and paths.\n * @private\n */\nvar PdfBrushes = /** @class */ (function () {\n    function PdfBrushes() {\n    }\n    Object.defineProperty(PdfBrushes, \"AliceBlue\", {\n        //Static Properties\n        /**\n         * Gets the AliceBlue brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.AliceBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.AliceBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.AliceBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"AntiqueWhite\", {\n        /**\n         * Gets the antique white brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.AntiqueWhite)) {\n                brush = (this.sBrushes.getValue(KnownColor.AntiqueWhite));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.AntiqueWhite);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Aqua\", {\n        /**\n         * Gets the Aqua default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Aqua)) {\n                brush = (this.sBrushes.getValue(KnownColor.Aqua));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Aqua);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Aquamarine\", {\n        /**\n         * Gets the Aquamarine default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Aquamarine)) {\n                brush = (this.sBrushes.getValue(KnownColor.Aquamarine));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Aquamarine);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Azure\", {\n        /**\n         * Gets the Azure default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Azure)) {\n                brush = (this.sBrushes.getValue(KnownColor.Azure));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Azure);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Beige\", {\n        /**\n         * Gets the Beige default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Beige)) {\n                brush = (this.sBrushes.getValue(KnownColor.Beige));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Beige);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Bisque\", {\n        /**\n         * Gets the Bisque default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Bisque)) {\n                brush = (this.sBrushes.getValue(KnownColor.Bisque));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Bisque);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Black\", {\n        /**\n         * Gets the Black default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Black)) {\n                brush = (this.sBrushes.getValue(KnownColor.Black));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Black);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"BlanchedAlmond\", {\n        /**\n         * Gets the BlanchedAlmond default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.BlanchedAlmond)) {\n                brush = (this.sBrushes.getValue(KnownColor.BlanchedAlmond));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.BlanchedAlmond);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Blue\", {\n        /**\n         * Gets the Blue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Blue)) {\n                brush = (this.sBrushes.getValue(KnownColor.Blue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Blue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"BlueViolet\", {\n        /**\n         * Gets the BlueViolet default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.BlueViolet)) {\n                brush = (this.sBrushes.getValue(KnownColor.BlueViolet));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.BlueViolet);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Brown\", {\n        /**\n         * Gets the Brown default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Brown)) {\n                brush = (this.sBrushes.getValue(KnownColor.Brown));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Brown);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"BurlyWood\", {\n        /**\n         * Gets the BurlyWood default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.BurlyWood)) {\n                brush = (this.sBrushes.getValue(KnownColor.BurlyWood));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.BurlyWood);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"CadetBlue\", {\n        /**\n         * Gets the CadetBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.CadetBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.CadetBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.CadetBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Chartreuse\", {\n        /**\n         * Gets the Chartreuse default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Chartreuse)) {\n                brush = (this.sBrushes.getValue(KnownColor.Chartreuse));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Chartreuse);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Chocolate\", {\n        /**\n         * Gets the Chocolate default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Chocolate)) {\n                brush = (this.sBrushes.getValue(KnownColor.Chocolate));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Chocolate);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Coral\", {\n        /**\n         * Gets the Coral default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Coral)) {\n                brush = (this.sBrushes.getValue(KnownColor.Coral));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Coral);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"CornflowerBlue\", {\n        /**\n         * Gets the CornflowerBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.CornflowerBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.CornflowerBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.CornflowerBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Cornsilk\", {\n        /**\n         * Gets the Corn silk default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Cornsilk)) {\n                brush = (this.sBrushes.getValue(KnownColor.Cornsilk));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Cornsilk);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Crimson\", {\n        /**\n         *  Gets the Crimson default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Crimson)) {\n                brush = (this.sBrushes.getValue(KnownColor.Crimson));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Crimson);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Cyan\", {\n        /**\n         * Gets the Cyan default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Cyan)) {\n                brush = (this.sBrushes.getValue(KnownColor.Cyan));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Cyan);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkBlue\", {\n        /**\n         * Gets the DarkBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkCyan\", {\n        /**\n         * Gets the DarkCyan default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkCyan)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkCyan));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkCyan);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkGoldenrod\", {\n        /**\n         * Gets the DarkGoldenrod default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkGoldenrod)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkGoldenrod));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkGoldenrod);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkGray\", {\n        /**\n         * Gets the DarkGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkGreen\", {\n        /**\n         * Gets the DarkGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkKhaki\", {\n        /**\n         * Gets the DarkKhaki default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkKhaki)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkKhaki));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkKhaki);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkMagenta\", {\n        /**\n         * Gets the DarkMagenta default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkMagenta)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkMagenta));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkMagenta);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkOliveGreen\", {\n        /**\n         * Gets the DarkOliveGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkOliveGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkOliveGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkOliveGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkOrange\", {\n        /**\n         * Gets the DarkOrange default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkOrange)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkOrange));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkOrange);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkOrchid\", {\n        /**\n         * Gets the DarkOrchid default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkOrchid)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkOrchid));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkOrchid);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkRed\", {\n        /**\n         * Gets the DarkRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkSalmon\", {\n        /**\n         * Gets the DarkSalmon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkSalmon)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkSalmon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkSalmon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkSeaGreen\", {\n        /**\n         * Gets the DarkSeaGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkSeaGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkSeaGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkSeaGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkSlateBlue\", {\n        /**\n         * Gets the DarkSlateBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkSlateBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkSlateBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkSlateBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkSlateGray\", {\n        /**\n         * Gets the DarkSlateGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkSlateGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkSlateGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkSlateGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkTurquoise\", {\n        /**\n         * Gets the DarkTurquoise default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkTurquoise)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkTurquoise));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkTurquoise);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkViolet\", {\n        /**\n         * Gets the DarkViolet default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkViolet)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkViolet));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkViolet);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DeepPink\", {\n        /**\n         * Gets the DeepPink default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DeepPink)) {\n                brush = (this.sBrushes.getValue(KnownColor.DeepPink));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DeepPink);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DeepSkyBlue\", {\n        /**\n         * Gets the DeepSkyBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DeepSkyBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.DeepSkyBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DeepSkyBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DimGray\", {\n        /**\n         * Gets the DimGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DimGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.DimGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DimGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DodgerBlue\", {\n        /**\n         * Gets the DodgerBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DodgerBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.DodgerBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DodgerBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Firebrick\", {\n        /**\n         * Gets the Firebrick default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Firebrick)) {\n                brush = (this.sBrushes.getValue(KnownColor.Firebrick));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Firebrick);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"FloralWhite\", {\n        /**\n         * Gets the FloralWhite default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.FloralWhite)) {\n                brush = (this.sBrushes.getValue(KnownColor.FloralWhite));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.FloralWhite);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"ForestGreen\", {\n        /**\n         * Gets the ForestGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.ForestGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.ForestGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.ForestGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Fuchsia\", {\n        /**\n         * Gets the Fuchsia default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Fuchsia)) {\n                brush = (this.sBrushes.getValue(KnownColor.Fuchsia));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Fuchsia);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Gainsboro\", {\n        /**\n         * Gets the Gainsborough default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Gainsboro)) {\n                brush = (this.sBrushes.getValue(KnownColor.Gainsboro));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Gainsboro);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"GhostWhite\", {\n        /**\n         * Gets the GhostWhite default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.GhostWhite)) {\n                brush = (this.sBrushes.getValue(KnownColor.GhostWhite));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.GhostWhite);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Gold\", {\n        /**\n         * Gets the Gold default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Gold)) {\n                brush = (this.sBrushes.getValue(KnownColor.Gold));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Gold);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Goldenrod\", {\n        /**\n         * Gets the Goldenrod default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Goldenrod)) {\n                brush = (this.sBrushes.getValue(KnownColor.Goldenrod));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Goldenrod);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Gray\", {\n        /**\n         * Gets the Gray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Gray)) {\n                brush = (this.sBrushes.getValue(KnownColor.Gray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Gray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Green\", {\n        /**\n         * Gets the Green default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Green)) {\n                brush = (this.sBrushes.getValue(KnownColor.Green));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Green);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"GreenYellow\", {\n        /**\n         * Gets the GreenYellow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.GreenYellow)) {\n                brush = (this.sBrushes.getValue(KnownColor.GreenYellow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.GreenYellow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Honeydew\", {\n        /**\n         * Gets the Honeydew default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Honeydew)) {\n                brush = (this.sBrushes.getValue(KnownColor.Honeydew));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Honeydew);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"HotPink\", {\n        /**\n         * Gets the HotPink default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.HotPink)) {\n                brush = (this.sBrushes.getValue(KnownColor.HotPink));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.HotPink);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"IndianRed\", {\n        /**\n         * Gets the IndianRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.IndianRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.IndianRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.IndianRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Indigo\", {\n        /**\n         * Gets the Indigo default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Indigo)) {\n                brush = (this.sBrushes.getValue(KnownColor.Indigo));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Indigo);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Ivory\", {\n        /**\n         * Gets the Ivory default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Ivory)) {\n                brush = (this.sBrushes.getValue(KnownColor.Ivory));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Ivory);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Khaki\", {\n        /**\n         * Gets the Khaki default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Khaki)) {\n                brush = (this.sBrushes.getValue(KnownColor.Khaki));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Khaki);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Lavender\", {\n        /**\n         * Gets the Lavender default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Lavender)) {\n                brush = (this.sBrushes.getValue(KnownColor.Lavender));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Lavender);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LavenderBlush\", {\n        /**\n         * Gets the LavenderBlush default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LavenderBlush)) {\n                brush = (this.sBrushes.getValue(KnownColor.LavenderBlush));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LavenderBlush);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LawnGreen\", {\n        /**\n         * Gets the LawnGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LawnGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.LawnGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LawnGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LemonChiffon\", {\n        /**\n         * Gets the LemonChiffon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LemonChiffon)) {\n                brush = (this.sBrushes.getValue(KnownColor.LemonChiffon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LemonChiffon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightBlue\", {\n        /**\n         * Gets the LightBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightCoral\", {\n        /**\n         * Gets the LightCoral default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightCoral)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightCoral));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightCoral);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightCyan\", {\n        /**\n         * Gets the LightCyan default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightCyan)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightCyan));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightCyan);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightGoldenrodYellow\", {\n        /**\n         * Gets the LightGoldenrodYellow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightGoldenrodYellow)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightGoldenrodYellow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightGoldenrodYellow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightGray\", {\n        /**\n         * Gets the LightGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightGreen\", {\n        /**\n         * Gets the LightGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightPink\", {\n        /**\n         * Gets the LightPink default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightPink)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightPink));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightPink);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSalmon\", {\n        /**\n         * Gets the LightSalmon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSalmon)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSalmon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSalmon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSeaGreen\", {\n        /**\n         * Gets the LightSeaGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSeaGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSeaGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSeaGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSkyBlue\", {\n        /**\n         * Gets the LightSkyBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSkyBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSkyBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSkyBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSlateGray\", {\n        /**\n         * Gets the LightSlateGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSlateGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSlateGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSlateGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSteelBlue\", {\n        /**\n         * Gets the LightSteelBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSteelBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSteelBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSteelBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightYellow\", {\n        /**\n         * Gets the LightYellow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightYellow)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightYellow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightYellow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Lime\", {\n        /**\n         * Gets the Lime default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Lime)) {\n                brush = (this.sBrushes.getValue(KnownColor.Lime));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Lime);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LimeGreen\", {\n        /**\n         * Gets the LimeGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LimeGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.LimeGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LimeGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Linen\", {\n        /**\n         * Gets the Linen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Linen)) {\n                brush = (this.sBrushes.getValue(KnownColor.Linen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Linen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Magenta\", {\n        /**\n         * Gets the Magenta default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Magenta)) {\n                brush = (this.sBrushes.getValue(KnownColor.Magenta));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Magenta);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Maroon\", {\n        /**\n         * Gets the Maroon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Maroon)) {\n                brush = (this.sBrushes.getValue(KnownColor.Maroon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Maroon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumAquamarine\", {\n        /**\n         * Gets the MediumAquamarine default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumAquamarine)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumAquamarine));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumAquamarine);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumBlue\", {\n        /**\n         * Gets the MediumBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumOrchid\", {\n        /**\n         * Gets the MediumOrchid default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumOrchid)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumOrchid));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumOrchid);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumPurple\", {\n        /**\n         * Gets the MediumPurple default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumPurple)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumPurple));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumPurple);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumSeaGreen\", {\n        /**\n         * Gets the MediumSeaGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumSeaGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumSeaGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumSeaGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumSlateBlue\", {\n        /**\n         * Gets the MediumSlateBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumSlateBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumSlateBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumSlateBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumSpringGreen\", {\n        /**\n         * Gets the MediumSpringGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumSpringGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumSpringGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumSpringGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumTurquoise\", {\n        /**\n         * Gets the MediumTurquoise default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumTurquoise)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumTurquoise));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumTurquoise);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumVioletRed\", {\n        /**\n         * Gets the MediumVioletRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumVioletRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumVioletRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumVioletRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MidnightBlue\", {\n        /**\n         * Gets the MidnightBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MidnightBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.MidnightBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MidnightBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MintCream\", {\n        /**\n         * Gets the MintCream default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MintCream)) {\n                brush = (this.sBrushes.getValue(KnownColor.MintCream));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MintCream);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MistyRose\", {\n        /**\n         * Gets the MistyRose default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MistyRose)) {\n                brush = (this.sBrushes.getValue(KnownColor.MistyRose));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MistyRose);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Moccasin\", {\n        /**\n         * Gets the Moccasin default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Moccasin)) {\n                brush = (this.sBrushes.getValue(KnownColor.Moccasin));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Moccasin);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"NavajoWhite\", {\n        /**\n         * Gets the NavajoWhite default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.NavajoWhite)) {\n                brush = (this.sBrushes.getValue(KnownColor.NavajoWhite));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.NavajoWhite);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Navy\", {\n        /**\n         * Gets the Navy default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Navy)) {\n                brush = (this.sBrushes.getValue(KnownColor.Navy));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Navy);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"OldLace\", {\n        /**\n         * Gets the OldLace default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.OldLace)) {\n                brush = (this.sBrushes.getValue(KnownColor.OldLace));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.OldLace);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Olive\", {\n        /**\n         * Gets the Olive default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Olive)) {\n                brush = (this.sBrushes.getValue(KnownColor.Olive));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Olive);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"OliveDrab\", {\n        /**\n         * Gets the OliveDrab default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.OliveDrab)) {\n                brush = (this.sBrushes.getValue(KnownColor.OliveDrab));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.OliveDrab);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Orange\", {\n        /**\n         * Gets the Orange default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Orange)) {\n                brush = (this.sBrushes.getValue(KnownColor.Orange));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Orange);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"OrangeRed\", {\n        /**\n         * Gets the OrangeRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.OrangeRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.OrangeRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.OrangeRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Orchid\", {\n        /**\n         * Gets the Orchid default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Orchid)) {\n                brush = (this.sBrushes.getValue(KnownColor.Orchid));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Orchid);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PaleGoldenrod\", {\n        /**\n         * Gets the PaleGoldenrod default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PaleGoldenrod)) {\n                brush = (this.sBrushes.getValue(KnownColor.PaleGoldenrod));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PaleGoldenrod);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PaleGreen\", {\n        /**\n         * Gets the PaleGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PaleGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.PaleGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PaleGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PaleTurquoise\", {\n        /**\n         * Gets the PaleTurquoise default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PaleTurquoise)) {\n                brush = (this.sBrushes.getValue(KnownColor.PaleTurquoise));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PaleTurquoise);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PaleVioletRed\", {\n        /**\n         * Gets the PaleVioletRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PaleVioletRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.PaleVioletRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PaleVioletRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PapayaWhip\", {\n        /**\n         * Gets the PapayaWhip default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PapayaWhip)) {\n                brush = (this.sBrushes.getValue(KnownColor.PapayaWhip));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PapayaWhip);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PeachPuff\", {\n        /**\n         * Gets the PeachPuff default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PeachPuff)) {\n                brush = (this.sBrushes.getValue(KnownColor.PeachPuff));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PeachPuff);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Peru\", {\n        /**\n         * Gets the Peru default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Peru)) {\n                brush = (this.sBrushes.getValue(KnownColor.Peru));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Peru);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Pink\", {\n        /**\n         * Gets the Pink default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Pink)) {\n                brush = (this.sBrushes.getValue(KnownColor.Pink));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Pink);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Plum\", {\n        /**\n         * Gets the Plum default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Plum)) {\n                brush = (this.sBrushes.getValue(KnownColor.Plum));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Plum);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PowderBlue\", {\n        /**\n         * Gets the PowderBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PowderBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.PowderBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PowderBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Purple\", {\n        /**\n         * Gets the Purple default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Purple)) {\n                brush = (this.sBrushes.getValue(KnownColor.Purple));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Purple);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Red\", {\n        /**\n         * Gets the Red default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Red)) {\n                brush = (this.sBrushes.getValue(KnownColor.Red));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Red);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"RosyBrown\", {\n        /**\n         * Gets the RosyBrown default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.RosyBrown)) {\n                brush = (this.sBrushes.getValue(KnownColor.RosyBrown));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.RosyBrown);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"RoyalBlue\", {\n        /**\n         * Gets the RoyalBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.RoyalBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.RoyalBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.RoyalBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SaddleBrown\", {\n        /**\n         * Gets the SaddleBrown default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SaddleBrown)) {\n                brush = (this.sBrushes.getValue(KnownColor.SaddleBrown));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SaddleBrown);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Salmon\", {\n        /**\n         * Gets the Salmon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Salmon)) {\n                brush = (this.sBrushes.getValue(KnownColor.Salmon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Salmon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SandyBrown\", {\n        /**\n         * Gets the SandyBrown default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SandyBrown)) {\n                brush = (this.sBrushes.getValue(KnownColor.SandyBrown));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SandyBrown);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SeaGreen\", {\n        /**\n         * Gets the SeaGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SeaGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.SeaGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SeaGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SeaShell\", {\n        /**\n         * Gets the SeaShell default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SeaShell)) {\n                brush = (this.sBrushes.getValue(KnownColor.SeaShell));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SeaShell);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Sienna\", {\n        /**\n         * Gets the Sienna default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Sienna)) {\n                brush = (this.sBrushes.getValue(KnownColor.Sienna));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Sienna);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Silver\", {\n        /**\n         * Gets the Silver default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Silver)) {\n                brush = (this.sBrushes.getValue(KnownColor.Silver));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Silver);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SkyBlue\", {\n        /**\n         * Gets the SkyBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SkyBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.SkyBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SkyBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SlateBlue\", {\n        /**\n         * Gets the SlateBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SlateBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.SlateBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SlateBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SlateGray\", {\n        /**\n         * Gets the SlateGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SlateGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.SlateGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SlateGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Snow\", {\n        /**\n         * Gets the Snow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Snow)) {\n                brush = (this.sBrushes.getValue(KnownColor.Snow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Snow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SpringGreen\", {\n        /**\n         * Gets the SpringGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SpringGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.SpringGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SpringGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SteelBlue\", {\n        /**\n         * Gets the SteelBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SteelBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.SteelBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SteelBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Tan\", {\n        /**\n         * Gets the Tan default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Tan)) {\n                brush = (this.sBrushes.getValue(KnownColor.Tan));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Tan);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Teal\", {\n        /**\n         * Gets the Teal default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Teal)) {\n                brush = (this.sBrushes.getValue(KnownColor.Teal));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Teal);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Thistle\", {\n        /**\n         * Gets the Thistle default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Thistle)) {\n                brush = (this.sBrushes.getValue(KnownColor.Thistle));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Thistle);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Tomato\", {\n        /**\n         * Gets the Tomato default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Tomato)) {\n                brush = (this.sBrushes.getValue(KnownColor.Tomato));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Tomato);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Transparent\", {\n        /**\n         * Gets the Transparent default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Transparent)) {\n                brush = (this.sBrushes.getValue(KnownColor.Transparent));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Transparent);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Turquoise\", {\n        /**\n         * Gets the Turquoise default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Turquoise)) {\n                brush = (this.sBrushes.getValue(KnownColor.Turquoise));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Turquoise);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Violet\", {\n        /**\n         * Gets the Violet default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Violet)) {\n                brush = (this.sBrushes.getValue(KnownColor.Violet));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Violet);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Wheat\", {\n        /**\n         * Gets the Wheat default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Wheat)) {\n                brush = (this.sBrushes.getValue(KnownColor.Wheat));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Wheat);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"White\", {\n        /**\n         * Gets the White default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.White)) {\n                brush = (this.sBrushes.getValue(KnownColor.White));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.White);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"WhiteSmoke\", {\n        /**\n         * Gets the WhiteSmoke default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.WhiteSmoke)) {\n                brush = (this.sBrushes.getValue(KnownColor.WhiteSmoke));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.WhiteSmoke);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Yellow\", {\n        /**\n         * Gets the Yellow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Yellow)) {\n                brush = (this.sBrushes.getValue(KnownColor.Yellow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Yellow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"YellowGreen\", {\n        /**\n         * Gets the YellowGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.YellowGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.YellowGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.YellowGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get the brush.\n     */\n    PdfBrushes.getBrush = function (colorName) {\n        var pdfColor = this.getColorValue(colorName);\n        var brush = new PdfSolidBrush(pdfColor);\n        this.sBrushes.setValue(colorName, brush);\n        return brush;\n    };\n    /**\n     * Get the color value.\n     * @param colorName The KnownColor name.\n     */\n    /* tslint:disable */\n    PdfBrushes.getColorValue = function (colorName) {\n        var color = new PdfColor();\n        switch (colorName) {\n            case KnownColor.Transparent:\n                color = new PdfColor(0, 255, 255, 255);\n                break;\n            case KnownColor.AliceBlue:\n                color = new PdfColor(255, 240, 248, 255);\n                break;\n            case KnownColor.AntiqueWhite:\n                color = new PdfColor(255, 250, 235, 215);\n                break;\n            case KnownColor.Aqua:\n                color = new PdfColor(255, 0, 255, 255);\n                break;\n            case KnownColor.Aquamarine:\n                color = new PdfColor(255, 127, 255, 212);\n                break;\n            case KnownColor.Azure:\n                color = new PdfColor(255, 240, 255, 255);\n                break;\n            case KnownColor.Beige:\n                color = new PdfColor(255, 245, 245, 220);\n                break;\n            case KnownColor.Bisque:\n                color = new PdfColor(255, 255, 228, 196);\n                break;\n            case KnownColor.Black:\n                color = new PdfColor(255, 0, 0, 0);\n                break;\n            case KnownColor.BlanchedAlmond:\n                color = new PdfColor(255, 255, 235, 205);\n                break;\n            case KnownColor.Blue:\n                color = new PdfColor(255, 0, 0, 255);\n                break;\n            case KnownColor.BlueViolet:\n                color = new PdfColor(255, 138, 43, 226);\n                break;\n            case KnownColor.Brown:\n                color = new PdfColor(255, 165, 42, 42);\n                break;\n            case KnownColor.BurlyWood:\n                color = new PdfColor(255, 222, 184, 135);\n                break;\n            case KnownColor.CadetBlue:\n                color = new PdfColor(255, 95, 158, 160);\n                break;\n            case KnownColor.Chartreuse:\n                color = new PdfColor(255, 127, 255, 0);\n                break;\n            case KnownColor.Chocolate:\n                color = new PdfColor(255, 210, 105, 30);\n                break;\n            case KnownColor.Coral:\n                color = new PdfColor(255, 255, 127, 80);\n                break;\n            case KnownColor.CornflowerBlue:\n                color = new PdfColor(255, 100, 149, 237);\n                break;\n            case KnownColor.Cornsilk:\n                color = new PdfColor(255, 255, 248, 220);\n                break;\n            case KnownColor.Crimson:\n                color = new PdfColor(255, 220, 20, 60);\n                break;\n            case KnownColor.Cyan:\n                color = new PdfColor(255, 0, 255, 255);\n                break;\n            case KnownColor.DarkBlue:\n                color = new PdfColor(255, 0, 0, 139);\n                break;\n            case KnownColor.DarkCyan:\n                color = new PdfColor(255, 0, 139, 139);\n                break;\n            case KnownColor.DarkGoldenrod:\n                color = new PdfColor(255, 184, 134, 11);\n                break;\n            case KnownColor.DarkGray:\n                color = new PdfColor(255, 169, 169, 169);\n                break;\n            case KnownColor.DarkGreen:\n                color = new PdfColor(255, 0, 100, 0);\n                break;\n            case KnownColor.DarkKhaki:\n                color = new PdfColor(255, 189, 183, 107);\n                break;\n            case KnownColor.DarkMagenta:\n                color = new PdfColor(255, 139, 0, 139);\n                break;\n            case KnownColor.DarkOliveGreen:\n                color = new PdfColor(255, 85, 107, 47);\n                break;\n            case KnownColor.DarkOrange:\n                color = new PdfColor(255, 255, 140, 0);\n                break;\n            case KnownColor.DarkOrchid:\n                color = new PdfColor(255, 153, 50, 204);\n                break;\n            case KnownColor.DarkRed:\n                color = new PdfColor(255, 139, 0, 0);\n                break;\n            case KnownColor.DarkSalmon:\n                color = new PdfColor(255, 233, 150, 122);\n                break;\n            case KnownColor.DarkSeaGreen:\n                color = new PdfColor(255, 143, 188, 139);\n                break;\n            case KnownColor.DarkSlateBlue:\n                color = new PdfColor(255, 72, 61, 139);\n                break;\n            case KnownColor.DarkSlateGray:\n                color = new PdfColor(255, 47, 79, 79);\n                break;\n            case KnownColor.DarkTurquoise:\n                color = new PdfColor(255, 0, 206, 209);\n                break;\n            case KnownColor.DarkViolet:\n                color = new PdfColor(255, 148, 0, 211);\n                break;\n            case KnownColor.DeepPink:\n                color = new PdfColor(255, 255, 20, 147);\n                break;\n            case KnownColor.DeepSkyBlue:\n                color = new PdfColor(255, 0, 191, 255);\n                break;\n            case KnownColor.DimGray:\n                color = new PdfColor(255, 105, 105, 105);\n                break;\n            case KnownColor.DodgerBlue:\n                color = new PdfColor(255, 30, 144, 255);\n                break;\n            case KnownColor.Firebrick:\n                color = new PdfColor(255, 178, 34, 34);\n                break;\n            case KnownColor.FloralWhite:\n                color = new PdfColor(255, 255, 250, 240);\n                break;\n            case KnownColor.ForestGreen:\n                color = new PdfColor(255, 34, 139, 34);\n                break;\n            case KnownColor.Fuchsia:\n                color = new PdfColor(255, 255, 0, 255);\n                break;\n            case KnownColor.Gainsboro:\n                color = new PdfColor(255, 220, 220, 220);\n                break;\n            case KnownColor.GhostWhite:\n                color = new PdfColor(255, 248, 248, 255);\n                break;\n            case KnownColor.Gold:\n                color = new PdfColor(255, 255, 215, 0);\n                break;\n            case KnownColor.Goldenrod:\n                color = new PdfColor(255, 218, 165, 32);\n                break;\n            case KnownColor.Gray:\n                color = new PdfColor(255, 128, 128, 128);\n                break;\n            case KnownColor.Green:\n                color = new PdfColor(255, 0, 128, 0);\n                break;\n            case KnownColor.GreenYellow:\n                color = new PdfColor(255, 173, 255, 47);\n                break;\n            case KnownColor.Honeydew:\n                color = new PdfColor(255, 240, 255, 240);\n                break;\n            case KnownColor.HotPink:\n                color = new PdfColor(255, 255, 105, 180);\n                break;\n            case KnownColor.IndianRed:\n                color = new PdfColor(255, 205, 92, 92);\n                break;\n            case KnownColor.Indigo:\n                color = new PdfColor(255, 75, 0, 130);\n                break;\n            case KnownColor.Ivory:\n                color = new PdfColor(255, 255, 255, 240);\n                break;\n            case KnownColor.Khaki:\n                color = new PdfColor(255, 240, 230, 140);\n                break;\n            case KnownColor.Lavender:\n                color = new PdfColor(255, 230, 230, 250);\n                break;\n            case KnownColor.LavenderBlush:\n                color = new PdfColor(255, 255, 240, 245);\n                break;\n            case KnownColor.LawnGreen:\n                color = new PdfColor(255, 124, 252, 0);\n                break;\n            case KnownColor.LemonChiffon:\n                color = new PdfColor(255, 255, 250, 205);\n                break;\n            case KnownColor.LightBlue:\n                color = new PdfColor(255, 173, 216, 230);\n                break;\n            case KnownColor.LightCoral:\n                color = new PdfColor(255, 240, 128, 128);\n                break;\n            case KnownColor.LightCyan:\n                color = new PdfColor(255, 224, 255, 255);\n                break;\n            case KnownColor.LightGoldenrodYellow:\n                color = new PdfColor(255, 250, 250, 210);\n                break;\n            case KnownColor.LightGreen:\n                color = new PdfColor(255, 144, 238, 144);\n                break;\n            case KnownColor.LightGray:\n                color = new PdfColor(255, 211, 211, 211);\n                break;\n            case KnownColor.LightPink:\n                color = new PdfColor(255, 255, 182, 193);\n                break;\n            case KnownColor.LightSalmon:\n                color = new PdfColor(255, 255, 160, 122);\n                break;\n            case KnownColor.LightSeaGreen:\n                color = new PdfColor(255, 32, 178, 170);\n                break;\n            case KnownColor.LightSkyBlue:\n                color = new PdfColor(255, 135, 206, 250);\n                break;\n            case KnownColor.LightSlateGray:\n                color = new PdfColor(255, 119, 136, 153);\n                break;\n            case KnownColor.LightSteelBlue:\n                color = new PdfColor(255, 176, 196, 222);\n                break;\n            case KnownColor.LightYellow:\n                color = new PdfColor(255, 255, 255, 224);\n                break;\n            case KnownColor.Lime:\n                color = new PdfColor(255, 0, 255, 0);\n                break;\n            case KnownColor.LimeGreen:\n                color = new PdfColor(255, 50, 205, 50);\n                break;\n            case KnownColor.Linen:\n                color = new PdfColor(255, 250, 240, 230);\n                break;\n            case KnownColor.Magenta:\n                color = new PdfColor(255, 255, 0, 255);\n                break;\n            case KnownColor.Maroon:\n                color = new PdfColor(255, 128, 0, 0);\n                break;\n            case KnownColor.MediumAquamarine:\n                color = new PdfColor(255, 102, 205, 170);\n                break;\n            case KnownColor.MediumBlue:\n                color = new PdfColor(255, 0, 0, 205);\n                break;\n            case KnownColor.MediumOrchid:\n                color = new PdfColor(255, 186, 85, 211);\n                break;\n            case KnownColor.MediumPurple:\n                color = new PdfColor(255, 147, 112, 219);\n                break;\n            case KnownColor.MediumSeaGreen:\n                color = new PdfColor(255, 60, 179, 113);\n                break;\n            case KnownColor.MediumSlateBlue:\n                color = new PdfColor(255, 123, 104, 238);\n                break;\n            case KnownColor.MediumSpringGreen:\n                color = new PdfColor(255, 0, 250, 154);\n                break;\n            case KnownColor.MediumTurquoise:\n                color = new PdfColor(255, 72, 209, 204);\n                break;\n            case KnownColor.MediumVioletRed:\n                color = new PdfColor(255, 199, 21, 133);\n                break;\n            case KnownColor.MidnightBlue:\n                color = new PdfColor(255, 25, 25, 112);\n                break;\n            case KnownColor.MintCream:\n                color = new PdfColor(255, 245, 255, 250);\n                break;\n            case KnownColor.MistyRose:\n                color = new PdfColor(255, 255, 228, 225);\n                break;\n            case KnownColor.Moccasin:\n                color = new PdfColor(255, 255, 228, 181);\n                break;\n            case KnownColor.NavajoWhite:\n                color = new PdfColor(255, 255, 222, 173);\n                break;\n            case KnownColor.Navy:\n                color = new PdfColor(255, 0, 0, 128);\n                break;\n            case KnownColor.OldLace:\n                color = new PdfColor(255, 253, 245, 230);\n                break;\n            case KnownColor.Olive:\n                color = new PdfColor(255, 128, 128, 0);\n                break;\n            case KnownColor.OliveDrab:\n                color = new PdfColor(255, 107, 142, 35);\n                break;\n            case KnownColor.Orange:\n                color = new PdfColor(255, 255, 165, 0);\n                break;\n            case KnownColor.OrangeRed:\n                color = new PdfColor(255, 255, 69, 0);\n                break;\n            case KnownColor.Orchid:\n                color = new PdfColor(255, 218, 112, 214);\n                break;\n            case KnownColor.PaleGoldenrod:\n                color = new PdfColor(255, 238, 232, 170);\n                break;\n            case KnownColor.PaleGreen:\n                color = new PdfColor(255, 152, 251, 152);\n                break;\n            case KnownColor.PaleTurquoise:\n                color = new PdfColor(255, 175, 238, 238);\n                break;\n            case KnownColor.PaleVioletRed:\n                color = new PdfColor(255, 219, 112, 147);\n                break;\n            case KnownColor.PapayaWhip:\n                color = new PdfColor(255, 255, 239, 213);\n                break;\n            case KnownColor.PeachPuff:\n                color = new PdfColor(255, 255, 218, 185);\n                break;\n            case KnownColor.Peru:\n                color = new PdfColor(255, 205, 133, 63);\n                break;\n            case KnownColor.Pink:\n                color = new PdfColor(255, 255, 192, 203);\n                break;\n            case KnownColor.Plum:\n                color = new PdfColor(255, 221, 160, 221);\n                break;\n            case KnownColor.PowderBlue:\n                color = new PdfColor(255, 176, 224, 230);\n                break;\n            case KnownColor.Purple:\n                color = new PdfColor(255, 128, 0, 128);\n                break;\n            case KnownColor.Red:\n                color = new PdfColor(255, 255, 0, 0);\n                break;\n            case KnownColor.RosyBrown:\n                color = new PdfColor(255, 188, 143, 143);\n                break;\n            case KnownColor.RoyalBlue:\n                color = new PdfColor(255, 65, 105, 225);\n                break;\n            case KnownColor.SaddleBrown:\n                color = new PdfColor(255, 139, 69, 19);\n                break;\n            case KnownColor.Salmon:\n                color = new PdfColor(255, 250, 128, 114);\n                break;\n            case KnownColor.SandyBrown:\n                color = new PdfColor(255, 244, 164, 96);\n                break;\n            case KnownColor.SeaGreen:\n                color = new PdfColor(255, 46, 139, 87);\n                break;\n            case KnownColor.SeaShell:\n                color = new PdfColor(255, 255, 245, 238);\n                break;\n            case KnownColor.Sienna:\n                color = new PdfColor(255, 160, 82, 45);\n                break;\n            case KnownColor.Silver:\n                color = new PdfColor(255, 192, 192, 192);\n                break;\n            case KnownColor.SkyBlue:\n                color = new PdfColor(255, 135, 206, 235);\n                break;\n            case KnownColor.SlateBlue:\n                color = new PdfColor(255, 106, 90, 205);\n                break;\n            case KnownColor.SlateGray:\n                color = new PdfColor(255, 112, 128, 144);\n                break;\n            case KnownColor.Snow:\n                color = new PdfColor(255, 255, 250, 250);\n                break;\n            case KnownColor.SpringGreen:\n                color = new PdfColor(255, 0, 255, 127);\n                break;\n            case KnownColor.SteelBlue:\n                color = new PdfColor(255, 70, 130, 180);\n                break;\n            case KnownColor.Tan:\n                color = new PdfColor(255, 210, 180, 140);\n                break;\n            case KnownColor.Teal:\n                color = new PdfColor(255, 0, 128, 128);\n                break;\n            case KnownColor.Thistle:\n                color = new PdfColor(255, 216, 191, 216);\n                break;\n            case KnownColor.Tomato:\n                color = new PdfColor(255, 255, 99, 71);\n                break;\n            case KnownColor.Turquoise:\n                color = new PdfColor(255, 64, 224, 208);\n                break;\n            case KnownColor.Violet:\n                color = new PdfColor(255, 238, 130, 238);\n                break;\n            case KnownColor.Wheat:\n                color = new PdfColor(255, 245, 222, 179);\n                break;\n            case KnownColor.White:\n                color = new PdfColor(255, 255, 255, 255);\n                break;\n            case KnownColor.WhiteSmoke:\n                color = new PdfColor(255, 245, 245, 245);\n                break;\n            case KnownColor.Yellow:\n                color = new PdfColor(255, 255, 255, 0);\n                break;\n            case KnownColor.YellowGreen:\n                color = new PdfColor(255, 154, 205, 50);\n                break;\n        }\n        return color;\n    };\n    //Static Fields\n    /**\n     * Local variable to store the brushes.\n     */\n    PdfBrushes.sBrushes = new Dictionary();\n    return PdfBrushes;\n}());\nexport { PdfBrushes };\n","/**\n * PdfBlend.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfColor } from './../pdf-color';\nimport { PdfColorBlend } from './pdf-color-blend';\n/**\n * `PdfBlend` Represents the blend color space\n * @private\n */\nvar PdfBlend = /** @class */ (function () {\n    function PdfBlend(count) {\n        //Constants\n        /**\n         * precision of the GCD calculations.\n         * @private\n         */\n        this.precision = 1000;\n        //\n    }\n    Object.defineProperty(PdfBlend.prototype, \"factors\", {\n        //Properties\n        /**\n         * Gets or sets the array of factor to the blend.\n         * @public\n         */\n        get: function () {\n            return this.mFactors;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Factors');\n            }\n            this.mFactors = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBlend.prototype, \"positions\", {\n        /**\n         * 'positions' Gets or sets the array of positions\n         * @public\n         */\n        get: function () {\n            return this.mPositions;\n        },\n        set: function (value) {\n            var positionarray = value;\n            for (var i = 0; i < positionarray.length; i++) {\n                if (((positionarray[i] < 0) || (positionarray[i] > 1))) {\n                    positionarray[i] = 0;\n                }\n            }\n            this.mPositions = positionarray;\n            this.mPositions = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBlend.prototype, \"count\", {\n        /**\n         * Gets the number of elements that specify the blend.\n         * @protected\n         */\n        get: function () {\n            return this.mCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Generates a correct color blend.\n     * @param colours The colours.\n     * @param colorSpace The color space.\n     */\n    PdfBlend.prototype.generateColorBlend = function (colours, colorSpace) {\n        if ((colours == null)) {\n            throw new Error('ArgumentNullException : colours');\n        }\n        if ((this.positions == null)) {\n            this.positions = [0];\n        }\n        var cBlend = new PdfColorBlend(this.count);\n        var positions = this.positions;\n        var clrs = null;\n        if ((positions.length === 1)) {\n            positions = [3];\n            positions[0] = 0;\n            positions[1] = this.positions[0];\n            positions[2] = 1;\n            /* tslint:disable */\n            clrs = new Array(3);\n            clrs[0] = colours[0];\n            clrs[1] = colours[0];\n            clrs[2] = colours[1];\n        }\n        else {\n            var c1 = colours[0];\n            var c2 = colours[1];\n            /* tslint:disable */\n            clrs = new Array(this.count);\n            var i = 0;\n            var count = this.count;\n            for (i = 0; i < count; ++i) {\n                clrs[i] = this.interpolate(this.mFactors[i], c1, c2, colorSpace);\n            }\n        }\n        cBlend.positions = positions;\n        cBlend.colors = clrs;\n        return cBlend;\n    };\n    /**\n     * 'clonePdfBlend' Clones this instance.\n     * @public\n     */\n    PdfBlend.prototype.clonePdfBlend = function () {\n        var blend = this;\n        if ((this.mFactors != null)) {\n            blend.factors = (this.mFactors);\n        }\n        if ((this.positions != null)) {\n            blend.positions = (this.positions);\n        }\n        return blend;\n    };\n    PdfBlend.prototype.gcd = function (u, v) {\n        if (typeof u === 'number' && typeof v === 'number' && typeof v !== 'undefined') {\n            if (((u < 0) || (u > 1))) {\n                throw new Error('ArgumentOutOfRangeException : u');\n            }\n            if (((v < 0) || (v > 1))) {\n                throw new Error('ArgumentOutOfRangeException : v');\n            }\n            var iU = (Math.max(1, (u * this.precision)));\n            var iV = (Math.max(1, (v * this.precision)));\n            var iResult = this.gcdInt(iU, iV);\n            var result = ((iResult) / this.precision);\n            return result;\n        }\n        else {\n            var values = u;\n            if ((values == null)) {\n                throw new Error('ArgumentNullException : values');\n            }\n            if ((values.length < 1)) {\n                throw new Error('ArgumentException : Not enough values in the array. - values');\n            }\n            var gcd = values[0];\n            if ((values.length > 1)) {\n                var count = values.length;\n                for (var i = 1; i < count; ++i) {\n                    gcd = this.gcd(values[i], gcd);\n                    if ((gcd === (1 / this.precision))) {\n                        break;\n                    }\n                }\n            }\n            return gcd;\n        }\n    };\n    /**\n     * Calculate the GCD int of the specified values.\n     * @param u The u.\n     * @param v The v.\n     */\n    PdfBlend.prototype.gcdInt = function (u, v) {\n        if ((u <= 0)) {\n            throw new Error('ArgumentOutOfRangeException' + u + 'The arguments cannot be less or equal to zero.');\n        }\n        if ((v <= 0)) {\n            throw new Error('ArgumentOutOfRangeException' + v + 'The arguments cannot be less or equal to zero.');\n        }\n        if (((u === 1) || (v === 1))) {\n            return 1;\n        }\n        var shift = 0;\n        while (this.isEven(u, v)) {\n            ++shift;\n            u >>= 1;\n            v >>= 1;\n        }\n        while (((u & 1) <= 0)) {\n            u >>= 1;\n        }\n        do {\n            while ((v & 1) <= 0) {\n                v >>= 1;\n            }\n            if (u > v) {\n                var t = v;\n                v = u;\n                u = t;\n            }\n            v = v - u;\n        } while (v !== 0);\n        return (u << shift);\n    };\n    PdfBlend.prototype.isEven = function (arg1, arg2) {\n        if (typeof arg2 === 'number' && typeof arg2 !== 'undefined') {\n            var result = true;\n            result = (result && ((arg1 & 1) <= 0)); //  Is u even?\n            result = (result && ((arg2 & 1) <= 0)); //  Is v even?\n            return result;\n        }\n        else {\n            return ((arg1 & 1) <= 0);\n        }\n    };\n    PdfBlend.prototype.interpolate = function (t, color1, color2, colorSpace) {\n        if (color1 instanceof PdfColor) {\n            var color = new PdfColor();\n            switch (colorSpace) {\n                case PdfColorSpace.Rgb:\n                    var red = (this.interpolate(t, color1.red, color2.red));\n                    var green = (this.interpolate(t, color1.green, color2.green));\n                    var blue = (this.interpolate(t, color1.blue, color2.blue));\n                    color = new PdfColor(red, green, blue);\n                    break;\n                case PdfColorSpace.GrayScale:\n                    var gray = (this.interpolate(t, color1.gray, color2.gray));\n                    color = new PdfColor(gray);\n                    break;\n                case PdfColorSpace.Cmyk:\n                    var cyan = (this.interpolate(t, color1.c, color2.c));\n                    var magenta = (this.interpolate(t, color1.m, color2.m));\n                    var yellow = (this.interpolate(t, color1.y, color2.y));\n                    var black = (this.interpolate(t, color1.k, color2.k));\n                    color = new PdfColor(cyan, magenta, yellow, black);\n                    break;\n            }\n            return color;\n        }\n        else {\n            var t0 = 0;\n            var t1 = 1;\n            var result = 0;\n            if ((t === t0)) {\n                result = color1;\n            }\n            else if ((t === t1)) {\n                result = color2;\n            }\n            else {\n                result = (color1 + ((t - t0) * ((color2 - color1) / (t1 - t0))));\n            }\n            return result;\n        }\n    };\n    return PdfBlend;\n}());\nexport { PdfBlend };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfColorBlend.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfSampledFunction } from './../../general/functions/pdf-sampled-function';\nimport { PdfBlend } from './pdf-blend';\n/**\n * `PdfColorBlend` Represents the arrays of colors and positions used for\n *  interpolating color blending in a multicolor gradient.\n * @private\n */\nvar PdfColorBlend = /** @class */ (function (_super) {\n    __extends(PdfColorBlend, _super);\n    function PdfColorBlend(count) {\n        var _this = _super.call(this) || this;\n        if (typeof count === 'number') {\n            _this = _super.call(this, count) || this;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfColorBlend.prototype, \"colors\", {\n        //Properties\n        /**\n         * Gets or sets the array of colors.\n         * @public\n         */\n        get: function () {\n            return this.mcolors;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Colors');\n            }\n            this.mcolors = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Gets the function.\n     * @param colorSpace The color space.\n     * @public\n     */\n    PdfColorBlend.prototype.getFunction = function (colorSpace) {\n        var domain = [0, 1];\n        var colourComponents = this.getColorComponentsCount(colorSpace);\n        var maxComponentValue = this.getMaxComponentValue(colorSpace);\n        var range = this.setRange(colourComponents, maxComponentValue);\n        var func = null;\n        if ((this.mbrush == null && typeof this.mbrush === 'undefined')) {\n            var sizes = [1];\n            var samplesCount = void 0;\n            var step = 1;\n            if (this.positions.length === 2) {\n                samplesCount = 2;\n            }\n            else {\n                var positions = this.positions;\n                var intervals = this.getIntervals(positions);\n                var gcd = this.gcd(intervals);\n                step = gcd;\n                samplesCount = (((1 / gcd)) + 1);\n            }\n            sizes[0] = samplesCount;\n            var samples = this.getSamplesValues(colorSpace, samplesCount, maxComponentValue, step);\n            func = new PdfSampledFunction(domain, range, sizes, samples);\n            return func;\n        }\n        return func;\n    };\n    /**\n     * 'cloneColorBlend' Clones this instance.\n     * @public\n     */\n    PdfColorBlend.prototype.cloneColorBlend = function () {\n        var cBlend = this;\n        if ((this.mcolors != null && typeof this.mcolors !== 'undefined')) {\n            cBlend.colors = (this.mcolors);\n        }\n        if ((this.positions != null && typeof this.positions !== 'undefined')) {\n            cBlend.positions = (this.positions);\n        }\n        return cBlend;\n    };\n    /**\n     * Sets the range.\n     * @param colourComponents The colour components.\n     * @param maxValue The max value.\n     */\n    PdfColorBlend.prototype.setRange = function (colourComponents, maxValue) {\n        var range = [(colourComponents * 2)];\n        for (var i = 0; (i < colourComponents); ++i) {\n            range[(i * 2)] = 0;\n            range[((i * 2) + 1)] = 1;\n        }\n        return range;\n    };\n    /**\n     * Calculates the color components count according to colour space.\n     * @param colorSpace The color space.\n     */\n    PdfColorBlend.prototype.getColorComponentsCount = function (colorSpace) {\n        var count = 0;\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                count = 3;\n                break;\n            case PdfColorSpace.Cmyk:\n                count = 4;\n                break;\n            case PdfColorSpace.GrayScale:\n                count = 1;\n                break;\n            default:\n                throw new Error('ArgumentException - Unsupported color space: ' + colorSpace + ' colorSpace');\n        }\n        return count;\n    };\n    /**\n     * Gets samples values for specified colour space.\n     * @param colorSpace The color space.\n     * @param sampleCount The sample count.\n     * @param maxComponentValue The max component value.\n     * @param step The step.\n     */\n    PdfColorBlend.prototype.getSamplesValues = function (colorSpace, sampleCount, maxComponentValue, step) {\n        var values;\n        switch (colorSpace) {\n            case PdfColorSpace.GrayScale:\n                values = this.getGrayscaleSamples(sampleCount, maxComponentValue, step);\n                break;\n            case PdfColorSpace.Cmyk:\n                values = this.getCmykSamples(sampleCount, maxComponentValue, step);\n                break;\n            case PdfColorSpace.Rgb:\n                values = this.getRgbSamples(sampleCount, maxComponentValue, step);\n                break;\n            default:\n                throw new Error('ArgumentException - Unsupported color space: ' + colorSpace + ' colorSpace');\n        }\n        return values;\n    };\n    /**\n     * Gets the grayscale samples.\n     * @param sampleCount The sample count.\n     * @param maxComponentValue The max component value.\n     * @param step The step.\n     */\n    PdfColorBlend.prototype.getGrayscaleSamples = function (sampleCount, maxComponentValue, step) {\n        var values = [(sampleCount * 2)];\n        for (var i = 0; (i < sampleCount); ++i) {\n            var color = this.getNextColor(i, step, PdfColorSpace.GrayScale);\n            var index = (i * 2);\n        }\n        return values;\n    };\n    /**\n     * Gets the RGB samples.\n     * @param sampleCount The sample count.\n     * @param maxComponentValue The max component value.\n     * @param step The step.\n     */\n    PdfColorBlend.prototype.getRgbSamples = function (sampleCount, maxComponentValue, step) {\n        var values = [(sampleCount * 3)];\n        for (var i = 0; (i < sampleCount); ++i) {\n            var color = this.getNextColor(i, step, PdfColorSpace.Rgb);\n            var index = (i * 3);\n            values[index] = color.r;\n            values[(index + 1)] = color.g;\n            values[(index + 2)] = color.b;\n        }\n        return values;\n    };\n    /**\n     * Gets the CMYK samples.\n     * @param sampleCount The sample count.\n     * @param maxComponentValue The max component value.\n     * @param step The step.\n     */\n    PdfColorBlend.prototype.getCmykSamples = function (sampleCount, maxComponentValue, step) {\n        var values = [(sampleCount * 4)];\n        for (var i = 0; (i < sampleCount); i++) {\n            var color = this.getNextColor(i, step, PdfColorSpace.Cmyk);\n            var index = (i * 4);\n            values[index] = ((color.c * maxComponentValue));\n            values[(index + 1)] = ((color.m * maxComponentValue));\n            values[(index + 2)] = ((color.y * maxComponentValue));\n            values[(index + 3)] = ((color.k * maxComponentValue));\n        }\n        return values;\n    };\n    /**\n     * Calculates the color that should be at the specified index.\n     * @param index The index.\n     * @param step The step.\n     * @param colorSpace The color space.\n     */\n    PdfColorBlend.prototype.getNextColor = function (index, step, colorSpace) {\n        var position = (step * index);\n        var indexHi;\n        var indexLow;\n        var result = this.getIndices(position, indexLow, indexHi);\n        indexLow = result.indexLow;\n        indexHi = result.indexHi;\n        var color;\n        if (indexLow === indexHi) {\n            color = this.mcolors[indexLow];\n        }\n        else {\n            var positionLow = this.positions[indexLow];\n            var positionHi = this.positions[indexHi];\n            var colorLow = this.mcolors[indexLow];\n            var colorHi = this.mcolors[indexHi];\n            var t = ((position - positionLow) / (positionHi - positionLow));\n            color = this.interpolate(t, colorLow, colorHi, colorSpace);\n        }\n        return color;\n    };\n    /**\n     * Gets the indices.\n     * @param position The position.\n     * @param indexLow The index low.\n     * @param indexHi The index hi.\n     */\n    PdfColorBlend.prototype.getIndices = function (position, indexLow, indexHi) {\n        var positions = this.positions;\n        indexLow = 0;\n        indexHi = 0;\n        for (var i = 0; (i < this.mcolors.length); ++i) {\n            var currPos = positions[i];\n            if ((currPos === position)) {\n                indexHi = i;\n                indexLow = i;\n                break;\n            }\n            else if ((currPos > position)) {\n                indexHi = i;\n                break;\n            }\n            indexLow = i;\n            indexHi = i;\n        }\n        return { indexLow: indexLow, indexHi: indexHi };\n    };\n    /**\n     * Calculates the max component value.\n     * @param colorSpace The color space.\n     */\n    PdfColorBlend.prototype.getMaxComponentValue = function (colorSpace) {\n        var result = 0;\n        switch (colorSpace) {\n            case PdfColorSpace.Cmyk:\n            case PdfColorSpace.Rgb:\n                result = 255;\n                break;\n            case PdfColorSpace.GrayScale:\n                result = 65535;\n                break;\n            default:\n                throw new Error('ArgumentException - Unsupported color space: ' + colorSpace + 'colorSpace');\n        }\n        return result;\n    };\n    /**\n     * Gets an intervals array from the positions array.\n     * @param positions The positions array.\n     */\n    PdfColorBlend.prototype.getIntervals = function (positions) {\n        var count = positions.length;\n        var intervals = [(count - 1)];\n        var prev = positions[0];\n        for (var i = 1; (i < count); ++i) {\n            var v = positions[i];\n            intervals[(i - 1)] = (v - prev);\n            prev = v;\n        }\n        return intervals;\n    };\n    return PdfColorBlend;\n}(PdfBlend));\nexport { PdfColorBlend };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfLinearGradientBrush.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfColor } from './../pdf-color';\nimport { PointF, Rectangle } from './../../drawing/pdf-drawing';\nimport { PdfDictionary } from '../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfBoolean } from '../../primitives/pdf-boolean';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfColorBlend } from './pdf-color-blend';\nimport { PdfGradientBrush } from './pdf-gradient-brush';\nimport { PdfExtend, PdfLinearGradientMode, ShadingType } from './enum';\n/**\n * `PdfLinearGradientBrush` Implements linear gradient brush by using PDF axial shading pattern.\n * @private\n */\nvar PdfLinearGradientBrush = /** @class */ (function (_super) {\n    __extends(PdfLinearGradientBrush, _super);\n    /**\n     * Initializes a new instance of the `PdfLinearGradientBrush` class.\n     * @public\n     */\n    /* tslint:disable-next-line:max-line-length */\n    function PdfLinearGradientBrush(arg1, arg2, arg3, arg4) {\n        var _this = _super.call(this, new PdfDictionary()) || this;\n        /**\n         * Local variable to store the dictionary properties.\n         * @private\n         */\n        _this.mDictionaryProperties = new DictionaryProperties();\n        if (arg1 instanceof PointF && arg2 instanceof PointF && arg3 instanceof PdfColor && arg4 instanceof PdfColor) {\n            _this.initialize(arg3, arg4);\n            _this.mPointStart = arg1;\n            _this.mPointEnd = arg2;\n            _this.setPoints(_this.mPointStart, _this.mPointEnd);\n        }\n        else if (arg1 instanceof Rectangle) {\n            _this.initialize(arg2, arg3);\n            /* tslint:disable-next-line:max-line-length */\n            if ((arg4 === PdfLinearGradientMode.BackwardDiagonal || arg4 === PdfLinearGradientMode.ForwardDiagonal || arg4 === PdfLinearGradientMode.Horizontal || arg4 === PdfLinearGradientMode.Vertical)) {\n                _this.mBoundaries = arg1;\n                switch (arg4) {\n                    case PdfLinearGradientMode.BackwardDiagonal:\n                        _this.mPointStart = new PointF(arg1.right, arg1.top);\n                        _this.mPointEnd = new PointF(arg1.left, arg1.bottom);\n                        break;\n                    case PdfLinearGradientMode.ForwardDiagonal:\n                        _this.mPointStart = new PointF(arg1.left, arg1.top);\n                        _this.mPointEnd = new PointF(arg1.right, arg1.bottom);\n                        break;\n                    case PdfLinearGradientMode.Horizontal:\n                        _this.mPointStart = new PointF(arg1.left, arg1.top);\n                        _this.mPointEnd = new PointF(arg1.right, arg1.top);\n                        break;\n                    case PdfLinearGradientMode.Vertical:\n                        _this.mPointStart = new PointF(arg1.left, arg1.top);\n                        _this.mPointEnd = new PointF(arg1.left, arg1.bottom);\n                        break;\n                    default:\n                        throw new Error('ArgumentException -- Unsupported linear gradient mode: ' + arg4 + ' mode');\n                }\n                _this.setPoints(_this.mPointStart, _this.mPointEnd);\n            }\n            else if (typeof arg4 === 'number' && typeof arg4 !== 'undefined') {\n                _this.mBoundaries = arg1;\n                arg4 = arg4 % 360;\n                if ((arg4 === 0)) {\n                    _this.mPointStart = new PointF(arg1.left, arg1.top);\n                    _this.mPointEnd = new PointF(arg1.right, arg1.top);\n                }\n                else if ((arg4 === 90)) {\n                    _this.mPointStart = new PointF(arg1.left, arg1.top);\n                    _this.mPointEnd = new PointF(arg1.left, arg1.bottom);\n                }\n                else if ((arg4 === 180)) {\n                    _this.mPointEnd = new PointF(arg1.left, arg1.top);\n                    _this.mPointStart = new PointF(arg1.right, arg1.top);\n                }\n                else if ((arg4 === 270)) {\n                    _this.mPointEnd = new PointF(arg1.left, arg1.top);\n                    _this.mPointStart = new PointF(arg1.left, arg1.bottom);\n                }\n                else {\n                    var d2r = (Math.PI / 180);\n                    var radAngle = (arg4 * d2r);\n                    var k = Math.tan(radAngle);\n                    var x = (_this.mBoundaries.left\n                        + ((_this.mBoundaries.right - _this.mBoundaries.left) / 2));\n                    var y = (_this.mBoundaries.top\n                        + ((_this.mBoundaries.bottom - _this.mBoundaries.top) / 2));\n                    var centre = new PointF(x, y);\n                    x = (_this.mBoundaries.width / (2 * (Math.cos(radAngle))));\n                    y = ((k * x));\n                    x = (x + centre.x);\n                    y = (y + centre.y);\n                    var p1 = new PointF(x, y);\n                    var cp1 = _this.subPoints(p1, centre);\n                    //  P1 - P0\n                    var p = _this.choosePoint(arg4);\n                    var coef = (_this.mulPoints(_this.subPoints(p, centre), cp1)\n                        / _this.mulPoints(cp1, cp1));\n                    _this.mPointEnd = _this.addPoints(centre, _this.mulPoint(cp1, coef));\n                    //  Parametric line equation.\n                    _this.mPointStart = _this.addPoints(centre, _this.mulPoint(cp1, (coef * -1)));\n                }\n                _this.setPoints(_this.mPointEnd, _this.mPointStart);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Initializes a new instance of the `PdfLinearGradientBrush` class.\n     * @param color1 The starting color of the gradient.\n     * @param color2 The end color of the gradient.\n     */\n    PdfLinearGradientBrush.prototype.initialize = function (color1, color2) {\n        this.mColours = [color1, color2];\n        this.mColourBlend = new PdfColorBlend(2);\n        this.mColourBlend.positions = [0, 1];\n        this.mColourBlend.colors = this.mColours;\n        this.initShading();\n    };\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"blend\", {\n        //Properties\n        /**\n         * Gets or sets a PdfBlend that specifies positions\n         * and factors that define a custom falloff for the gradient.\n         * @public\n         */\n        get: function () {\n            return this.mBlend;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Blend');\n            }\n            if ((this.mColours == null)) {\n                throw new Error('NotSupportedException : There is no starting and ending colours specified.');\n            }\n            this.mBlend = value;\n            //  TODO: generate correct colour blend.\n            this.mColourBlend = this.mBlend.generateColorBlend(this.mColours, this.colorSpace);\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"interpolationColors\", {\n        /**\n         * Gets or sets a ColorBlend that defines a multicolor linear gradient.\n         * @public\n         */\n        get: function () {\n            return this.mColourBlend;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : InterpolationColors');\n            }\n            this.mBlend = null;\n            this.mColours = null;\n            this.mColourBlend = value;\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"linearColors\", {\n        /**\n         * Gets or sets the starting and ending colors of the gradient.\n         * @public\n         */\n        get: function () {\n            return this.mColours;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : LinearColors');\n            }\n            if ((value.length < 2)) {\n                throw new Error('ArgumentException : The array is too small - LinearColors');\n            }\n            if ((this.mColours == null && typeof this.mColours === 'undefined')) {\n                this.mColours = [value[0], value[1]];\n            }\n            else {\n                this.mColours[0] = value[0];\n                this.mColours[1] = value[1];\n            }\n            if ((this.mBlend == null && typeof this.mBlend === 'undefined')) {\n                //  Set correct colour blend.\n                this.mColourBlend = new PdfColorBlend(2);\n                this.mColourBlend.colors = this.mColours;\n                this.mColourBlend.positions = [0, 1];\n            }\n            else {\n                this.mColourBlend = this.mBlend.generateColorBlend(this.mColours, this.colorSpace);\n            }\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"rectangle\", {\n        /**\n         * Gets a rectangular region that defines the boundaries of the gradient.\n         * @public\n         */\n        get: function () {\n            return this.mBoundaries;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"extend\", {\n        /**\n         * Gets or sets the value indicating whether the gradient should extend starting and ending points.\n         * @public\n         */\n        get: function () {\n            var result = PdfExtend.None;\n            var extend = (this.shading.items.getValue(this.mDictionaryProperties.extend));\n            if ((extend != null)) {\n                var extStart = (extend.items(0));\n                var extEnd = (extend.items(1));\n                if (extStart.value) {\n                    result = (result | PdfExtend.Start);\n                }\n                if (extEnd.value) {\n                    result = (result | PdfExtend.End);\n                }\n            }\n            return result;\n        },\n        set: function (value) {\n            var extend = (this.shading.items.getValue(this.mDictionaryProperties.extend));\n            var extStart;\n            var extEnd;\n            if ((extend == null)) {\n                extStart = new PdfBoolean(false);\n                extEnd = new PdfBoolean(false);\n                extend = new PdfArray();\n                extend.add(extStart);\n                extend.add(extEnd);\n                this.shading.items.setValue(this.mDictionaryProperties.extend, extend);\n            }\n            else {\n                extStart = (extend.items(0));\n                extEnd = (extend.items(1));\n            }\n            // extStart.value = ((value && PdfExtend.Start) > 0);\n            // extEnd.value = ((value && PdfExtend.End) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Adds two points to each other.\n     * @param point1 The point1.\n     * @param point2 The point2.\n     */\n    PdfLinearGradientBrush.prototype.addPoints = function (point1, point2) {\n        var x = (point1.x + point2.x);\n        var y = (point1.y + point2.y);\n        var result = new PointF(x, y);\n        return result;\n    };\n    /**\n     * Subs the second point from the first one.\n     * @param point1 The point1.\n     * @param point2 The point2.\n     */\n    PdfLinearGradientBrush.prototype.subPoints = function (point1, point2) {\n        var x = (point1.x - point2.x);\n        var y = (point1.y - point2.y);\n        var result = new PointF(x, y);\n        return result;\n    };\n    /**\n     * Makes scalar multiplication of two points.\n     * @param point1 The point1.\n     * @param point2 The point2.\n     */\n    PdfLinearGradientBrush.prototype.mulPoints = function (point1, point2) {\n        var result = ((point1.x * point2.x) + (point1.y * point2.y));\n        return result;\n    };\n    /**\n     * Multiplies the point by the value specified.\n     * @param point The point1.\n     * @param value The value.\n     */\n    PdfLinearGradientBrush.prototype.mulPoint = function (point, value) {\n        point.x = (point.x * value);\n        point.y = (point.y * value);\n        return point;\n    };\n    /**\n     * Choose the point according to the angle.\n     * @param angle The angle.\n     */\n    PdfLinearGradientBrush.prototype.choosePoint = function (angle) {\n        var point = new PointF(0, 0);\n        //  Choose the correct point.\n        if ((angle < 90) && (angle > 0)) {\n            point = new PointF(this.mBoundaries.right, this.mBoundaries.bottom);\n        }\n        else if ((angle < 180) && (angle > 90)) {\n            point = new PointF(this.mBoundaries.left, this.mBoundaries.bottom);\n        }\n        else if ((angle < 270) && (angle > 180)) {\n            point = new PointF(this.mBoundaries.left, this.mBoundaries.top);\n        }\n        else if (angle > 270) {\n            point = new PointF(this.mBoundaries.right, this.mBoundaries.top);\n        }\n        else {\n            throw new Error('PdfException - Internal error.');\n        }\n        return point;\n    };\n    /**\n     * Sets the start and end points.\n     * @param point1 The point1.\n     * @param point2 The point2.\n     */\n    PdfLinearGradientBrush.prototype.setPoints = function (point1, point2) {\n        var points = new PdfArray();\n        points.add(new PdfNumber(point1.x));\n        points.add(new PdfNumber(this.updateY(point1.y)));\n        points.add(new PdfNumber(point2.x));\n        points.add(new PdfNumber(this.updateY(point2.y)));\n        this.shading.items.setValue(this.mDictionaryProperties.coords, points);\n    };\n    /**\n     * Updates y co-ordinate.\n     * @param y Y co-ordinate..\n     */\n    PdfLinearGradientBrush.prototype.updateY = function (y) {\n        if (y !== 0) {\n            return -y;\n        }\n        else {\n            return y;\n        }\n    };\n    //Overrides\n    /**\n     * Initializes the shading dictionary.\n     * @private\n     */\n    PdfLinearGradientBrush.prototype.initShading = function () {\n        this.colorSpace = PdfColorSpace.Rgb;\n        this.function = this.mColourBlend.getFunction(this.colorSpace);\n        this.shading.items.setValue(this.mDictionaryProperties.shadingType, new PdfNumber((ShadingType.Axial)));\n    };\n    //Overrides\n    /**\n     * Creates a new copy of a brush.\n     * @public\n     */\n    PdfLinearGradientBrush.prototype.clone = function () {\n        var brush = this;\n        brush.resetPatternDictionary(new PdfDictionary(this.patternDictionary));\n        brush.shading = new PdfDictionary();\n        brush.initShading();\n        brush.setPoints(brush.mPointStart, brush.mPointEnd);\n        if (brush !== null && brush instanceof PdfLinearGradientBrush) {\n            if ((this.matrix != null && typeof this.matrix !== 'undefined')) {\n                brush.matrix = this.matrix.clone();\n            }\n        }\n        if ((this.mColours != null && typeof this.mColours !== 'undefined')) {\n            brush.mColours = (this.mColours);\n        }\n        if ((this.blend != null && typeof this.blend !== 'undefined')) {\n            brush.blend = this.blend.clonePdfBlend();\n        }\n        else if ((this.interpolationColors != null && typeof this.interpolationColors !== 'undefined')) {\n            brush.interpolationColors = this.interpolationColors.cloneColorBlend();\n        }\n        brush.extend = this.extend;\n        this.cloneBackgroundValue(brush);\n        this.cloneAntiAliasingValue(brush);\n        return brush;\n    };\n    /**\n     * Resets the function.\n     * @public\n     */\n    PdfLinearGradientBrush.prototype.resetFunction = function () {\n        this.function = this.mColourBlend.getFunction(this.colorSpace);\n    };\n    return PdfLinearGradientBrush;\n}(PdfGradientBrush));\nexport { PdfLinearGradientBrush };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfRadialGradientBrush.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfDictionary } from '../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfBoolean } from '../../primitives/pdf-boolean';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfColorBlend } from './pdf-color-blend';\nimport { PdfGradientBrush } from './pdf-gradient-brush';\nimport { PdfExtend, ShadingType } from './enum';\n/**\n * `PdfRadialGradientBrush` Represent radial gradient brush.\n * @private\n */\nvar PdfRadialGradientBrush = /** @class */ (function (_super) {\n    __extends(PdfRadialGradientBrush, _super);\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfRadialGradientBrush` class.\n     * @public\n     */\n    /* tslint:disable-next-line:max-line-length */\n    function PdfRadialGradientBrush(centerStart, radiusStart, centerEnd, radiusEnd, colorStart, colorEnd) {\n        var _this = _super.call(this, new PdfDictionary()) || this;\n        /**\n         * Local varaible to store the dictionary properties.\n         */\n        _this.mDictionaryProperties = new DictionaryProperties();\n        _this.initialize(colorStart, colorEnd);\n        if (radiusStart < 0) {\n            throw new Error('ArgumentOutOfRangeException : radiusStart - The radius cannot be less then zero.');\n        }\n        if (radiusEnd < 0) {\n            throw new Error('ArgumentOutOfRangeException : radiusEnd - The radius cannpt be less then zero.');\n        }\n        _this.mPointEnd = centerEnd;\n        _this.mPointStart = centerStart;\n        _this.mRadiusStart = radiusStart;\n        _this.mRadiusEnd = radiusEnd;\n        _this.setPoints(_this.mPointStart, _this.mPointEnd, _this.mRadiusStart, _this.mRadiusEnd);\n        return _this;\n    }\n    /**\n     * Initializes a new instance of the `PdfRadialGradientBrush` class.\n     * @param color1 The color1.\n     * @param color2 The color2.\n     */\n    PdfRadialGradientBrush.prototype.initialize = function (color1, color2) {\n        this.mColour = [color1, color2];\n        this.mColourBlends = new PdfColorBlend(2);\n        this.mColourBlends.positions = [0, 1];\n        this.mColourBlends.colors = this.mColour;\n        this.initShading();\n    };\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"blend\", {\n        //Properties\n        /**\n         * Gets or sets a PdfBlend that specifies positions and factors that define a custom falloff for the gradient.\n         * @public\n         */\n        get: function () {\n            return this.mBlend;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Blend');\n            }\n            if ((this.mColour == null && typeof this.mColour === 'undefined')) {\n                throw new Error('NotSupportedException : There is no starting and ending colours specified.');\n            }\n            this.mBlend = value;\n            this.mColourBlends = this.mBlend.generateColorBlend(this.mColour, this.colorSpace);\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"interpolationColors\", {\n        /**\n         * Gets or sets a ColorBlend that defines a multicolor radial gradient.\n         * @public\n         */\n        get: function () {\n            return this.mColourBlends;\n        },\n        set: function (value) {\n            if (value == null) {\n                throw new Error('ArgumentNullException : InterpolationColors');\n            }\n            this.mBlend = null;\n            this.mColour = null;\n            this.mColourBlends = value;\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"linearColors\", {\n        /**\n         * Gets or sets the starting and ending colors of the radial gradient.\n         * @public\n         */\n        get: function () {\n            return this.mColour;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : radial LinearColors');\n            }\n            if ((value.length < 2)) {\n                throw new Error('ArgumentException : The array is too small LinearColors');\n            }\n            if ((this.mColour == null && typeof this.mColour === 'undefined')) {\n                this.mColour = [value[0], value[1]];\n            }\n            else {\n                this.mColour[0] = value[0];\n                this.mColour[1] = value[1];\n            }\n            if ((this.mBlend == null && typeof this.mBlend === 'undefined')) {\n                //  Set correct colour blend.\n                this.mColourBlends = new PdfColorBlend(2);\n                this.mColourBlends.colors = this.mColour;\n                this.mColourBlends.positions = [0, 1];\n            }\n            else {\n                this.mColourBlends = this.mBlend.generateColorBlend(this.mColour, this.colorSpace);\n            }\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"rectangle\", {\n        /**\n         * Gets or sets the rectangle.\n         * @public\n         */\n        get: function () {\n            return this.mBoundaries;\n        },\n        set: function (value) {\n            this.mBoundaries = value;\n            this.bBox = PdfArray.fromRectangle(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"extend\", {\n        /**\n         * Gets or sets the value indicating whether the gradient\n         *  should extend starting and ending points.\n         * @public\n         */\n        get: function () {\n            var result1 = PdfExtend.None;\n            var extend1 = (this.shading.items.getValue(this.mDictionaryProperties.extend));\n            if (extend1 !== null && typeof extend1 !== 'undefined') {\n                var extStart = (extend1.items(0));\n                var extEnd = (extend1.items(1));\n                if (extStart.value) {\n                    result1 = (result1 | PdfExtend.Start);\n                }\n                if (extEnd.value) {\n                    result1 = (result1 | PdfExtend.End);\n                }\n            }\n            return result1;\n        },\n        set: function (value) {\n            var extend = (this.shading.items.getValue(this.mDictionaryProperties.extend));\n            var extStart;\n            var extEnd1;\n            if (extend == null && typeof extend === 'undefined') {\n                extStart = new PdfBoolean(false);\n                extEnd1 = new PdfBoolean(false);\n                extend = new PdfArray();\n                extend.add(extStart);\n                extend.add(extEnd1);\n                this.shading.items.setValue(this.mDictionaryProperties.extend, extend);\n            }\n            else {\n                extStart = (extend.items(0));\n                extEnd1 = (extend.items(1));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Sets the points.\n     * @param pointStart The point start.\n     * @param pointEnd The point end.\n     * @param radiusStart The radius start.\n     * @param radiusEnd The radius end.\n     */\n    PdfRadialGradientBrush.prototype.setPoints = function (pointStart, pointEnd, radiusStart, radiusEnd) {\n        var points = new PdfArray();\n        points.add(new PdfNumber(pointStart.x));\n        points.add(new PdfNumber(this.updateY(pointStart.y)));\n        points.add(new PdfNumber(radiusStart));\n        points.add(new PdfNumber(pointEnd.x));\n        points.add(new PdfNumber(this.updateY(pointEnd.y)));\n        if ((radiusStart !== radiusEnd)) {\n            points.add(new PdfNumber(radiusEnd));\n        }\n        else {\n            points.add(new PdfNumber(0));\n        }\n        this.shading.items.setValue(this.mDictionaryProperties.coords, points);\n    };\n    /**\n     * Update y co-ordinate.\n     * @param y Y co-ordinate.\n     */\n    PdfRadialGradientBrush.prototype.updateY = function (y) {\n        if (y !== 0) {\n            return -y;\n        }\n        else {\n            return y;\n        }\n    };\n    /**\n     * Initializess the shading dictionary.\n     * @private\n     */\n    PdfRadialGradientBrush.prototype.initShading = function () {\n        this.colorSpace = PdfColorSpace.Rgb;\n        this.function = this.mColourBlends.getFunction(this.colorSpace);\n        this.shading.items.setValue(this.mDictionaryProperties.shadingType, new PdfNumber((ShadingType.Radial)));\n    };\n    //Overrides\n    /**\n     * Creates a new copy of a brush.\n     * @public\n     */\n    PdfRadialGradientBrush.prototype.clone = function () {\n        var rBrush = this;\n        rBrush.resetPatternDictionary(new PdfDictionary(this.patternDictionary));\n        rBrush.shading = new PdfDictionary();\n        rBrush.initShading();\n        rBrush.setPoints(this.mPointStart, this.mPointEnd, this.mRadiusStart, this.mRadiusEnd);\n        if (rBrush instanceof PdfRadialGradientBrush) {\n            if ((this.matrix !== null && typeof this.matrix !== 'undefined')) {\n                rBrush.matrix = this.matrix.clone();\n            }\n        }\n        if ((this.mColour !== null && typeof this.mColour !== 'undefined')) {\n            rBrush.mColour = (this.mColour);\n        }\n        if ((this.blend !== null && typeof this.blend !== 'undefined')) {\n            rBrush.blend = this.blend.clonePdfBlend();\n        }\n        else if ((this.interpolationColors !== null && typeof this.interpolationColors !== 'undefined')) {\n            rBrush.interpolationColors = this.interpolationColors.cloneColorBlend();\n        }\n        rBrush.extend = this.extend;\n        this.cloneBackgroundValue(rBrush);\n        this.cloneAntiAliasingValue(rBrush);\n        return rBrush;\n    };\n    /**\n     * Resets the function.\n     * @public\n     */\n    PdfRadialGradientBrush.prototype.resetFunction = function () {\n        this.function = this.mColourBlends.getFunction(this.colorSpace);\n    };\n    return PdfRadialGradientBrush;\n}(PdfGradientBrush));\nexport { PdfRadialGradientBrush };\n","/**\n * public Enum for `PdfBorderOverlapStyle`.\n * @private\n */\nexport var PdfBorderOverlapStyle;\n(function (PdfBorderOverlapStyle) {\n    /**\n     * Specifies the type of `Overlap`.\n     * @private\n     */\n    PdfBorderOverlapStyle[PdfBorderOverlapStyle[\"Overlap\"] = 0] = \"Overlap\";\n    /**\n     * Specifies the type of `Inside`.\n     * @private\n     */\n    PdfBorderOverlapStyle[PdfBorderOverlapStyle[\"Inside\"] = 1] = \"Inside\";\n})(PdfBorderOverlapStyle || (PdfBorderOverlapStyle = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfBorders, PdfPaddings } from './pdf-borders';\nimport { PdfBorderOverlapStyle } from './../../tables/light-tables/enum';\n/**\n * Base class for the `grid style`,\n */\nvar PdfGridStyleBase = /** @class */ (function () {\n    function PdfGridStyleBase() {\n    }\n    Object.defineProperty(PdfGridStyleBase.prototype, \"backgroundBrush\", {\n        // Properties\n        /**\n         * Gets or sets the `background brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridBackgroundBrush;\n        },\n        set: function (value) {\n            this.gridBackgroundBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"textBrush\", {\n        /**\n         * Gets or sets the `text brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridTextBrush;\n        },\n        set: function (value) {\n            this.gridTextBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"textPen\", {\n        /**\n         * Gets or sets the `text pen`.\n         * @private\n         */\n        get: function () {\n            return this.gridTextPen;\n        },\n        set: function (value) {\n            this.gridTextPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"font\", {\n        /**\n         * Gets or sets the `font`.\n         * @private\n         */\n        get: function () {\n            return this.gridFont;\n        },\n        set: function (value) {\n            this.gridFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"backgroundImage\", {\n        /**\n         * Gets or sets the `background Image`.\n         * @private\n         */\n        get: function () {\n            return this.gridBackgroundImage;\n        },\n        set: function (value) {\n            this.gridBackgroundImage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridStyleBase;\n}());\nexport { PdfGridStyleBase };\n/**\n * `PdfGridStyle` class provides customization of the appearance for the 'PdfGrid'.\n */\nvar PdfGridStyle = /** @class */ (function (_super) {\n    __extends(PdfGridStyle, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGridStyle` class.\n     * @private\n     */\n    function PdfGridStyle() {\n        var _this = _super.call(this) || this;\n        _this.gridBorderOverlapStyle = PdfBorderOverlapStyle.Overlap;\n        _this.bAllowHorizontalOverflow = false;\n        _this.gridHorizontalOverflowType = PdfHorizontalOverflowType.LastPage;\n        return _this;\n    }\n    Object.defineProperty(PdfGridStyle.prototype, \"cellSpacing\", {\n        //Properties\n        /**\n         * Gets or sets the `cell spacing` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridCellSpacing === 'undefined') {\n                this.gridCellSpacing = 0;\n            }\n            return this.gridCellSpacing;\n        },\n        set: function (value) {\n            this.gridCellSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"horizontalOverflowType\", {\n        /**\n         * Gets or sets the type of the `horizontal overflow` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            return this.gridHorizontalOverflowType;\n        },\n        set: function (value) {\n            this.gridHorizontalOverflowType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"allowHorizontalOverflow\", {\n        /**\n         * Gets or sets a value indicating whether to `allow horizontal overflow`.\n         * @private\n         */\n        get: function () {\n            return this.bAllowHorizontalOverflow;\n        },\n        set: function (value) {\n            this.bAllowHorizontalOverflow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"cellPadding\", {\n        /**\n         * Gets or sets the `cell padding`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n            }\n            return this.gridCellPadding;\n        },\n        set: function (value) {\n            if (typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n                this.gridCellPadding = value;\n            }\n            else {\n                this.gridCellPadding = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"borderOverlapStyle\", {\n        /**\n         * Gets or sets the `border overlap style` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            return this.gridBorderOverlapStyle;\n        },\n        set: function (value) {\n            this.gridBorderOverlapStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridStyle;\n}(PdfGridStyleBase));\nexport { PdfGridStyle };\n/**\n * `PdfGridCellStyle` class provides customization of the appearance for the 'PdfGridCell'.\n */\nvar PdfGridCellStyle = /** @class */ (function (_super) {\n    __extends(PdfGridCellStyle, _super);\n    /**\n     * Initializes a new instance of the `PdfGridCellStyle` class.\n     * @private\n     */\n    function PdfGridCellStyle() {\n        var _this = _super.call(this) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridCellBorders = PdfBorders.default;\n        return _this;\n    }\n    Object.defineProperty(PdfGridCellStyle.prototype, \"stringFormat\", {\n        //Properties\n        /**\n         * Gets the `string format` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCellStyle.prototype, \"borders\", {\n        /**\n         * Gets or sets the `border` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.gridCellBorders;\n        },\n        set: function (value) {\n            this.gridCellBorders = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCellStyle.prototype, \"cellPadding\", {\n        /**\n         * Gets or sets the `cell padding`.\n         * @private\n         */\n        get: function () {\n            return this.gridCellPadding;\n        },\n        set: function (value) {\n            if (this.gridCellPadding == null || typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n            }\n            this.gridCellPadding = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridCellStyle;\n}(PdfGridStyleBase));\nexport { PdfGridCellStyle };\n/**\n * `PdfGridRowStyle` class provides customization of the appearance for the `PdfGridRow`.\n */\nvar PdfGridRowStyle = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRowStyle` class.\n     * @private\n     */\n    function PdfGridRowStyle() {\n        //\n    }\n    Object.defineProperty(PdfGridRowStyle.prototype, \"backgroundBrush\", {\n        // Properties\n        /**\n         * Gets or sets the `background brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowBackgroundBrush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setBackgroundBrush = function (value) {\n        this.gridRowBackgroundBrush = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.backgroundBrush = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"textBrush\", {\n        /**\n         * Gets or sets the `text brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowTextBrush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setTextBrush = function (value) {\n        this.gridRowTextBrush = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.textBrush = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"textPen\", {\n        /**\n         * Gets or sets the `text pen`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowTextPen;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setTextPen = function (value) {\n        this.gridRowTextPen = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.textPen = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"font\", {\n        /**\n         * Gets or sets the `font`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setFont = function (value) {\n        this.gridRowFont = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.font = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"border\", {\n        /**\n         * Gets or sets the `border` of the current row.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridRowBorder === 'undefined') {\n                this.setBorder(new PdfBorders());\n            }\n            return this.gridRowBorder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setBorder = function (value) {\n        this.gridRowBorder = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.borders = value;\n            }\n        }\n    };\n    /**\n     * sets the `parent row` of the current object.\n     * @private\n     */\n    PdfGridRowStyle.prototype.setParent = function (parent) {\n        this.parent = parent;\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"backgroundImage\", {\n        /**\n         * Gets or sets the `backgroundImage` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.gridRowBackgroundImage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * sets the `backgroundImage` of the 'PdfGridCell'.\n     * @private\n     */\n    PdfGridRowStyle.prototype.setBackgroundImage = function (value) {\n        this.gridRowBackgroundImage = value;\n    };\n    return PdfGridRowStyle;\n}());\nexport { PdfGridRowStyle };\n/**\n * public Enum for `PdfHorizontalOverflowType`.\n * @private\n */\nexport var PdfHorizontalOverflowType;\n(function (PdfHorizontalOverflowType) {\n    /**\n     * Specifies the type of `NextPage`.\n     * @private\n     */\n    PdfHorizontalOverflowType[PdfHorizontalOverflowType[\"NextPage\"] = 0] = \"NextPage\";\n    /**\n     * Specifies the type of `LastPage`.\n     * @private\n     */\n    PdfHorizontalOverflowType[PdfHorizontalOverflowType[\"LastPage\"] = 1] = \"LastPage\";\n})(PdfHorizontalOverflowType || (PdfHorizontalOverflowType = {}));\n","import { PdfGrid } from './pdf-grid';\nimport { PdfGridCellStyle } from './styles/style';\nimport { PdfStringLayouter } from './../../graphics/fonts/string-layouter';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfStringFormat } from './../../graphics/fonts/pdf-string-format';\nimport { RectangleF, PointF, SizeF } from './../../drawing/pdf-drawing';\nimport { PdfDashStyle, PdfLineCap } from './../../graphics/enum';\nimport { PdfBorderOverlapStyle } from './../tables/light-tables/enum';\nimport { PdfSolidBrush } from './../../graphics/brushes/pdf-solid-brush';\nimport { PdfColor } from './../../graphics/pdf-color';\nimport { PdfImage } from './../../graphics/images/pdf-image';\nimport { PdfBitmap } from './../../graphics/images/pdf-bitmap';\nimport { PdfTextWebLink } from './../../annotations/pdf-text-web-link';\nimport { PdfLayoutType } from './../../graphics/figures/enum';\nimport { PdfGridLayouter, PdfGridLayoutFormat } from './../../structured-elements/grid/layout/grid-layouter';\nimport { PdfLayoutParams } from '../../../implementation/graphics/figures/base/element-layouter';\n/**\n * `PdfGridCell` class represents the schema of a cell in a 'PdfGrid'.\n */\nvar PdfGridCell = /** @class */ (function () {\n    function PdfGridCell(row) {\n        /**\n         * `Width` of the cell.\n         * @default 0\n         * @private\n         */\n        this.cellWidth = 0;\n        /**\n         * `Height` of the cell.\n         * @default 0\n         * @private\n         */\n        this.cellHeight = 0;\n        /**\n         * `tempval`to stores current width .\n         * @default 0\n         * @private\n         */\n        this.tempval = 0;\n        this.fontSpilt = false;\n        /**\n         * Specifies weather the `cell is drawn`.\n         * @default true\n         * @private\n         */\n        this.finsh = true;\n        /**\n         * The `remaining height` of row span.\n         * @default 0\n         * @private\n         */\n        this.rowSpanRemainingHeight = 0;\n        this.hasRowSpan = false;\n        this.hasColSpan = false;\n        /**\n         * the 'isFinish' is set to page finish\n         */\n        this.isFinish = true;\n        /**\n         * The `present' to store the current cell.\n         * @default false\n         * @private\n         */\n        this.present = false;\n        this.gridRowSpan = 1;\n        this.colSpan = 1;\n        if (typeof row !== 'undefined') {\n            this.gridRow = row;\n        }\n    }\n    Object.defineProperty(PdfGridCell.prototype, \"isCellMergeContinue\", {\n        //Properties\n        get: function () {\n            return this.internalIsCellMergeContinue;\n        },\n        set: function (value) {\n            this.internalIsCellMergeContinue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isRowMergeContinue\", {\n        get: function () {\n            return this.internalIsRowMergeContinue;\n        },\n        set: function (value) {\n            this.internalIsRowMergeContinue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isCellMergeStart\", {\n        get: function () {\n            return this.internalIsCellMergeStart;\n        },\n        set: function (value) {\n            this.internalIsCellMergeStart = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isRowMergeStart\", {\n        get: function () {\n            return this.internalIsRowMergeStart;\n        },\n        set: function (value) {\n            this.internalIsRowMergeStart = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"remainingString\", {\n        /**\n         * Gets or sets the `remaining string` after the row split between pages.\n         * @private\n         */\n        get: function () {\n            return this.remaining;\n        },\n        set: function (value) {\n            this.remaining = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"FinishedDrawingCell\", {\n        /**\n         * Gets or sets the `FinishedDrawingCell` .\n         * @private\n         */\n        get: function () {\n            return this.isFinish;\n        },\n        set: function (value) {\n            this.isFinish = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"stringFormat\", {\n        /**\n         * Gets or sets the `string format`.\n         * @private\n         */\n        get: function () {\n            if (this.format == null) {\n                this.format = new PdfStringFormat();\n            }\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"row\", {\n        /**\n         * Gets or sets the parent `row`.\n         * @private\n         */\n        get: function () {\n            return this.gridRow;\n        },\n        set: function (value) {\n            this.gridRow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"value\", {\n        /**\n         * Gets or sets the `value` of the cell.\n         * @private\n         */\n        get: function () {\n            return this.objectValue;\n        },\n        set: function (value) {\n            this.objectValue = value;\n            if (this.objectValue instanceof PdfGrid) {\n                this.row.grid.isSingleGrid = false;\n                var grid = this.objectValue;\n                grid.ParentCell = this;\n                this.objectValue.isChildGrid = true;\n                var rowCount = this.row.grid.rows.count;\n                for (var i = 0; i < rowCount; i++) {\n                    var row = this.row.grid.rows.getRow(i);\n                    var colCount = row.cells.count;\n                    for (var j = 0; j < colCount; j++) {\n                        var cell = row.cells.getCell(j);\n                        cell.parent = this;\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"rowSpan\", {\n        /**\n         * Gets or sets a value that indicates the total number of rows that cell `spans` within a PdfGrid.\n         * @private\n         */\n        get: function () {\n            return this.gridRowSpan;\n        },\n        set: function (value) {\n            if (value < 1) {\n                throw new Error('ArgumentException : Invalid span specified, must be greater than or equal to 1');\n            }\n            else {\n                this.gridRowSpan = value;\n                this.row.rowSpanExists = true;\n                this.row.grid.hasRowSpanSpan = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"style\", {\n        /**\n         * Gets or sets the cell `style`.\n         * @private\n         */\n        get: function () {\n            if (this.cellStyle == null) {\n                this.cellStyle = new PdfGridCellStyle();\n            }\n            return this.cellStyle;\n        },\n        set: function (value) {\n            this.cellStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"height\", {\n        /**\n         * Gets the `height` of the PdfGrid cell.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.cellHeight === 0) {\n                this.cellHeight = this.measureHeight();\n            }\n            return this.cellHeight;\n        },\n        set: function (value) {\n            this.cellHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"columnSpan\", {\n        /**\n         * Gets or sets a value that indicates the total number of columns that cell `spans` within a PdfGrid.\n         * @private\n         */\n        get: function () {\n            return this.colSpan;\n        },\n        set: function (value) {\n            if (value < 1) {\n                throw Error('Invalid span specified, must be greater than or equal to 1');\n            }\n            else {\n                this.colSpan = value;\n                this.row.columnSpanExists = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"width\", {\n        /**\n         * Gets the `width` of the PdfGrid cell.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.cellWidth === 0 || this.row.grid.isComplete) {\n                this.cellWidth = this.measureWidth();\n            }\n            return Math.round(this.cellWidth);\n        },\n        set: function (value) {\n            this.cellWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Calculates the width`.\n     * @private\n     */\n    PdfGridCell.prototype.measureWidth = function () {\n        // .. Calculate the cell text width.\n        // .....Add border widths, cell spacings and paddings to the width.\n        var width = 0;\n        var layouter = new PdfStringLayouter();\n        if (typeof this.objectValue === 'string') {\n            /* tslint:disable */\n            var slr = layouter.layout(this.objectValue, this.getTextFont(), this.stringFormat, new SizeF(Number.MAX_VALUE, Number.MAX_VALUE), false, new SizeF(0, 0));\n            width += slr.actualSize.width;\n            width += (this.style.borders.left.width + this.style.borders.right.width) * 2;\n        }\n        else if (this.objectValue instanceof PdfGrid) {\n            width = this.objectValue.size.width;\n            //width += this.objectValue.style.cellSpacing;\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            width += this.objectValue.width;\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            var webLink = this.objectValue;\n            var result = layouter.layout(webLink.text, webLink.font, webLink.stringFormat, new SizeF(0, 0), false, new SizeF(0, 0));\n            /* tslint:enable */\n            width += result.actualSize.width;\n            width += (this.style.borders.left.width + this.style.borders.right.width) * 2;\n        }\n        if (!(this.objectValue instanceof PdfGrid)) {\n            if (this.style.cellPadding != null) {\n                width += (this.style.cellPadding.left + this.style.cellPadding.right);\n            }\n            else {\n                width += (this.row.grid.style.cellPadding.left + this.row.grid.style.cellPadding.right);\n            }\n        }\n        else {\n            if (this.style.cellPadding != null || typeof this.style.cellPadding !== 'undefined') {\n                if (typeof this.style.cellPadding.left !== 'undefined' && this.style.cellPadding.hasLeftPad) {\n                    width += this.style.cellPadding.left;\n                }\n                if (typeof this.style.cellPadding.right !== 'undefined' && this.style.cellPadding.hasRightPad) {\n                    width += this.style.cellPadding.right;\n                }\n            }\n            else {\n                if (typeof this.row.grid.style.cellPadding.left !== 'undefined' && this.row.grid.style.cellPadding.hasLeftPad) {\n                    width += this.row.grid.style.cellPadding.left;\n                }\n                if (typeof this.row.grid.style.cellPadding.right !== 'undefined' && this.row.grid.style.cellPadding.hasRightPad) {\n                    width += this.row.grid.style.cellPadding.right;\n                }\n            }\n        }\n        width += this.row.grid.style.cellSpacing;\n        return width;\n    };\n    /**\n     * Draw the `cell background`.\n     * @private\n     */\n    PdfGridCell.prototype.drawCellBackground = function (graphics, bounds) {\n        var backgroundBrush = this.getBackgroundBrush();\n        //graphics.isTemplateGraphics = true;\n        if (backgroundBrush != null) {\n            graphics.save();\n            graphics.drawRectangle(backgroundBrush, bounds.x, bounds.y, bounds.width, bounds.height);\n            graphics.restore();\n        }\n        if (this.style.backgroundImage != null) {\n            var image = this.getBackgroundImage();\n            graphics.drawImage(this.style.backgroundImage, bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    /**\n     * `Adjusts the text layout area`.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGridCell.prototype.adjustContentLayoutArea = function (bounds) {\n        //Add Padding value to its Cell Bounds\n        var returnBounds = new RectangleF(bounds.x, bounds.y, bounds.width, bounds.height);\n        if (!(this.objectValue instanceof PdfGrid)) {\n            if (typeof this.style.cellPadding === 'undefined' || this.style.cellPadding == null) {\n                returnBounds.x += this.gridRow.grid.style.cellPadding.left + this.cellStyle.borders.left.width;\n                returnBounds.y += this.gridRow.grid.style.cellPadding.top + this.cellStyle.borders.top.width;\n                returnBounds.width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n                returnBounds.height -= (this.gridRow.grid.style.cellPadding.bottom + this.gridRow.grid.style.cellPadding.top);\n                returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);\n            }\n            else {\n                returnBounds.x += this.style.cellPadding.left + this.cellStyle.borders.left.width;\n                returnBounds.y += this.style.cellPadding.top + this.cellStyle.borders.top.width;\n                returnBounds.width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n                returnBounds.width -= (this.cellStyle.borders.left.width + this.cellStyle.borders.right.width);\n                returnBounds.height -= (this.style.cellPadding.bottom + this.style.cellPadding.top);\n                returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);\n                if (this.rowSpan === 1) {\n                    returnBounds.width -= (this.style.borders.left.width);\n                }\n            }\n        }\n        else {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                if (typeof this.gridRow.grid.style.cellPadding.left !== 'undefined' && this.gridRow.grid.style.cellPadding.hasLeftPad) {\n                    returnBounds.x += this.gridRow.grid.style.cellPadding.left + this.cellStyle.borders.left.width;\n                    returnBounds.width -= this.gridRow.grid.style.cellPadding.left;\n                }\n                if (typeof this.gridRow.grid.style.cellPadding.top !== 'undefined' && this.gridRow.grid.style.cellPadding.hasTopPad) {\n                    returnBounds.y += this.gridRow.grid.style.cellPadding.top + this.cellStyle.borders.top.width;\n                    returnBounds.height -= this.gridRow.grid.style.cellPadding.top;\n                }\n                if (typeof this.gridRow.grid.style.cellPadding.right !== 'undefined' && this.gridRow.grid.style.cellPadding.hasRightPad) {\n                    returnBounds.width -= this.gridRow.grid.style.cellPadding.right;\n                }\n                if (typeof this.gridRow.grid.style.cellPadding.bottom !== 'undefined' && this.gridRow.grid.style.cellPadding.hasBottomPad) {\n                    returnBounds.height -= this.gridRow.grid.style.cellPadding.bottom;\n                }\n            }\n            else {\n                if (typeof this.style.cellPadding.left !== 'undefined' && this.style.cellPadding.hasLeftPad) {\n                    returnBounds.x += this.style.cellPadding.left + this.cellStyle.borders.left.width;\n                    returnBounds.width -= this.style.cellPadding.left;\n                }\n                if (typeof this.style.cellPadding.top !== 'undefined' && this.style.cellPadding.hasTopPad) {\n                    returnBounds.y += this.style.cellPadding.top + this.cellStyle.borders.top.width;\n                    returnBounds.height -= this.style.cellPadding.top;\n                }\n                if (typeof this.style.cellPadding.right !== 'undefined' && this.style.cellPadding.hasRightPad) {\n                    returnBounds.width -= this.style.cellPadding.right;\n                }\n                if (typeof this.style.cellPadding.bottom !== 'undefined' && this.style.cellPadding.hasBottomPad) {\n                    returnBounds.height -= this.style.cellPadding.bottom;\n                }\n            }\n            returnBounds.width -= (this.cellStyle.borders.left.width + this.cellStyle.borders.right.width);\n            returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);\n        }\n        return returnBounds;\n    };\n    /**\n     * `Draws` the specified graphics.\n     * @private\n     */\n    PdfGridCell.prototype.draw = function (graphics, bounds, cancelSubsequentSpans) {\n        var isrowbreak = false;\n        /*if (!this.row.grid.isSingleGrid)\n        {\n            //Check whether the Grid Span to Nextpage\n            if ((this.remainingString != null) || (PdfGridLayouter.repeatRowIndex != -1))\n            {\n                this.DrawParentCells(graphics, bounds, true);\n            }\n            else if (this.row.grid.rows.count > 1)\n            {\n                for (let i : number  = 0; i < this.row.grid.rows.count; i++)\n                {\n                    if (this.row == this.row.grid.rows.getRow(i))\n                    {\n                        if (this.row.grid.rows.getRow(i).rowBreakHeight > 0)\n                            isrowbreak = true;\n                        if ((i > 0) && (isrowbreak))\n                            this.DrawParentCells(graphics, bounds, false);\n                    }\n                }\n            }\n        } */\n        var result = null;\n        /*if (cancelSubsequentSpans)\n        {\n            //..Cancel all subsequent cell spans, if no space exists.\n            let currentCellIndex : number = this.row.cells.indexOf(this);\n            for (let i : number = currentCellIndex + 1; i <= currentCellIndex + this.colSpan; i++)\n            {\n                this.row.cells.getCell(i).isCellMergeContinue = false;\n                this.row.cells.getCell(i).isRowMergeContinue = false;\n            }\n            this.colSpan = 1;\n        }*/\n        //..Skip cells which were already covered by spanmap.\n        if (this.internalIsCellMergeContinue || this.internalIsRowMergeContinue) {\n            if (this.internalIsCellMergeContinue && this.row.grid.style.allowHorizontalOverflow) {\n                if ((this.row.rowOverflowIndex > 0 && (this.row.cells.indexOf(this) != this.row.rowOverflowIndex + 1)) || (this.row.rowOverflowIndex == 0 && this.internalIsCellMergeContinue)) {\n                    return result;\n                }\n            }\n            else {\n                return result;\n            }\n        }\n        //Adjust bounds with Row and Column Spacing\n        bounds = this.adjustOuterLayoutArea(bounds, graphics);\n        this.drawCellBackground(graphics, bounds);\n        var textPen = this.getTextPen();\n        var textBrush = this.getTextBrush();\n        if (typeof textPen === 'undefined' && typeof textBrush === 'undefined') {\n            textBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        }\n        var font = this.getTextFont();\n        var strFormat = this.getStringFormat();\n        var innerLayoutArea = bounds;\n        if (innerLayoutArea.height >= graphics.clientSize.height) {\n            // If to break row to next page.\n            if (this.row.grid.allowRowBreakAcrossPages) {\n                innerLayoutArea.height -= innerLayoutArea.y;\n                //bounds.height -= bounds.y;\n                // if(this.row.grid.isChildGrid)\n                // {\n                //     innerLayoutArea.height -= this.row.grid.ParentCell.row.grid.style.cellPadding.bottom;\n                // }\n            }\n            // if user choose to cut the row whose height is more than page height.\n            // else\n            // {\n            //     innerLayoutArea.height = graphics.clientSize.height;\n            //     bounds.height = graphics.clientSize.height;\n            // }\n        }\n        innerLayoutArea = this.adjustContentLayoutArea(innerLayoutArea);\n        if (typeof this.objectValue === 'string' || typeof this.remaining === 'string') {\n            var temp = void 0;\n            var layoutRectangle = void 0;\n            if (innerLayoutArea.height < font.height)\n                layoutRectangle = new RectangleF(innerLayoutArea.x, innerLayoutArea.y, innerLayoutArea.width, font.height);\n            else\n                layoutRectangle = innerLayoutArea;\n            if (innerLayoutArea.height < font.height && this.row.grid.isChildGrid && this.row.grid.ParentCell != null) {\n                var height = layoutRectangle.height - this.row.grid.ParentCell.row.grid.style.cellPadding.bottom - this.row.grid.style.cellPadding.bottom;\n                if (this.row.grid.splitChildRowIndex != -1) {\n                    this.fontSpilt = true;\n                    this.row.rowFontSplit = true;\n                }\n                if (height > 0 && height < font.height)\n                    layoutRectangle.height = height;\n                // else if (height + this.row.grid.style.cellPadding.bottom > 0 && height + this.row.grid.style.cellPadding.bottom < font.height)\n                //     layoutRectangle.height = height + this.row.grid.style.cellPadding.bottom;\n                // else if (bounds.height < font.height)\n                //     layoutRectangle.height = bounds.height;\n                // else if (bounds.height - this.row.grid.ParentCell.row.grid.style.cellPadding.bottom < font.height)\n                //     layoutRectangle.height = bounds.height - this.row.grid.ParentCell.row.grid.style.cellPadding.bottom;                        \n            }\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                layoutRectangle.width -= this.gridRow.grid.style.cellSpacing;\n                bounds.width -= this.gridRow.grid.style.cellSpacing;\n            }\n            if (this.isFinish) {\n                // if (this.row.grid.splitChildRowIndex != -1 && !this.row.grid.isChildGrid && typeof this.remaining === 'undefined'){\n                //     this.remaining = '';\n                //     graphics.drawString(this.remaining, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                // } else {\n                temp = this.remaining === '' ? this.remaining : this.objectValue;\n                graphics.drawString(temp, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                if (this.row.grid.splitChildRowIndex != -1 && !this.row.grid.isChildGrid && typeof this.remaining === 'undefined') {\n                    this.remaining = '';\n                    //graphics.drawString(this.remaining, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                }\n            }\n            else {\n                if (typeof this.remaining == 'undefined' || this.remaining === null) {\n                    this.remaining = '';\n                }\n                if (this.row.repeatFlag) {\n                    graphics.drawString(this.remaining, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                }\n                //  else {\n                //     if(this.row.grid.ParentCell.row.repeatFlag) {\n                //         graphics.drawString((this.remaining as string), font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);                    \n                //     } else {\n                //         layoutRectangle.height = this.row.height;\n                //         graphics.drawString((this.objectValue as string), font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                //         bounds.height = this.row.height;\n                //     }\n                //  }\n                this.isFinish = true;\n                //graphics.drawString((this.remaining as string), font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n            }\n            result = graphics.stringLayoutResult;\n            // if(this.row.grid.isChildGrid && this.row.rowBreakHeight > 0 && result !=null) {\n            //     bounds.height -= this.row.grid.ParentCell.row.grid.style.cellPadding.bottom;\n            // }\n        }\n        else if (this.objectValue instanceof PdfGrid) {\n            var childGrid = this.objectValue;\n            childGrid.isChildGrid = true;\n            childGrid.ParentCell = this;\n            var layoutRect = void 0;\n            layoutRect = innerLayoutArea;\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                bounds.width -= this.gridRow.grid.style.cellSpacing;\n            }\n            // layoutRect = bounds;\n            // if (this.style.cellPadding != null){\n            //     layoutRect = bounds;            \n            // } else if((this.row.grid.style.cellPadding != null) && (childGrid.style.cellPadding.bottom === 0.5) && (childGrid.style.cellPadding.top === 0.5)\n            //                               && (childGrid.style.cellPadding.left === 5.76) && (childGrid.style.cellPadding.right === 5.76)\n            //                               && (this.gridRow.grid.style.cellSpacing === 0) && (childGrid.style.cellSpacing === 0)) {\n            //     layoutRect = innerLayoutArea;\n            // }\n            // if(this.objectValue.style.cellPadding != null && typeof this.objectValue.style.cellPadding !== 'undefined'){\n            //     layoutRect = bounds;\n            // }           \n            var layouter = new PdfGridLayouter(childGrid);\n            var format = new PdfGridLayoutFormat();\n            if (this.row.grid.LayoutFormat != null)\n                format = this.row.grid.LayoutFormat;\n            else\n                format.layout = PdfLayoutType.Paginate;\n            var param = new PdfLayoutParams();\n            if (graphics.layer != null) {\n                // Define layout parameters.\n                param.page = graphics.page;\n                param.bounds = layoutRect;\n                param.format = format;\n                //Set the span \n                childGrid.setSpan();\n                childGrid.checkSpan();\n                // Draw the child grid.\n                var childGridResult = layouter.Layouter(param);\n                //let childGridResult : PdfLayoutResult = layouter.innerLayout(param);\n                this.value = childGrid;\n                if (this.row.grid.splitChildRowIndex !== -1) {\n                    this.height = this.row.rowBreakHeightValue;\n                }\n                if (param.page != childGridResult.page) //&& (isWidthGreaterthanParent != true))\n                 {\n                    childGridResult.bounds.height = this.row.rowBreakHeightValue;\n                    if (this.row.rowBreakHeight == 0)\n                        this.row.NestedGridLayoutResult = childGridResult;\n                    else\n                        this.row.rowBreakHeight = this.row.rowBreakHeightValue;\n                    //bounds.height = this.row.rowBreakHeight;\n                    //After drawing paginated nested grid, the bounds of the parent grid in start page should be corrected for borders.\n                    //bounds.height = graphics.clientSize.height - bounds.y;\n                }\n            }\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            var imageBounds = void 0;\n            if (this.objectValue.width <= innerLayoutArea.width) {\n                imageBounds = new RectangleF(innerLayoutArea.x, innerLayoutArea.y, this.objectValue.width, innerLayoutArea.height);\n            }\n            else {\n                imageBounds = innerLayoutArea;\n            }\n            graphics.drawImage(this.objectValue, imageBounds.x, imageBounds.y, imageBounds.width, imageBounds.height);\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            this.objectValue.draw(graphics.currentPage, innerLayoutArea);\n        }\n        else if (typeof this.objectValue === 'undefined') {\n            this.objectValue = \"\";\n            graphics.drawString(this.objectValue, font, textPen, textBrush, innerLayoutArea.x, innerLayoutArea.y, innerLayoutArea.width, innerLayoutArea.height, strFormat);\n            if (this.style.cellPadding != null && this.style.cellPadding.bottom == 0 && this.style.cellPadding.left == 0 && this.style.cellPadding.right == 0 && this.style.cellPadding.top == 0) {\n                bounds.width -= (this.style.borders.left.width + this.style.borders.right.width);\n            }\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                bounds.width -= this.gridRow.grid.style.cellSpacing;\n            }\n        }\n        if (this.style.borders != null) {\n            if (!this.fontSpilt)\n                this.drawCellBorders(graphics, bounds);\n            else {\n                if (this.row.grid.ParentCell.row.grid.splitChildRowIndex != -1) {\n                    this.row.rowFontSplit = false;\n                    this.drawCellBorders(graphics, bounds);\n                }\n            }\n        }\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * Draws the `cell border` constructed by drawing lines.\n     * @private\n     */\n    PdfGridCell.prototype.drawCellBorders = function (graphics, bounds) {\n        if (this.row.grid.style.borderOverlapStyle === PdfBorderOverlapStyle.Inside) {\n            bounds.x += this.style.borders.left.width;\n            bounds.y += this.style.borders.top.width;\n            bounds.width -= this.style.borders.right.width;\n            bounds.height -= this.style.borders.bottom.width;\n        }\n        var p1 = new PointF(bounds.x, bounds.y + bounds.height);\n        var p2 = new PointF(bounds.x, bounds.y);\n        var pen = this.cellStyle.borders.left;\n        if (this.cellStyle.borders.left.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        // SetTransparency(ref graphics, pen);\n        if (pen.width !== 0) {\n            graphics.drawLine(pen, p1, p2);\n        }\n        p1 = new PointF(bounds.x + bounds.width, bounds.y);\n        p2 = new PointF(bounds.x + bounds.width, bounds.y + bounds.height);\n        pen = this.cellStyle.borders.right;\n        if ((bounds.x + bounds.width) > (graphics.clientSize.width - (pen.width / 2))) {\n            p1 = new PointF(graphics.clientSize.width - (pen.width / 2), bounds.y);\n            p2 = new PointF(graphics.clientSize.width - (pen.width / 2), bounds.y + bounds.height);\n        }\n        if (this.cellStyle.borders.right.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        if (pen.width !== 0) {\n            graphics.drawLine(pen, p1, p2);\n        }\n        p1 = new PointF(bounds.x, bounds.y);\n        p2 = new PointF(bounds.x + bounds.width, bounds.y);\n        pen = this.cellStyle.borders.top;\n        if (this.cellStyle.borders.top.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        if (pen.width !== 0) {\n            graphics.drawLine(pen, p1, p2);\n        }\n        p1 = new PointF(bounds.x + bounds.width, bounds.y + bounds.height);\n        p2 = new PointF(bounds.x, bounds.y + bounds.height);\n        pen = this.cellStyle.borders.bottom;\n        if ((bounds.y + bounds.height) > (graphics.clientSize.height - (pen.width / 2))) {\n            p1 = new PointF((bounds.x + bounds.width), (graphics.clientSize.height - (pen.width / 2)));\n            p2 = new PointF(bounds.x, (graphics.clientSize.height - (pen.width / 2)));\n        }\n        if (this.cellStyle.borders.bottom.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        if (pen.width !== 0) {\n            graphics.drawLine(pen, p1, p2);\n        }\n    };\n    // private setTransparency(graphics : PdfGraphics, pen : PdfPen) : void {\n    //     let alpha : number = (pen.color.a / 255) as number;\n    //     graphics.save();\n    //     graphics.setTransparency(alpha);\n    // }\n    /**\n     * `Adjusts the outer layout area`.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGridCell.prototype.adjustOuterLayoutArea = function (bounds, g) {\n        var isHeader = false;\n        var cellSpacing = this.row.grid.style.cellSpacing;\n        if (cellSpacing > 0) {\n            bounds = new RectangleF(bounds.x + cellSpacing, bounds.y + cellSpacing, bounds.width - cellSpacing, bounds.height - cellSpacing);\n        }\n        var currentColIndex = this.row.cells.indexOf(this);\n        if (this.columnSpan > 1 || (this.row.rowOverflowIndex > 0 && (currentColIndex == this.row.rowOverflowIndex + 1) && this.isCellMergeContinue)) {\n            var span = this.columnSpan;\n            if (span == 1 && this.isCellMergeContinue) {\n                for (var j = currentColIndex + 1; j < this.row.grid.columns.count; j++) {\n                    if (this.row.cells.getCell(j).isCellMergeContinue)\n                        span++;\n                    else\n                        break;\n                }\n            }\n            var totalWidth = 0;\n            for (var i = currentColIndex; i < currentColIndex + span; i++) {\n                if (this.row.grid.style.allowHorizontalOverflow) {\n                    var width = void 0;\n                    var compWidth = this.row.grid.size.width < g.clientSize.width ? this.row.grid.size.width : g.clientSize.width;\n                    if (this.row.grid.size.width > g.clientSize.width) {\n                        width = bounds.x + totalWidth + this.row.grid.columns.getColumn(i).width;\n                    }\n                    else {\n                        width = totalWidth + this.row.grid.columns.getColumn(i).width;\n                    }\n                    if (width > compWidth) {\n                        break;\n                    }\n                }\n                totalWidth += this.row.grid.columns.getColumn(i).width;\n            }\n            totalWidth -= this.row.grid.style.cellSpacing;\n            bounds.width = totalWidth;\n        }\n        if (this.rowSpan > 1 || this.row.rowSpanExists) {\n            var span = this.rowSpan;\n            var currentRowIndex = this.row.grid.rows.rowCollection.indexOf(this.row);\n            if (currentRowIndex == -1) {\n                currentRowIndex = this.row.grid.headers.indexOf(this.row);\n                if (currentRowIndex != -1) {\n                    isHeader = true;\n                }\n            }\n            // if (span == 1 && this.isCellMergeContinue) {\n            //         for (let j : number = currentRowIndex + 1; j < this.row.grid.rows.count; j++)\n            //         {\n            //             let flag : boolean = (isHeader ? this.row.grid.headers.getHeader(j).cells.getCell(currentColIndex).isCellMergeContinue : this.row.grid.rows.getRow(j).cells.getCell(currentColIndex).isCellMergeContinue);\n            //             if (flag)\n            //                 span++;\n            //             else\n            //                 break;\n            //         }\n            // }\n            var totalHeight = 0;\n            var max = 0;\n            for (var i = currentRowIndex; i < currentRowIndex + span; i++) {\n                totalHeight += (isHeader ? this.row.grid.headers.getHeader(i).height : this.row.grid.rows.getRow(i).height);\n                var row = this.row.grid.rows.getRow(i);\n                var rowIndex = this.row.grid.rows.rowCollection.indexOf(row);\n                /*if (this.rowSpan > 1)\n                    {\n                        for (let k : number = 0; k < this.row.cells.count; k++) {\n                            let cell : PdfGridCell = this.row.cells.getCell(k);\n                            if(cell.rowSpan>1)\n                            {\n                                let tempHeight : number =0;\n                                \n                                for (let j :number = i; j < i +cell.rowSpan; j++)\n                                {\n                                    if (!this.row.grid.rows.getRow(j).isRowSpanRowHeightSet)\n                                        this.row.grid.rows.getRow(j).isRowHeightSet = false;\n                                    tempHeight += this.row.grid.rows.getRow(j).height;\n                                    if (!this.row.grid.rows.getRow(j).isRowSpanRowHeightSet)\n                                        this.row.grid.rows.getRow(j).isRowHeightSet = true;\n                                }\n                                //To check the Row spanned cell height is greater than the total spanned row height.\n                                if(cell.height>tempHeight)\n                                {\n                                    if (max < (cell.height - tempHeight))\n                                    {\n                                        max = cell.height - tempHeight;\n                                        if (this.rowSpanRemainingHeight != 0 && max > this.rowSpanRemainingHeight)\n                                        {\n                                            max += this.rowSpanRemainingHeight;\n                                        }\n                                        let index :number = row.cells.indexOf(cell);\n                                        //set the m_rowspanRemainingHeight to last rowspanned row.\n                                        this.row.grid.rows.getRow((rowIndex +cell.rowSpan) - 1).cells.getCell(index).rowSpanRemainingHeight = max;\n                                        this.rowSpanRemainingHeight = this.row.grid.rows.getRow((rowIndex + cell.rowSpan) - 1).cells.getCell(index).rowSpanRemainingHeight;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    if (!this.row.grid.rows.getRow(i).isRowSpanRowHeightSet)\n                    this.row.grid.rows.getRow(i).isRowHeightSet = true;*/\n            }\n            var cellIndex = this.row.cells.indexOf(this);\n            totalHeight -= this.row.grid.style.cellSpacing;\n            // if (this.row.cells.getCell(cellIndex).height > totalHeight && (!this.row.grid.rows.getRow((currentRowIndex + span) - 1).isRowHeightSet)) {\n            //      this.row.grid.rows.getRow((currentRowIndex + span) - 1).cells.getCell(cellIndex).rowSpanRemainingHeight = this.row.cells.getCell(cellIndex).height - totalHeight;\n            //      totalHeight = this.row.cells.getCell(cellIndex).height;\n            //      bounds.height = totalHeight;\n            // } else {\n            bounds.height = totalHeight;\n            //  }\n            if (!this.row.rowMergeComplete) {\n                bounds.height = totalHeight;\n            }\n        }\n        return bounds;\n    };\n    /* tslint:enable */\n    /**\n     * Gets the `text font`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextFont = function () {\n        if (typeof this.style.font !== 'undefined' && this.style.font != null) {\n            return this.style.font;\n        }\n        else if (typeof this.row.style.font !== 'undefined' && this.row.style.font != null) {\n            return this.row.style.font;\n        }\n        else if (typeof this.row.grid.style.font !== 'undefined' && this.row.grid.style.font != null) {\n            return this.row.grid.style.font;\n        }\n        else {\n            return PdfDocument.defaultFont;\n        }\n    };\n    /**\n     * Gets the `text brush`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextBrush = function () {\n        if (typeof this.style.textBrush !== 'undefined' && this.style.textBrush != null) {\n            return this.style.textBrush;\n        }\n        else if (typeof this.row.style.textBrush !== 'undefined' && this.row.style.textBrush != null) {\n            return this.row.style.textBrush;\n        }\n        else {\n            return this.row.grid.style.textBrush;\n        }\n    };\n    /**\n     * Gets the `text pen`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextPen = function () {\n        if (typeof this.style.textPen !== 'undefined' && this.style.textPen != null) {\n            return this.style.textPen;\n        }\n        else if (typeof this.row.style.textPen !== 'undefined' && this.row.style.textPen != null) {\n            return this.row.style.textPen;\n        }\n        else {\n            return this.row.grid.style.textPen;\n        }\n    };\n    /**\n     * Gets the `background brush`.\n     * @private\n     */\n    PdfGridCell.prototype.getBackgroundBrush = function () {\n        if (typeof this.style.backgroundBrush !== 'undefined' && this.style.backgroundBrush != null) {\n            return this.style.backgroundBrush;\n        }\n        else if (typeof this.row.style.backgroundBrush !== 'undefined' && this.row.style.backgroundBrush != null) {\n            return this.row.style.backgroundBrush;\n        }\n        else {\n            return this.row.grid.style.backgroundBrush;\n        }\n    };\n    /**\n     * Gets the `background image`.\n     * @private\n     */\n    PdfGridCell.prototype.getBackgroundImage = function () {\n        if (typeof this.style.backgroundImage !== 'undefined' && this.style.backgroundImage != null) {\n            return this.style.backgroundImage;\n        }\n        else if (typeof this.row.style.backgroundImage !== 'undefined' && this.row.style.backgroundImage != null) {\n            return this.row.style.backgroundImage;\n        }\n        else {\n            return this.row.grid.style.backgroundImage;\n        }\n    };\n    /**\n     * Gets the current `StringFormat`.\n     * @private\n     */\n    PdfGridCell.prototype.getStringFormat = function () {\n        if (typeof this.style.stringFormat !== 'undefined' && this.style.stringFormat != null) {\n            return this.style.stringFormat;\n        }\n        else {\n            return this.stringFormat;\n        }\n    };\n    /**\n     * Calculates the `height`.\n     * @private\n     */\n    PdfGridCell.prototype.measureHeight = function () {\n        // .. Calculate the cell text height.\n        // .....Add border widths, cell spacings and paddings to the height.\n        var width = this.calculateWidth();\n        // //check whether the Current PdfGridCell has padding\n        if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n            width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n            //width -= (this.style.borders.left.width + this.style.borders.right.width);\n        }\n        else {\n            width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n            width -= (this.style.borders.left.width + this.style.borders.right.width);\n        }\n        var height = 0;\n        var layouter = new PdfStringLayouter();\n        if (typeof this.objectValue === 'string' || typeof this.remaining === 'string') {\n            var currentValue = this.objectValue;\n            /* tslint:disable */\n            if (!this.isFinish)\n                currentValue = !(this.remaining === null || this.remaining === '' ||\n                    typeof this.remaining === 'undefined') ? this.remaining : this.objectValue;\n            var slr = null;\n            var cellIndex = this.row.cells.indexOf(this);\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                width -= this.gridRow.grid.style.cellSpacing * 2;\n            }\n            if (!this.row.cells.getCell(cellIndex).hasColSpan && !this.row.cells.getCell(cellIndex).hasRowSpan) {\n                if (this.gridRow.grid.isChildGrid) {\n                    if (width < 0) {\n                        this.tempval = width;\n                        if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                            this.tempval += (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n                        }\n                        else {\n                            this.tempval += (this.style.cellPadding.right + this.style.cellPadding.left);\n                            this.tempval += (this.style.borders.left.width + this.style.borders.right.width);\n                        }\n                    }\n                    else {\n                        this.tempval = width;\n                    }\n                    slr = layouter.layout(currentValue, this.getTextFont(), this.stringFormat, new SizeF(this.tempval, 0), false, new SizeF(0, 0));\n                    height += slr.actualSize.height;\n                }\n                else {\n                    slr = layouter.layout(currentValue, this.getTextFont(), this.stringFormat, new SizeF(width, 0), false, new SizeF(0, 0));\n                    height += slr.actualSize.height;\n                }\n            }\n            /* tslint:enable */\n            height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n        }\n        else if (this.objectValue instanceof PdfGrid) {\n            var cellIndex = this.row.cells.indexOf(this);\n            var internalWidth = 0;\n            if ((this.style.cellPadding != null || typeof this.style.cellPadding !== 'undefined')) {\n                internalWidth = this.calculateWidth();\n                if (typeof this.style.cellPadding.left !== 'undefined' && this.style.cellPadding.hasLeftPad) {\n                    internalWidth -= this.style.cellPadding.left;\n                }\n                if (typeof this.style.cellPadding.right !== 'undefined' && this.style.cellPadding.hasRightPad) {\n                    internalWidth -= this.style.cellPadding.right;\n                }\n            }\n            else if ((this.row.grid.style.cellPadding != null || typeof this.row.grid.style.cellPadding !== 'undefined')) {\n                internalWidth = this.calculateWidth();\n                if (typeof this.row.grid.style.cellPadding.left !== 'undefined' && this.row.grid.style.cellPadding.hasLeftPad) {\n                    internalWidth -= this.row.grid.style.cellPadding.left;\n                }\n                if (typeof this.row.grid.style.cellPadding.right !== 'undefined' && this.row.grid.style.cellPadding.hasRightPad) {\n                    internalWidth -= this.row.grid.style.cellPadding.right;\n                }\n            }\n            else {\n                internalWidth = this.calculateWidth();\n            }\n            this.objectValue.tempWidth = internalWidth;\n            if (!this.row.cells.getCell(cellIndex).hasColSpan && !this.row.cells.getCell(cellIndex).hasRowSpan) {\n                height = this.objectValue.size.height;\n            }\n            else {\n                height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n            }\n            if (this.gridRow.grid.style.cellSpacing !== 0) {\n                width -= this.gridRow.grid.style.cellSpacing * 2;\n                //height += (this.row.grid.style.cellPadding.top + this.row.grid.style.cellPadding.bottom);\n            }\n            if (this.style.cellPadding != null || typeof this.style.cellPadding !== 'undefined') {\n                if (typeof this.row.grid.style.cellPadding.top !== 'undefined' && this.row.grid.style.cellPadding.hasTopPad) {\n                    height += this.row.grid.style.cellPadding.top;\n                }\n                if (this.row.grid.style.cellPadding.hasBottomPad && typeof this.row.grid.style.cellPadding.bottom !== 'undefined') {\n                    height += this.row.grid.style.cellPadding.bottom;\n                }\n            }\n            height += this.objectValue.style.cellSpacing;\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            height += this.objectValue.height;\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            var webLink = this.objectValue;\n            /* tslint:disable */\n            var slr = layouter.layout(webLink.text, webLink.font, webLink.stringFormat, new SizeF(width, 0), false, new SizeF(0, 0));\n            /* tslint:enable */\n            height += slr.actualSize.height;\n            height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n        }\n        else if (typeof this.objectValue === 'undefined') {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n            }\n            else {\n                width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n                width -= (this.style.borders.left.width + this.style.borders.right.width);\n            }\n            height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n        }\n        //Add padding top and bottom value to height\n        if (!(this.objectValue instanceof PdfGrid)) {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                height += (this.row.grid.style.cellPadding.top + this.row.grid.style.cellPadding.bottom);\n            }\n            else {\n                height += (this.style.cellPadding.top + this.style.cellPadding.bottom);\n            }\n        }\n        else {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                if (typeof this.row.grid.style.cellPadding.top !== 'undefined' && this.row.grid.style.cellPadding.hasTopPad) {\n                    height += this.row.grid.style.cellPadding.top;\n                }\n                if (typeof this.row.grid.style.cellPadding.bottom !== 'undefined' && this.row.grid.style.cellPadding.hasBottomPad) {\n                    height += this.row.grid.style.cellPadding.bottom;\n                }\n            }\n            else {\n                if (typeof this.style.cellPadding.top !== 'undefined' && this.style.cellPadding.hasTopPad) {\n                    height += this.style.cellPadding.top;\n                }\n                if (typeof this.style.cellPadding.bottom !== 'undefined' && this.style.cellPadding.hasBottomPad) {\n                    height += this.style.cellPadding.bottom;\n                }\n            }\n        }\n        height += this.row.grid.style.cellSpacing;\n        return height;\n    };\n    /**\n     * return the calculated `width` of the cell.\n     * @private\n     */\n    PdfGridCell.prototype.calculateWidth = function () {\n        var cellIndex = this.row.cells.indexOf(this);\n        var rowindex = this.row.grid.rows.rowCollection.indexOf(this.row);\n        var columnSpan = this.columnSpan;\n        var width = 0;\n        if (columnSpan === 1) {\n            for (var i = 0; i < columnSpan; i++) {\n                width += this.row.grid.columns.getColumn(cellIndex + i).width;\n            }\n        }\n        else if (columnSpan > 1) {\n            for (var i = 0; i < columnSpan; i++) {\n                width += this.row.grid.columns.getColumn(cellIndex + i).width;\n                if ((i + 1) < columnSpan) {\n                    this.row.cells.getCell(cellIndex + i + 1).hasColSpan = true;\n                }\n            }\n        }\n        if (this.parent != null && this.parent.row.width > 0) {\n            if ((this.row.grid.isChildGrid) && this.parent != null && (this.row.width > this.parent.row.width)) {\n                width = 0;\n                for (var j = 0; j < this.parent.columnSpan; j++) {\n                    width += this.parent.row.grid.columns.getColumn(j).width;\n                }\n                width = width / this.row.cells.count;\n            }\n        }\n        return width;\n    };\n    return PdfGridCell;\n}());\nexport { PdfGridCell };\n/**\n * `PdfGridCellCollection` class provides access to an ordered,\n * strongly typed collection of 'PdfGridCell' objects.\n * @private\n */\nvar PdfGridCellCollection = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGridCellCollection` class with the row.\n     * @private\n     */\n    function PdfGridCellCollection(row) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.cells = [];\n        this.gridRow = row;\n    }\n    //Properties\n    /**\n     * Gets the current `cell`.\n     * @private\n     */\n    PdfGridCellCollection.prototype.getCell = function (index) {\n        if (index < 0 || index >= this.count) {\n            throw new Error('IndexOutOfRangeException');\n        }\n        return this.cells[index];\n    };\n    Object.defineProperty(PdfGridCellCollection.prototype, \"count\", {\n        /**\n         * Gets the cells `count`.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.cells.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridCellCollection.prototype.add = function (cell) {\n        if (typeof cell === 'undefined') {\n            var tempcell = new PdfGridCell();\n            this.add(tempcell);\n            return cell;\n        }\n        else {\n            cell.row = this.gridRow;\n            this.cells.push(cell);\n        }\n    };\n    /**\n     * Returns the `index of` a particular cell in the collection.\n     * @private\n     */\n    PdfGridCellCollection.prototype.indexOf = function (cell) {\n        return this.cells.indexOf(cell);\n    };\n    return PdfGridCellCollection;\n}());\nexport { PdfGridCellCollection };\n","import { PdfGridCell } from './pdf-grid-cell';\nimport { PdfStringFormat } from './../../graphics/fonts/pdf-string-format';\n/**\n * `PdfGridColumn` class represents the schema of a column in a 'PdfGrid'.\n */\nvar PdfGridColumn = /** @class */ (function () {\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfGridColumn` class with the parent grid.\n     * @private\n     */\n    function PdfGridColumn(grid) {\n        /**\n         * The `width` of the column.\n         * @default 0\n         * @private\n         */\n        this.columnWidth = 0;\n        this.grid = grid;\n    }\n    Object.defineProperty(PdfGridColumn.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the 'PdfGridColumn'.\n         * @private\n         */\n        get: function () {\n            return this.columnWidth;\n        },\n        set: function (value) {\n            this.isCustomWidth = true;\n            this.columnWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumn.prototype, \"format\", {\n        /**\n         * Gets or sets the information about the text `formatting`.\n         * @private\n         */\n        get: function () {\n            if (this.stringFormat == null) {\n                this.stringFormat = new PdfStringFormat(); //GetDefaultFormat();\n            }\n            return this.stringFormat;\n        },\n        set: function (value) {\n            this.stringFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridColumn;\n}());\nexport { PdfGridColumn };\n/**\n * `PdfGridColumnCollection` class provides access to an ordered,\n * strongly typed collection of 'PdfGridColumn' objects.\n * @private\n */\nvar PdfGridColumnCollection = /** @class */ (function () {\n    //properties\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfGridColumnCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridColumnCollection(grid) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.internalColumns = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.columnWidth = 0;\n        this.grid = grid;\n        this.internalColumns = [];\n    }\n    //Iplementation\n    /**\n     * `Add` a new column to the 'PdfGrid'.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.add = function (count) {\n        // public add(column : PdfGridColumn) : void\n        // public add(arg : number|PdfGridColumn) : void {\n        // if (typeof arg === 'number') {\n        for (var i = 0; i < count; i++) {\n            this.internalColumns.push(new PdfGridColumn(this.grid));\n            for (var index = 0; index < this.grid.rows.count; index++) {\n                var row = this.grid.rows.getRow(index);\n                var cell = new PdfGridCell();\n                cell.value = '';\n                row.cells.add(cell);\n            }\n        }\n        // } else {\n        //     let column : PdfGridColumn = new PdfGridColumn(this.grid);\n        //     this.columns.push(column);\n        //     return column;\n        // }\n    };\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of columns` in the 'PdfGrid'.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.internalColumns.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"width\", {\n        /**\n         * Gets the `widths`.\n         * @private\n         */\n        get: function () {\n            if (this.columnWidth === 0) {\n                this.columnWidth = this.measureColumnsWidth();\n            }\n            if (this.grid.initialWidth !== 0 && this.columnWidth !== this.grid.initialWidth && !this.grid.style.allowHorizontalOverflow) {\n                this.columnWidth = this.grid.initialWidth;\n                this.grid.isPageWidth = true;\n            }\n            return this.columnWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"columns\", {\n        /**\n         * Gets the `array of PdfGridColumn`.[Read-Only]\n         * @private\n         */\n        get: function () {\n            return this.internalColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfGridColumn` from the specified index.[Read-Only]\n     * @private\n     */\n    PdfGridColumnCollection.prototype.getColumn = function (index) {\n        if (index >= 0 && index <= this.columns.length) {\n            return this.columns[index];\n        }\n        else {\n            throw Error('can not get the column from the index: ' + index);\n        }\n    };\n    //Implementation\n    /**\n     * `Calculates the column widths`.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.measureColumnsWidth = function () {\n        var totalWidth = 0;\n        this.grid.measureColumnsWidth();\n        for (var i = 0, count = this.internalColumns.length; i < count; i++) {\n            totalWidth += this.internalColumns[i].width;\n        }\n        return totalWidth;\n    };\n    /**\n     * Gets the `widths of the columns`.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.getDefaultWidths = function (totalWidth) {\n        var widths = [];\n        var summ = 0.0;\n        var subFactor = this.count;\n        for (var i = 0; i < this.count; i++) {\n            if (this.grid.isPageWidth && totalWidth >= 0 && !this.internalColumns[i].isCustomWidth) {\n                this.internalColumns[i].width = 0;\n            }\n            else {\n                widths[i] = this.internalColumns[i].width;\n                if (this.internalColumns[i].width > 0 && this.internalColumns[i].isCustomWidth) {\n                    totalWidth -= this.internalColumns[i].width;\n                    subFactor--;\n                }\n                else {\n                    widths[i] = 0;\n                }\n            }\n        }\n        for (var i = 0; i < this.count; i++) {\n            var width = totalWidth / subFactor;\n            if (widths[i] <= 0) {\n                widths[i] = width;\n            }\n        }\n        return widths;\n    };\n    return PdfGridColumnCollection;\n}());\nexport { PdfGridColumnCollection };\n","import { PdfGridCell, PdfGridCellCollection } from './pdf-grid-cell';\nimport { PdfGridRowStyle } from './styles/style';\n/**\n * `PdfGridRow` class provides customization of the settings for the particular row.\n */\nvar PdfGridRow = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRow` class with the parent grid.\n     * @private\n     */\n    function PdfGridRow(grid) {\n        /**\n         * Stores the index of the overflowing row.\n         * @private\n         */\n        this.gridRowOverflowIndex = 0;\n        /**\n         * The `height` of the row.\n         * @private\n         */\n        this.rowHeight = 0;\n        /**\n         * The `width` of the row.\n         * @private\n         */\n        this.rowWidth = 0;\n        /**\n         * The `isFinish` of the row.\n         * @private\n         */\n        this.isrowFinish = false;\n        /**\n         * Check whether the Row span row height `is set explicitly`.\n         * @default false\n         * @public\n         */\n        this.isRowSpanRowHeightSet = false;\n        /**\n         * The `page count` of the row.\n         * @public\n         */\n        this.noOfPageCount = 0;\n        /**\n         * Check whether the row height `is set explicitly`.\n         * @default false\n         * @private\n         */\n        this.isRowHeightSet = false;\n        this.isPageBreakRowSpanApplied = false;\n        /**\n         * Check weather the row merge `is completed` or not.\n         * @default true\n         * @private\n         */\n        this.isRowMergeComplete = true;\n        this.repeatFlag = false;\n        this.rowFontSplit = false;\n        this.isHeaderRow = false;\n        this.pdfGrid = grid;\n    }\n    Object.defineProperty(PdfGridRow.prototype, \"rowSpanExists\", {\n        //Properties\n        /**\n         * Gets or sets a value indicating [`row span exists`].\n         * @private\n         */\n        get: function () {\n            return this.bRowSpanExists;\n        },\n        set: function (value) {\n            this.bRowSpanExists = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"cells\", {\n        /**\n         * Gets the `cells` from the selected row.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.gridCells == null) {\n                this.gridCells = new PdfGridCellCollection(this);\n            }\n            return this.gridCells;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"grid\", {\n        /**\n         * Gets or sets the parent `grid`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGrid;\n        },\n        set: function (value) {\n            this.pdfGrid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"style\", {\n        /**\n         * Gets or sets the row `style`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.rowStyle === 'undefined') {\n                this.rowStyle = new PdfGridRowStyle();\n                this.rowStyle.setParent(this);\n            }\n            return this.rowStyle;\n        },\n        set: function (value) {\n            this.rowStyle = value;\n            for (var i = 0; i < this.cells.count; i++) {\n                this.cells.getCell(i).style.borders = value.border;\n                if (typeof value.font !== 'undefined') {\n                    this.cells.getCell(i).style.font = value.font;\n                }\n                if (typeof value.backgroundBrush !== 'undefined') {\n                    this.cells.getCell(i).style.backgroundBrush = value.backgroundBrush;\n                }\n                if (typeof value.backgroundImage !== 'undefined') {\n                    this.cells.getCell(i).style.backgroundImage = value.backgroundImage;\n                }\n                if (typeof value.textBrush !== 'undefined') {\n                    this.cells.getCell(i).style.textBrush = value.textBrush;\n                }\n                if (typeof value.textPen !== 'undefined') {\n                    this.cells.getCell(i).style.textPen = value.textPen;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowBreakHeight\", {\n        /**\n         * `Height` of the row yet to be drawn after split.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridRowBreakHeight === 'undefined') {\n                this.gridRowBreakHeight = 0;\n            }\n            return this.gridRowBreakHeight;\n        },\n        set: function (value) {\n            this.gridRowBreakHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowOverflowIndex\", {\n        /**\n         * `over flow index` of the row.\n         * @private\n         */\n        get: function () {\n            return this.gridRowOverflowIndex;\n        },\n        set: function (value) {\n            this.gridRowOverflowIndex = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"height\", {\n        /**\n         * Gets or sets the `height` of the row.\n         * @private\n         */\n        get: function () {\n            if (!this.isRowHeightSet) {\n                this.rowHeight = this.measureHeight();\n            }\n            return this.rowHeight;\n        },\n        set: function (value) {\n            this.rowHeight = value;\n            this.isRowHeightSet = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the row.\n         * @private\n         */\n        get: function () {\n            if (this.rowWidth === 0 || typeof this.rowWidth === 'undefined') {\n                this.rowWidth = this.measureWidth();\n            }\n            return this.rowWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"NestedGridLayoutResult\", {\n        /**\n         * Gets or sets the row `Nested grid Layout Result`.\n         * @private\n         */\n        get: function () {\n            return this.gridResult;\n        },\n        set: function (value) {\n            this.gridResult = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"columnSpanExists\", {\n        /**\n         * Gets or sets a value indicating [`column span exists`].\n         * @private\n         */\n        get: function () {\n            return this.bColumnSpanExists;\n        },\n        set: function (value) {\n            this.bColumnSpanExists = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowMergeComplete\", {\n        /**\n         * Check whether the Row `has row span or row merge continue`.\n         * @private\n         */\n        get: function () {\n            return this.isRowMergeComplete;\n        },\n        set: function (value) {\n            this.isRowMergeComplete = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowIndex\", {\n        /**\n         * Returns `index` of the row.\n         * @private\n         */\n        get: function () {\n            return this.grid.rows.rowCollection.indexOf(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Calculates the height`.\n     * @private\n     */\n    PdfGridRow.prototype.measureHeight = function () {\n        var rowSpanRemainingHeight = 0;\n        var rowHeight;\n        var maxHeight = 0;\n        if (this.cells.getCell(0).rowSpan > 1) {\n            rowHeight = 0;\n        }\n        else {\n            rowHeight = this.cells.getCell(0).height;\n        }\n        for (var i = 0; i < this.cells.count; i++) {\n            var cell = this.cells.getCell(i);\n            //get the maximum rowspan remaining height.\n            if (cell.rowSpanRemainingHeight > rowSpanRemainingHeight) {\n                rowSpanRemainingHeight = cell.rowSpanRemainingHeight;\n            }\n            //skip the cell if row spanned.\n            // if (cell.isRowMergeContinue) {\n            //     continue;\n            // }\n            // if (!cell.isRowMergeContinue) {\n            //     this.rowMergeComplete = false;\n            // }\n            this.rowMergeComplete = false;\n            if (cell.rowSpan > 1) {\n                var cellIn = i;\n                var rowin = this.isHeaderRow ? this.grid.headers.indexOf(this) : this.grid.rows.rowCollection.indexOf(this);\n                for (var j = 0; j < cell.rowSpan; j++) {\n                    if ((j + 1) < cell.rowSpan) {\n                        (this.isHeaderRow ? this.grid.headers.getHeader(rowin + j + 1) : this.grid.rows.getRow(rowin + j + 1)).cells.getCell(cellIn).hasRowSpan = true;\n                    }\n                }\n                if (maxHeight < cell.height) {\n                    maxHeight = cell.height;\n                }\n                continue;\n            }\n            rowHeight = Math.max(rowHeight, cell.height);\n        }\n        if (maxHeight > rowHeight) {\n            rowHeight = maxHeight;\n        }\n        if (rowHeight === 0) {\n            rowHeight = maxHeight;\n        }\n        else if (rowSpanRemainingHeight > 0) {\n            rowHeight += rowSpanRemainingHeight;\n        }\n        return rowHeight;\n    };\n    PdfGridRow.prototype.measureWidth = function () {\n        var rowWid = 0;\n        for (var i = 0; i < this.grid.columns.count; i++) {\n            var column = this.grid.columns.getColumn(i);\n            rowWid += column.width;\n        }\n        return rowWid;\n    };\n    return PdfGridRow;\n}());\nexport { PdfGridRow };\n/**\n * `PdfGridRowCollection` class provides access to an ordered, strongly typed collection of 'PdfGridRow' objects.\n * @private\n */\nvar PdfGridRowCollection = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRowCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridRowCollection(grid) {\n        this.rows = [];\n        this.grid = grid;\n    }\n    Object.defineProperty(PdfGridRowCollection.prototype, \"count\", {\n        //Properties\n        /**\n         * Gets the number of header in the `PdfGrid`.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.rows.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRowCollection.prototype, \"rowCollection\", {\n        //Implementation\n        /**\n         * Return the row collection of the `grid`.\n         * @private\n         */\n        get: function () {\n            return this.rows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowCollection.prototype.addRow = function (arg) {\n        if (typeof arg === 'undefined') {\n            var temprow = new PdfGridRow(this.grid);\n            this.addRow(temprow);\n            return temprow;\n        }\n        else {\n            arg.style.setBackgroundBrush(this.grid.style.backgroundBrush);\n            arg.style.setFont(this.grid.style.font);\n            arg.style.setTextBrush(this.grid.style.textBrush);\n            arg.style.setTextPen(this.grid.style.textPen);\n            if (arg.cells.count === 0) {\n                for (var i = 0; i < this.grid.columns.count; i++) {\n                    arg.cells.add(new PdfGridCell());\n                }\n            }\n            this.rows.push(arg);\n        }\n    };\n    /**\n     * Return the row by index.\n     * @private\n     */\n    PdfGridRowCollection.prototype.getRow = function (index) {\n        return this.rows[index];\n    };\n    return PdfGridRowCollection;\n}());\nexport { PdfGridRowCollection };\n/**\n * `PdfGridHeaderCollection` class provides customization of the settings for the header.\n * @private\n */\nvar PdfGridHeaderCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfGridHeaderCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridHeaderCollection(grid) {\n        /**\n         * The array to store the `rows` of the grid header.\n         * @private\n         */\n        this.rows = [];\n        this.grid = grid;\n        this.rows = [];\n    }\n    //Properties\n    /**\n     * Gets a 'PdfGridRow' object that represents the `header` row in a 'PdfGridHeaderCollection' control.[Read-Only].\n     * @private\n     */\n    PdfGridHeaderCollection.prototype.getHeader = function (index) {\n        // if (index < 0 || index >= Count) {\n        //     throw new IndexOutOfRangeException();\n        // }\n        return (this.rows[index]);\n    };\n    Object.defineProperty(PdfGridHeaderCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of header` in the 'PdfGrid'.[Read-Only]\n         * @private\n         */\n        get: function () {\n            return this.rows.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridHeaderCollection.prototype.add = function (arg) {\n        if (typeof arg === 'number') {\n            var row = void 0;\n            for (var i = 0; i < arg; i++) {\n                row = new PdfGridRow(this.grid);\n                row.isHeaderRow = true;\n                for (var j = 0; j < this.grid.columns.count; j++) {\n                    row.cells.add(new PdfGridCell());\n                }\n                this.rows.push(row);\n            }\n            return this.rows;\n        }\n        else {\n            this.rows.push(arg);\n        }\n    };\n    PdfGridHeaderCollection.prototype.indexOf = function (row) {\n        return this.rows.indexOf(row);\n    };\n    return PdfGridHeaderCollection;\n}());\nexport { PdfGridHeaderCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfGrid.ts class for EJ2-PDF\n */\nimport { PdfGridColumnCollection } from './pdf-grid-column';\nimport { PdfGridRowCollection, PdfGridHeaderCollection } from './pdf-grid-row';\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutElement } from './../../graphics/figures/layout-element';\nimport { PdfLayoutFormat } from './../../graphics/figures/base/element-layouter';\nimport { PdfGridStyle } from './styles/style';\nimport { PdfBorders } from './styles/pdf-borders';\nimport { PdfGridLayouter } from './../../structured-elements/grid/layout/grid-layouter';\nvar PdfGrid = /** @class */ (function (_super) {\n    __extends(PdfGrid, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGrid` class.\n     * @private\n     */\n    function PdfGrid() {\n        var _this = _super.call(this) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridSize = new SizeF(0, 0);\n        /**\n         * Check the child grid is ' split or not'\n         */\n        _this.isGridSplit = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isRearranged = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.pageBounds = new RectangleF();\n        /**\n         * @hidden\n         * @private\n         */\n        _this.listOfNavigatePages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.parentCellIndex = 0;\n        _this.tempWidth = 0;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.breakRow = true;\n        _this.splitChildRowIndex = -1;\n        /**\n         * The event raised on `begin cell lay outing`.\n         * @event\n         * @private\n         */\n        //public beginPageLayout : Function;\n        /**\n         * The event raised on `end cell lay outing`.\n         * @event\n         * @private\n         */\n        //public endPageLayout : Function;\n        _this.hasRowSpanSpan = false;\n        _this.hasColumnSpan = false;\n        _this.isSingleGrid = true;\n        return _this;\n    }\n    Object.defineProperty(PdfGrid.prototype, \"raiseBeginCellDraw\", {\n        //Properties\n        /**\n         * Gets a value indicating whether the `start cell layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.beginCellDraw !== 'undefined' && typeof this.beginCellDraw !== null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"raiseEndCellDraw\", {\n        /**\n         * Gets a value indicating whether the `end cell layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.endCellDraw !== 'undefined' && typeof this.endCellDraw !== null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"repeatHeader\", {\n        /**\n         * Gets or sets a value indicating whether to `repeat header`.\n         * @private\n         */\n        get: function () {\n            if (this.bRepeatHeader == null || typeof this.bRepeatHeader === 'undefined') {\n                this.bRepeatHeader = false;\n            }\n            return this.bRepeatHeader;\n        },\n        set: function (value) {\n            this.bRepeatHeader = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"allowRowBreakAcrossPages\", {\n        /**\n         * Gets or sets a value indicating whether to split or cut rows that `overflow a page`.\n         * @private\n         */\n        get: function () {\n            return this.breakRow;\n        },\n        set: function (value) {\n            this.breakRow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"columns\", {\n        /**\n         * Gets the `column` collection of the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridColumns == null || typeof this.gridColumns === 'undefined') {\n                this.gridColumns = new PdfGridColumnCollection(this);\n            }\n            return this.gridColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"rows\", {\n        /**\n         * Gets the `row` collection from the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridRows == null) {\n                this.gridRows = new PdfGridRowCollection(this);\n            }\n            return this.gridRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"headers\", {\n        /**\n         * Gets the `headers` collection from the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridHeaders == null || typeof this.gridHeaders === 'undefined') {\n                this.gridHeaders = new PdfGridHeaderCollection(this);\n            }\n            return this.gridHeaders;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"initialWidth\", {\n        /**\n         * Indicating `initial width` of the page.\n         * @private\n         */\n        get: function () {\n            return this.gridInitialWidth;\n        },\n        set: function (value) {\n            this.gridInitialWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"style\", {\n        /**\n         * Gets or sets the `grid style`.\n         * @private\n         */\n        get: function () {\n            if (this.gridStyle == null) {\n                this.gridStyle = new PdfGridStyle();\n            }\n            return this.gridStyle;\n        },\n        set: function (value) {\n            if (this.gridStyle == null) {\n                this.gridStyle = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"isPageWidth\", {\n        /**\n         * Gets a value indicating whether the grid column width is considered to be `page width`.\n         * @private\n         */\n        get: function () {\n            return this.ispageWidth;\n        },\n        set: function (value) {\n            this.ispageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"isChildGrid\", {\n        /**\n         * Gets or set if grid `is nested grid`.\n         * @private\n         */\n        get: function () {\n            return this.ischildGrid;\n        },\n        set: function (value) {\n            this.ischildGrid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"size\", {\n        /**\n         * Gets or set if grid ' is split or not'\n         * @public\n         */\n        // public get isGridSplit() : boolean {\n        //     return this.isgridSplit;\n        // }\n        // public set isGridSplit(value : boolean) {\n        //     this.isgridSplit = value;\n        // }public get isGridSplit() : boolean {\n        //     return this.isgridSplit;\n        // }\n        // public set isGridSplit(value : boolean) {\n        //     this.isgridSplit = value;\n        // }\n        /**\n         * Gets the `size`.\n         * @private\n         */\n        get: function () {\n            if ((this.gridSize.width === 0 || typeof this.gridSize.width === 'undefined') && this.gridSize.height === 0) {\n                this.gridSize = this.measure();\n            }\n            return this.gridSize;\n            // } else {\n            //     return this.gridSize;\n            // }\n        },\n        set: function (value) {\n            this.gridSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"ParentCell\", {\n        get: function () {\n            return this.parentCell;\n        },\n        set: function (value) {\n            this.parentCell = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"LayoutFormat\", {\n        get: function () {\n            return this.layoutFormat;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGrid.prototype.draw = function (arg1, arg2, arg3, arg4) {\n        if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2.x, arg2.y);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg1, arg2, arg3, null);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg1, arg2.x, arg2.y, arg3);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && (arg4 instanceof PdfLayoutFormat || arg4 == null)) {\n            var width = (arg1.graphics.clientSize.width - arg2);\n            var layoutRectangle = new RectangleF(arg2, arg3, width, 0);\n            return this.drawHelper(arg1, layoutRectangle, arg4);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'boolean') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else {\n            return this.drawHelper(arg1, arg2, arg3);\n        }\n    };\n    /**\n     * `measures` this instance.\n     * @private\n     */\n    PdfGrid.prototype.measure = function () {\n        var height = 0;\n        var width = this.columns.width;\n        for (var i = 0; i < this.headers.count; i++) {\n            var row = this.headers.getHeader(i);\n            height += row.height;\n        }\n        for (var i = 0; i < this.rows.count; i++) {\n            var row = this.rows.getRow(i);\n            height += row.height;\n        }\n        return new SizeF(width, height);\n    };\n    PdfGrid.prototype.onBeginCellDraw = function (args) {\n        if (this.raiseBeginCellDraw) {\n            this.beginCellDraw(this, args);\n        }\n    };\n    PdfGrid.prototype.onEndCellDraw = function (args) {\n        if (this.raiseEndCellDraw) {\n            this.endCellDraw(this, args);\n        }\n    };\n    /**\n     * `Layouts` the specified graphics.\n     * @private\n     */\n    PdfGrid.prototype.layout = function (param) {\n        var width = param.bounds.width;\n        var height = param.bounds.height;\n        var hasChanged = false;\n        if (typeof param.bounds.width === 'undefined' || param.bounds.width === 0) {\n            width = param.page.getClientSize().width - param.bounds.x;\n            hasChanged = true;\n        }\n        if (typeof param.bounds.height === 'undefined' || param.bounds.height === 0) {\n            height = param.page.getClientSize().height - param.bounds.y;\n            hasChanged = true;\n        }\n        if (hasChanged) {\n            param.bounds = new RectangleF(param.bounds.x, param.bounds.y, width, height);\n        }\n        if (this.rows.count !== 0) {\n            var currentRow = this.rows.getRow(0).cells.getCell(0).style;\n            if (currentRow.borders != null && ((currentRow.borders.left != null && currentRow.borders.left.width !== 1) ||\n                (currentRow.borders.top != null && currentRow.borders.top.width !== 1))) {\n                var x = currentRow.borders.left.width / 2;\n                var y = currentRow.borders.top.width / 2;\n                if (param.bounds.x === PdfBorders.default.right.width / 2 && param.bounds.y === PdfBorders.default.right.width / 2) {\n                    var newBound = new RectangleF(x, y, this.gridSize.width, this.gridSize.height);\n                    param.bounds = newBound;\n                }\n            }\n        }\n        this.setSpan();\n        this.checkSpan();\n        this.layoutFormat = param.format;\n        this.gridLocation = param.bounds;\n        var layouter = new PdfGridLayouter(this);\n        var result = (layouter.Layouter(param));\n        return result;\n    };\n    PdfGrid.prototype.setSpan = function () {\n        var colSpan = 1;\n        var rowSpan = 1;\n        var currentCellIndex = 0;\n        var currentRowIndex = 0;\n        var maxSpan = 0;\n        var rowCount = this.headers.count;\n        for (var i = 0; i < rowCount; i++) {\n            var row = this.headers.getHeader(i);\n            maxSpan = 0;\n            var colCount = row.cells.count;\n            for (var j = 0; j < colCount; j++) {\n                var cell = row.cells.getCell(j);\n                maxSpan = Math.max(maxSpan, cell.rowSpan);\n                //Skip setting span map for already coverted rows/columns.\n                if (!cell.isCellMergeContinue && !cell.isRowMergeContinue && (cell.columnSpan > 1 || cell.rowSpan > 1)) {\n                    if (cell.columnSpan + j > row.cells.count) {\n                        throw new Error('Invalid span specified at row ' + j.toString() + ' column ' + i.toString());\n                    }\n                    if (cell.rowSpan + i > this.headers.count) {\n                        throw new Error('Invalid span specified at Header ' + j.toString() + ' column ' + i.toString());\n                    }\n                    // if (this.rows.count !== 0 && cell.rowSpan + i > this.rows.count) {\n                    //     throw new Error('Invalid span specified at row ' + j.toString() + ' column ' + i.toString());\n                    // }\n                    if (cell.columnSpan > 1 && cell.rowSpan > 1) {\n                        colSpan = cell.columnSpan;\n                        rowSpan = cell.rowSpan;\n                        currentCellIndex = j;\n                        currentRowIndex = i;\n                        cell.isCellMergeStart = true;\n                        cell.isRowMergeStart = true;\n                        //Set Column merges for first row\n                        while (colSpan > 1) {\n                            currentCellIndex++;\n                            row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                            row.cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                            row.cells.getCell(currentCellIndex).rowSpan = rowSpan;\n                            colSpan--;\n                        }\n                        currentCellIndex = j;\n                        colSpan = cell.columnSpan;\n                        //Set Row Merges and column merges foreach subsequent rows.\n                        while (rowSpan > 1) {\n                            currentRowIndex++;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                            rowSpan--;\n                            while (colSpan > 1) {\n                                currentCellIndex++;\n                                this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                colSpan--;\n                            }\n                            colSpan = cell.columnSpan;\n                            currentCellIndex = j;\n                        }\n                    }\n                    else if (cell.columnSpan > 1 && cell.rowSpan === 1) {\n                        colSpan = cell.columnSpan;\n                        currentCellIndex = j;\n                        cell.isCellMergeStart = true;\n                        //Set Column merges.\n                        while (colSpan > 1) {\n                            currentCellIndex++;\n                            row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                            colSpan--;\n                        }\n                    }\n                    else if (cell.columnSpan === 1 && cell.rowSpan > 1) {\n                        rowSpan = cell.rowSpan;\n                        currentRowIndex = i;\n                        //Set row Merges.\n                        while (rowSpan > 1) {\n                            currentRowIndex++;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                            rowSpan--;\n                        }\n                    }\n                }\n            }\n            row.maximumRowSpan = maxSpan;\n        }\n    };\n    PdfGrid.prototype.checkSpan = function () {\n        var cellcolSpan;\n        var cellrowSpan = 1;\n        var cellmaxSpan = 0;\n        var currentCellIndex;\n        var currentRowIndex = 0;\n        cellcolSpan = cellrowSpan = 1;\n        currentCellIndex = currentRowIndex = 0;\n        if (this.hasRowSpanSpan || this.hasColumnSpan) {\n            var rowCount = this.rows.count;\n            for (var i = 0; i < rowCount; i++) {\n                var row = this.rows.getRow(i);\n                cellmaxSpan = 0;\n                var colCount = row.cells.count;\n                for (var j = 0; j < colCount; j++) {\n                    var cell = row.cells.getCell(j);\n                    cellmaxSpan = Math.max(cellmaxSpan, cell.rowSpan);\n                    //Skip setting span map for already coverted rows/columns.\n                    if (!cell.isCellMergeContinue && !cell.isRowMergeContinue\n                        && (cell.columnSpan > 1 || cell.rowSpan > 1)) {\n                        if (cell.columnSpan + j > row.cells.count) {\n                            throw new Error('Invalid span specified at row  ' + j.toString() + ' column ' + i.toString());\n                        }\n                        if (cell.rowSpan + i > this.rows.count) {\n                            throw new Error('Invalid span specified at row  ' + j.toString() + ' column ' + i.toString());\n                        }\n                        if (cell.columnSpan > 1 && cell.rowSpan > 1) {\n                            cellcolSpan = cell.columnSpan;\n                            cellrowSpan = cell.rowSpan;\n                            currentCellIndex = j;\n                            currentRowIndex = i;\n                            cell.isCellMergeStart = true;\n                            cell.isRowMergeStart = true;\n                            //Set Column merges for first row\n                            while (cellcolSpan > 1) {\n                                currentCellIndex++;\n                                row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                row.cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                cellcolSpan--;\n                            }\n                            currentCellIndex = j;\n                            cellcolSpan = cell.columnSpan;\n                            //Set Row Merges and column merges foreach subsequent rows.\n                            while (cellrowSpan > 1) {\n                                currentRowIndex++;\n                                this.rows.getRow(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                                this.rows.getRow(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                cellrowSpan--;\n                                while (cellcolSpan > 1) {\n                                    currentCellIndex++;\n                                    this.rows.getRow(currentRowIndex).cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                    this.rows.getRow(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                    cellcolSpan--;\n                                }\n                                cellcolSpan = cell.columnSpan;\n                                currentCellIndex = j;\n                            }\n                        }\n                        else if (cell.columnSpan > 1 && cell.rowSpan === 1) {\n                            cellcolSpan = cell.columnSpan;\n                            currentCellIndex = j;\n                            cell.isCellMergeStart = true;\n                            //Set Column merges.\n                            while (cellcolSpan > 1) {\n                                currentCellIndex++;\n                                row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                cellcolSpan--;\n                            }\n                        }\n                        else if (cell.columnSpan === 1 && cell.rowSpan > 1) {\n                            cellrowSpan = cell.rowSpan;\n                            currentRowIndex = i;\n                            //Set row Merges.\n                            while (cellrowSpan > 1) {\n                                currentRowIndex++;\n                                this.rows.getRow(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                                cellrowSpan--;\n                            }\n                        }\n                    }\n                }\n                row.maximumRowSpan = cellmaxSpan;\n            }\n        }\n    };\n    PdfGrid.prototype.measureColumnsWidth = function (bounds) {\n        if (typeof bounds !== 'undefined') {\n            this.isPageWidth = false;\n            var widths = this.columns.getDefaultWidths(bounds.width - bounds.x);\n            //let tempWidth : number = this.columns.getColumn(0).width;\n            for (var i = 0, count = this.columns.count; i < count; i++) {\n                // if (this.columns.getColumn(i).width < 0)\n                //     this.columns.getColumn(i).columnWidth = widths[i];\n                // else if (this.columns.getColumn(i).width > 0 && !this.columns.getColumn(i).isCustomWidth && widths[i]>0 && this.isComplete)\n                this.columns.getColumn(i).columnWidth = widths[i];\n                this.tempWidth = widths[i];\n            }\n            if (this.ParentCell != null && this.style.allowHorizontalOverflow == false && this.ParentCell.row.grid.style.allowHorizontalOverflow == false) {\n                var padding = 0;\n                var columnWidth = 0;\n                var columnCount = this.columns.count;\n                var childGridColumnWidth = 0;\n                if (this.ParentCell.style.cellPadding != null || typeof this.ParentCell.style.cellPadding !== 'undefined') {\n                    if (typeof this.ParentCell.style.cellPadding.left != 'undefined' && this.ParentCell.style.cellPadding.hasLeftPad) {\n                        padding += this.ParentCell.style.cellPadding.left;\n                    }\n                    if (typeof this.ParentCell.style.cellPadding.right != 'undefined' && this.ParentCell.style.cellPadding.hasRightPad) {\n                        padding += this.ParentCell.style.cellPadding.right;\n                    }\n                }\n                for (var i = 0; i < this.ParentCell.columnSpan; i++) {\n                    columnWidth += this.ParentCell.row.grid.columns.getColumn(this.parentCellIndex + i).width;\n                }\n                for (var j = 0; j < this.columns.count; j++) {\n                    if (this.gridColumns.getColumn(j).width > 0 && this.gridColumns.getColumn(j).isCustomWidth) {\n                        columnWidth -= this.gridColumns.getColumn(j).width;\n                        columnCount--;\n                    }\n                }\n                if ((this.ParentCell.row.grid.style.cellPadding != null || typeof this.ParentCell.row.grid.style.cellPadding != 'undefined')) {\n                    if (typeof this.ParentCell.row.grid.style.cellPadding.top != 'undefined' && this.ParentCell.row.grid.style.cellPadding.hasTopPad) {\n                        padding += this.ParentCell.row.grid.style.cellPadding.top;\n                    }\n                    if (typeof this.ParentCell.row.grid.style.cellPadding.bottom != 'undefined' && this.ParentCell.row.grid.style.cellPadding.hasBottomPad) {\n                        padding += this.ParentCell.row.grid.style.cellPadding.bottom;\n                    }\n                }\n                if (this.ParentCell.row.grid.style.cellSpacing != 0) {\n                    columnWidth -= this.ParentCell.row.grid.style.cellSpacing * 2;\n                }\n                if (columnWidth > padding) {\n                    childGridColumnWidth = (columnWidth - padding) / columnCount;\n                    this.tempWidth = childGridColumnWidth;\n                    if (this.ParentCell != null) {\n                        for (var j = 0; j < this.columns.count; j++) {\n                            if (!this.columns.getColumn(j).isCustomWidth)\n                                this.columns.getColumn(j).columnWidth = childGridColumnWidth;\n                        }\n                    }\n                }\n            }\n            // if (this.ParentCell != null && this.ParentCell.row.width > 0)\n            // {\n            //     if (this.isChildGrid && this.gridSize.width > this.ParentCell.row.width)\n            //     {\n            //         widths = this.columns.getDefaultWidths(bounds.width);\n            //         for (let i : number = 0; i < this.columns.count; i++)\n            //         {\n            //             this.columns.getColumn(i).width = widths[i];\n            //         }\n            //     }\n            // }\n        }\n        else {\n            var widths = [this.columns.count];\n            for (var n = 0; n < this.columns.count; n++) {\n                widths[n] = 0;\n            }\n            var cellWidth = 0;\n            var cellWidths = 0;\n            if ((typeof this.isChildGrid === 'undefined' && typeof this.gridLocation !== 'undefined') || (this.isChildGrid === null && typeof this.gridLocation !== 'undefined')) {\n                this.initialWidth = this.gridLocation.width;\n            }\n            if (this.headers.count > 0) {\n                var colCount_1 = this.headers.getHeader(0).cells.count;\n                var rowCount = this.headers.count;\n                for (var i = 0; i < colCount_1; i++) {\n                    cellWidth = 0;\n                    for (var j = 0; j < rowCount; j++) {\n                        var rowWidth = Math.min(this.initialWidth, this.headers.getHeader(j).cells.getCell(i).width);\n                        cellWidth = Math.max(cellWidth, rowWidth);\n                    }\n                    widths[i] = cellWidth;\n                }\n            }\n            // else {\n            //     let colCount : number = this.rows.getRow(0).cells.count;\n            //     let rowCount : number = this.rows.count;\n            //     for (let i : number = 0; i < colCount; i++) {\n            //         cellWidth = 0;\n            //         for (let j : number = 0; j < rowCount; j++) {\n            //             let rowWidth : number = Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width);\n            //             cellWidth = Math.max(cellWidth, rowWidth);\n            //         }\n            //         widths[i] = cellWidth;\n            //     }\n            // }\n            cellWidth = 0;\n            for (var i = 0, colCount_2 = this.columns.count; i < colCount_2; i++) {\n                for (var j = 0, rowCount = this.rows.count; j < rowCount; j++) {\n                    if ((this.rows.getRow(j).cells.getCell(i).columnSpan == 1 && !this.rows.getRow(j).cells.getCell(i).isCellMergeContinue) || this.rows.getRow(j).cells.getCell(i).value != null) {\n                        if (this.rows.getRow(j).cells.getCell(i).value != null && !this.rows.getRow(j).grid.style.allowHorizontalOverflow) {\n                            var value = this.rows.getRow(j).grid.style.cellPadding.right +\n                                this.rows.getRow(j).grid.style.cellPadding.left\n                                + this.rows.getRow(j).cells.getCell(i).style.borders.left.width / 2;\n                            //  if (this.initialWidth != 0 )\n                            //         (this.rows.getRow(j).cells.getCell(i).value as PdfGrid).initialWidth = this.initialWidth - value;\n                        }\n                        var rowWidth = 0;\n                        rowWidth = this.initialWidth > 0.0 ? Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width) : this.rows.getRow(j).cells.getCell(i).width;\n                        // let internalWidth : number = this.rows.getRow(j).cells.getCell(i).width;\n                        // internalWidth += this.rows.getRow(j).cells.getCell(i).style.borders.left.width;\n                        // internalWidth += this.rows.getRow(j).cells.getCell(i).style.borders.right.width;\n                        // let internalHeight : number = this.rows.getRow(j).cells.getCell(i).height;\n                        // internalHeight += (this.rows.getRow(j).cells.getCell(i).style.borders.top.width);\n                        // internalHeight += (this.rows.getRow(j).cells.getCell(i).style.borders.bottom.width);\n                        // let isCorrectWidth : boolean = (internalWidth + this.gridLocation.x) > this.currentGraphics.clientSize.width;\n                        // let isCorrectHeight : boolean = (internalHeight + this.gridLocation.y) > this.currentGraphics.clientSize.height;\n                        // if (isCorrectWidth || isCorrectHeight) {\n                        //     throw Error('Image size exceeds client size of the page. Can not insert this image');\n                        // }\n                        // rowWidth = Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width);\n                        cellWidth = Math.max(widths[i], Math.max(cellWidth, rowWidth));\n                        cellWidth = Math.max(this.columns.getColumn(i).width, cellWidth);\n                    }\n                }\n                if (this.rows.count != 0)\n                    widths[i] = cellWidth;\n                cellWidth = 0;\n            }\n            for (var i = 0, RowCount = this.rows.count; i < RowCount; i++) {\n                for (var j = 0, ColCount = this.columns.count; j < ColCount; j++) {\n                    if (this.rows.getRow(i).cells.getCell(j).columnSpan > 1) {\n                        var total = widths[j];\n                        for (var k = 1; k < this.rows.getRow(i).cells.getCell(j).columnSpan; k++) {\n                            total += widths[j + k];\n                        }\n                        // if (this.rows.getRow(i).cells.getCell(j).width > total)\n                        // {\n                        //     let extendedWidth : number = this.rows.getRow(i).cells.getCell(j).width - total;\n                        //     extendedWidth = extendedWidth / this.rows.getRow(i).cells.getCell(j).columnSpan;\n                        //     for (let k : number = j; k < j + this.rows.getRow(i).cells.getCell(j).columnSpan; k++)\n                        //         widths[k] += extendedWidth;\n                        // }\n                    }\n                }\n            }\n            // if (this.isChildGrid && this.initialWidth != 0)\n            // {\n            //     widths = this.columns.getDefaultWidths(this.initialWidth);\n            // }\n            for (var i = 0, count = this.columns.count; i < count; i++) {\n                if (this.columns.getColumn(i).width <= 0)\n                    this.columns.getColumn(i).columnWidth = widths[i];\n                else if (this.columns.getColumn(i).width > 0 && !this.columns.getColumn(i).isCustomWidth)\n                    this.columns.getColumn(i).columnWidth = widths[i];\n            }\n            var padding = 0;\n            var colWidth = 0;\n            var colCount = this.columns.count;\n            var childGridColWidth = 0;\n            colWidth = this.tempWidth;\n            for (var j = 0; j < this.columns.count; j++) {\n                if (this.gridColumns.getColumn(j).width > 0 && this.gridColumns.getColumn(j).isCustomWidth) {\n                    colWidth -= this.gridColumns.getColumn(j).width;\n                    colCount--;\n                }\n            }\n            // if (this.style.cellSpacing != 0){\n            //     colWidth -= this.style.cellSpacing * 2;\n            // }\n            if (colWidth > 0) {\n                if (this.ParentCell.row.grid.style.cellSpacing != 0) {\n                    colWidth -= this.ParentCell.row.grid.style.cellSpacing * 2;\n                }\n            }\n            if (colWidth > padding) {\n                childGridColWidth = (colWidth) / colCount;\n                if (this.ParentCell != null) {\n                    for (var j = 0; j < this.columns.count; j++) {\n                        if (!this.columns.getColumn(j).isCustomWidth)\n                            this.columns.getColumn(j).columnWidth = childGridColWidth;\n                    }\n                }\n            }\n        }\n    };\n    return PdfGrid;\n}(PdfLayoutElement));\nexport { PdfGrid };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfGrid } from '../pdf-grid';\nimport { PdfStringFormat } from './../../../graphics/fonts/pdf-string-format';\nimport { SizeF, RectangleF, PointF } from './../../../drawing/pdf-drawing';\nimport { PdfBorders } from '../styles/pdf-borders';\nimport { PdfLayoutType, PdfLayoutBreakType } from './../../../graphics/figures/enum';\nimport { PdfLayoutResult, PdfLayoutFormat, ElementLayouter } from './../../../graphics/figures/base/element-layouter';\nimport { PdfHorizontalOverflowType } from '../styles/style';\nimport { TemporaryDictionary } from './../../../collections/object-object-pair/dictionary';\nimport { PdfStringLayouter } from './../../../graphics/fonts/string-layouter';\nimport { PdfDocument } from './../../../document/pdf-document';\n/**\n * Class `lay outing the text`.\n *\n */\nvar PdfGridLayouter = /** @class */ (function (_super) {\n    __extends(PdfGridLayouter, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGrid` class.\n     * @private\n     */\n    function PdfGridLayouter(baseFormat) {\n        var _this = _super.call(this, baseFormat) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridInitialWidth = 0;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridSize = new SizeF(0, 0);\n        _this.parentCellIndex = 0;\n        _this.tempWidth = 0;\n        _this.childheight = 0;\n        /**\n         * Check weather it is `child grid or not`.\n         * @private\n         */\n        _this.isChildGrid = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.hasRowSpanSpan = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isRearranged = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.pageBounds = new RectangleF();\n        /**\n         * @hidden\n         * @private\n         */\n        _this.listOfNavigatePages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.flag = true;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.columnRanges = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.currentLocation = new PointF(0, 0);\n        /**\n         * @hidden\n         * @private\n         */\n        _this.breakRow = true;\n        _this.slr = null;\n        _this.remainderText = null;\n        _this.isPaginate = false;\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        _this.isOverloadWithPosition = false;\n        return _this;\n    }\n    Object.defineProperty(PdfGridLayouter.prototype, \"Grid\", {\n        //Properties\n        get: function () {\n            return this.elements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringLayouter` class.\n     * @private\n     */\n    //Public methods\n    /**\n     * `Layouts` the text.\n     * @private\n     */\n    /**\n     * `Layouts` the specified graphics.\n     * @private\n     */\n    /**\n     * `Layouts` the specified graphics.\n     * @private\n     */\n    /*public layout(graphics : PdfLayoutParams) : PdfLayoutResult\n    public layout(graphics : PdfGraphics, bounds : RectangleF) : void\n    public layout(graphics : PdfGraphics, bounds : PointF) : void\n    public layout(graphics ?: PdfGraphics | PdfLayoutParams, bounds ?: PointF | RectangleF) : void | PdfLayoutResult  {\n        if (graphics instanceof PdfGraphics) {\n        if (bounds instanceof PointF) {\n            if (bounds.x === 0) {\n                bounds.x = PdfBorders.default.right.width / 2;\n            }\n            if (bounds.y === 0) {\n                bounds.y = PdfBorders.default.top.width / 2;\n            }\n            let boundaries : RectangleF = new RectangleF(bounds, new SizeF(0, 0));\n            this.layout(graphics, boundaries);\n        } else {\n            let width : number = graphics.clientSize.width;\n            let parameter : PdfLayoutParams = new PdfLayoutParams();\n            parameter.bounds = bounds;\n            this.currentGraphics = graphics;\n            if (graphics.layer != null) {\n                let index : number = 0;\n                if (this.currentGraphics.page instanceof PdfPage) {\n                    index = (this.currentGraphics.page as PdfPage).section.indexOf(this.currentGraphics.page as PdfPage);\n                } else {\n                    index = (this.currentGraphics.page as PdfPageBase).defaultLayerIndex;\n                }\n            } else {\n                this.layoutInternal(parameter);\n            }\n        }\n    }\n    }*/\n    /**\n     * Gets the `format`.\n     * @private\n     */\n    PdfGridLayouter.prototype.getFormat = function (format) {\n        var f = format;\n        return f;\n    };\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    PdfGridLayouter.prototype.layoutInternal = function (param) {\n        var format = this.getFormat(param.format);\n        this.gridLayoutFormat = this.getFormat(param.format);\n        this.currentPage = param.page;\n        if (this.currentPage !== null) {\n            var pageHeight = this.currentPage.getClientSize().height;\n            var pageWidth = this.currentPage.getClientSize().width;\n            this.currentPageBounds = this.currentPage.getClientSize();\n        }\n        else {\n            throw Error('Can not set page as null');\n            //this.currentPageBounds = this.currentGraphics.clientSize;\n        }\n        this.currentGraphics = this.currentPage.graphics;\n        //this.currentGraphics = (this.currentPage != null ) ? this.currentPage.graphics : this.currentGraphics;\n        // if (this.currentGraphics.layer !== null) {\n        //     let index : number = 0;\n        //     if (this.currentGraphics.page instanceof PdfPage) {\n        //         index = (this.currentGraphics.page as PdfPage).section.indexOf(this.currentGraphics.page as PdfPage);\n        //     } else {\n        //         index = (this.currentGraphics.page as PdfPageBase).defaultLayerIndex;\n        //     }\n        //     this.listOfNavigatePages.push(index);\n        // }\n        var index = 0;\n        index = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n        this.listOfNavigatePages.push(index);\n        if (format != null && format.break === PdfLayoutBreakType.FitColumnsToPage) {\n            this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), new SizeF(this.Grid.columns.width, this.currentGraphics.clientSize.height));\n        }\n        else {\n            this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), this.currentGraphics.clientSize);\n        }\n        //this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), this.currentGraphics.clientSize);\n        if (this.Grid.rows.count !== 0) {\n            this.currentBounds.width = (param.bounds.width > 0) ? param.bounds.width :\n                (this.currentBounds.width - this.Grid.rows.getRow(0).cells.getCell(0).style.borders.left.width / 2);\n        }\n        else if (this.Grid.headers.count !== 0) {\n            // this.currentBounds.width = (param.bounds.width > 0) ? param.bounds.width : (this.currentBounds.width -\n            //                                 this.Grid.headers.getHeader(0).cells.getCell(0).style.borders.left.width / 2);\n            this.currentBounds.width = param.bounds.width;\n        }\n        else {\n            throw Error('Please add row or header into grid');\n        }\n        this.startLocation = new PointF(param.bounds.x, param.bounds.y);\n        // if (this.Grid.style.allowHorizontalOverflow && this.currentBounds.width > this.currentGraphics.clientSize.width) {\n        //     this.currentBounds.width = this.currentGraphics.clientSize.width;\n        //     this.currentBounds.width -= this.currentBounds.x;\n        // }\n        // if (this.Grid.isChildGrid) {\n        //     this.childheight = param.bounds.height;\n        // }\n        // if (param.format !== null && param.format.usePaginateBounds) {\n        //     if (param.format.paginateBounds.height > 0) {\n        //         this.currentBounds.height = param.format.paginateBounds.height;\n        //     }\n        //} else \n        if (param.bounds.height > 0 && !this.Grid.isChildGrid) {\n            this.currentBounds.height = param.bounds.height;\n        }\n        if (!this.Grid.isChildGrid) {\n            this.hType = this.Grid.style.horizontalOverflowType;\n        }\n        if (!this.Grid.style.allowHorizontalOverflow) {\n            this.columnRanges = [];\n            if (typeof this.Grid.isChildGrid !== 'undefined' && typeof this.Grid.isChildGrid) {\n                this.Grid.measureColumnsWidth(this.currentBounds);\n            }\n            else {\n                this.Grid.measureColumnsWidth(new RectangleF(this.currentBounds.x, this.currentBounds.y, this.currentBounds.x + this.currentBounds.width, this.currentBounds.height));\n            }\n            this.columnRanges.push([0, this.Grid.columns.count - 1]);\n        }\n        else {\n            this.Grid.measureColumnsWidth();\n            this.determineColumnDrawRanges();\n        }\n        if (this.Grid.hasRowSpanSpan) {\n            for (var i = 0; i < this.Grid.rows.count; i++) {\n                if (this.Grid.rows.getRow(i).height !== -1 && !this.Grid.rows.getRow(i).isRowHeightSet) {\n                    this.Grid.rows.getRow(i).isRowHeightSet = true;\n                }\n            }\n        }\n        var result = this.layoutOnPage(param);\n        return result;\n    };\n    // /* tslint:enable */\n    /**\n     * `Determines the column draw ranges`.\n     * @private\n     */\n    PdfGridLayouter.prototype.determineColumnDrawRanges = function () {\n        var startColumn = 0;\n        var endColumn = 0;\n        var cellWidths = 0;\n        var availableWidth = this.currentGraphics.clientSize.width - this.currentBounds.x;\n        for (var i = 0; i < this.Grid.columns.count; i++) {\n            cellWidths += this.Grid.columns.getColumn(i).width;\n            if (cellWidths >= availableWidth) {\n                var subWidths = 0;\n                for (var j = startColumn; j <= i; j++) {\n                    subWidths += this.Grid.columns.getColumn(j).width;\n                    if (subWidths > availableWidth) {\n                        break;\n                    }\n                    endColumn = j;\n                }\n                this.columnRanges.push([startColumn, endColumn]);\n                startColumn = endColumn + 1;\n                endColumn = startColumn;\n                cellWidths = (endColumn <= i) ? this.Grid.columns.getColumn(i).width : 0;\n            }\n        }\n        // if (startColumn !== this.columns.Count) {\n        this.columnRanges.push([startColumn, this.Grid.columns.count - 1]);\n        // }\n    };\n    /**\n     * `Layouts the on page`.\n     * @private\n     */\n    PdfGridLayouter.prototype.layoutOnPage = function (param) {\n        /* tslint:disable */\n        this.pageBounds.x = param.bounds.x;\n        this.pageBounds.y = param.bounds.y;\n        this.pageBounds.height = param.bounds.height;\n        var format = this.getFormat(param.format);\n        var endArgs = null;\n        var result = null;\n        var layoutedPages = new TemporaryDictionary();\n        var startPage = param.page;\n        var isParentCell = false;\n        var cellBounds = [];\n        for (var index = 0; index < this.columnRanges.length; index++) {\n            var range = this.columnRanges[index];\n            this.cellStartIndex = range[0];\n            this.cellEndIndex = range[1];\n            var returnObject = this.raiseBeforePageLayout(this.currentPage, this.currentBounds, this.currentRowIndex);\n            this.currentBounds = returnObject.currentBounds;\n            this.currentRowIndex = returnObject.currentRowIndex;\n            // if (returnObject.returnValue) {\n            //     result = new PdfGridLayoutResult(this.currentPage, this.currentBounds);\n            //     break;\n            // }\n            //Draw Headers.\n            var drawHeader = void 0;\n            for (var i_1 = 0; i_1 < this.Grid.headers.count; i_1++) {\n                var row = this.Grid.headers.getHeader(i_1);\n                var headerHeight = this.currentBounds.y;\n                this.isHeader = true;\n                if (startPage != this.currentPage) {\n                    for (var k = this.cellStartIndex; k <= this.cellEndIndex; k++) {\n                        if (row.cells.getCell(k).isCellMergeContinue) {\n                            row.cells.getCell(k).isCellMergeContinue = false;\n                            row.cells.getCell(k).value = \"\";\n                        }\n                    }\n                }\n                // RowLayoutResult\n                var headerResult = this.drawRow(row);\n                if (headerHeight === this.currentBounds.y) {\n                    drawHeader = true;\n                    if (PdfGridLayouter.repeatRowIndex === -1) {\n                        PdfGridLayouter.repeatRowIndex = i_1;\n                    }\n                }\n                else {\n                    drawHeader = false;\n                }\n                if (!headerResult.isFinish && startPage !== null\n                    && format.layout !== PdfLayoutType.OnePage && drawHeader) {\n                    this.startLocation.x = this.currentBounds.x;\n                    this.currentPage = this.getNextPageformat(format);\n                    this.startLocation.y = this.currentBounds.y;\n                    if (typeof format.paginateBounds !== 'undefined' && format.paginateBounds.x === 0 && format.paginateBounds.y === 0 && format.paginateBounds.width === 0 && format.paginateBounds.height === 0)\n                        this.currentBounds.x += this.startLocation.x;\n                    this.drawRow(row);\n                }\n                this.isHeader = false;\n            }\n            var i = 0;\n            var length_1 = this.Grid.rows.count;\n            var repeatRow = void 0;\n            var startingHeight = 0;\n            var flag = true;\n            //Here is to draw parent Grid and Cells\n            cellBounds = [];\n            //Draw row by row with the specified cell range.\n            for (var j = 0; j < this.Grid.rows.count; j++) {\n                var row = this.Grid.rows.getRow(j);\n                i++;\n                this.currentRowIndex = i - 1;\n                var originalHeight = this.currentBounds.y;\n                startPage = this.currentPage;\n                PdfGridLayouter.repeatRowIndex = -1;\n                if (flag && row.grid.isChildGrid) {\n                    startingHeight = originalHeight;\n                    flag = false;\n                }\n                var rowResult = null;\n                ///rowResult = this.drawRow(row);\n                /*if(!row.isrowFinish) {\n                    if(!row.grid.isgridSplit){\n                        rowResult = this.drawRow(row);\n                        row.isrowFinish = true;\n                        row.isrowDraw = true;\n                    } else {\n                        if(!row.isrowDraw){\n                            rowResult = this.drawRow(row);\n                            row.isrowFinish = true;\n                            row.isrowDraw = true;\n                            row.grid.isgridSplit = false;\n                        } else {\n                            rowResult =  null;\n                            break;\n                        }\n                    }\n                }\n                else {\n                    //row.isrowFinish = false;\n                    //rowResult = this.drawRow(row);\n                    rowResult = null;\n                    break;\n                    \n                }             */\n                if (this.Grid.splitChildRowIndex == -1) {\n                    rowResult = this.drawRow(row);\n                    row.isrowFinish = true;\n                }\n                else {\n                    if (row.grid.ParentCell.row.grid.isGridSplit && this.Grid.splitChildRowIndex <= row.rowIndex) {\n                        rowResult = this.drawRow(row);\n                        row.isrowFinish = true;\n                    }\n                    else if (row.isrowFinish) {\n                        continue;\n                    }\n                    else {\n                        break;\n                    }\n                }\n                //rowResult = this.drawRow(row);\n                cellBounds.push(rowResult.bounds.width);\n                /*if (row.isRowBreaksNextPage)\n                    {\n                        let x : number  = 0;\n                        for (let l : number = 0; l < row.cells.count; l++)\n                        {\n                            let isNestedRowBreak : boolean = false;\n                            if (row.height == row.cells.getCell(l).height)\n                            {\n                                let n : number;\n                                let grid : PdfGrid = row.cells.getCell(l).value as PdfGrid;\n                                for (let m : number = grid.rows.count; 0 < m; m--)\n                                {\n                                    if ((grid.rows.getRow(m - 1).rowBreakHeight > 0))\n                                    {\n                                        isNestedRowBreak = true;\n                                        break;\n                                    }\n                                    if (grid.rows.getRow(m - 1).isRowBreaksNextPage)\n                                    {\n                                        row.rowBreakHeightValue = grid.rows.getRow(m - 1).rowBreakHeightValue;\n                                        break;\n                                    }\n                                    row.rowBreakHeightValue += grid.rows.getRow(m - 1).height;\n                                }\n                            }\n                            if (isNestedRowBreak)\n                                break;\n                        }\n                        for (let j : number = 0; j < row.cells.count; j++)\n                        {\n\n                            if (row.height > row.cells.getCell(j).height)\n                            {\n                                row.cells.getCell(j).value = \" \";\n                                let rect : RectangleF ;\n                                let page : PdfPage = this.getNextPage(this.currentPage);\n                                let section : PdfSection = this.currentPage.section;\n                                let index : number = section.indexOf(page);\n                                for (let k : number = 0; k < (section.count - 1) - index; k++)\n                                {\n                                    rect = new RectangleF(x, 0, row.grid.columns.getColumn(j).width, page.getClientSize().height);\n                                    PdfGridLayouter.repeatRowIndex = -1;\n                                    row.cells.getCell(j).draw(page.graphics, rect, false);\n                                    page = this.getNextPage(page);\n                                }\n                                rect = new RectangleF(x, 0, row.grid.columns.getColumn(j).width, row.rowBreakHeightValue);\n\n                                row.cells.getCell(j).draw(page.graphics, rect, false);\n                            }\n                            x += row.grid.columns.getColumn(j).width;\n                        }\n                    }*/\n                //if height remains same, it is understood that row is not drawn in the page\n                if (originalHeight === this.currentBounds.y) {\n                    repeatRow = true;\n                    PdfGridLayouter.repeatRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                }\n                else {\n                    repeatRow = false;\n                    PdfGridLayouter.repeatRowIndex = -1;\n                }\n                while (!rowResult.isFinish && startPage != null) {\n                    var tempResult = this.getLayoutResult();\n                    /*if (startPage != this.currentPage)\n                        {\n                            if (row.grid.isChildGrid && row.grid.ParentCell != null)\n                            {\n                                let bounds : RectangleF= new RectangleF(new PointF(format.paginateBounds.x,format.paginateBounds.y), new SizeF(param.bounds.width, tempResult.bounds.height));\n                                bounds.x += param.bounds.x;\n                                if (row.grid.ParentCell.row.grid.style.cellPadding != null)\n                                {\n                                    bounds.y += row.grid.ParentCell.row.grid.style.cellPadding.top;\n                                    if (bounds.height > this.currentPageBounds.height)\n                                    {\n                                        bounds.height = this.currentPageBounds.height - bounds.y;\n                                        bounds.height -= (row.grid.ParentCell.row.grid.style.cellPadding.bottom);\n                                    }\n                                }\n                                // Draw border for cells in the nested grid cell's row.\n                                for (let c : number = 0; c < row.cells.count; c++)\n                                {\n                                    let cell : PdfGridCell = row.cells.getCell(c);\n                                    let cellWidth :  number= 0;\n                                    if (cell.columnSpan > 1)\n                                    {\n                                        for (; c < cell.columnSpan; c++)\n                                            cellWidth += row.grid.columns.getColumn(c).width;\n                                    }\n                                    else\n                                        cellWidth = Math.max(cell.width, row.grid.columns.getColumn(c).width);\n                                    cell.drawCellBorders(this.currentGraphics, new RectangleF(new PointF(bounds.x,bounds.y), new SizeF(cellWidth, bounds.height)));\n                                    bounds.x += cellWidth;\n                                    c += (cell.columnSpan - 1);\n                                }\n                            }\n                        }\n                        */\n                    endArgs = this.raisePageLayouted(tempResult);\n                    if (endArgs.cancel || repeatRow)\n                        break;\n                    else if (this.Grid.allowRowBreakAcrossPages) {\n                        //If there is no space in the current page, add new page and then draw the remaining row.\n                        this.currentPage = this.getNextPageformat(format);\n                        originalHeight = this.currentBounds.y;\n                        var location_1 = new PointF(PdfBorders.default.right.width / 2, PdfBorders.default.top.width / 2);\n                        if ((format.paginateBounds.x === 0 && format.paginateBounds.y === 0 && format.paginateBounds.width === 0 &&\n                            format.paginateBounds.height === 0) && (this.startLocation.x === location_1.x && this.startLocation.y === location_1.y)) {\n                            this.currentBounds.x += this.startLocation.x;\n                            this.currentBounds.y += this.startLocation.y;\n                        }\n                        if (this.isPaginate) {\n                            this.startLocation.y = this.currentBounds.y;\n                            this.isPaginate = false;\n                        }\n                        if (this.Grid.isChildGrid && row.grid.ParentCell != null) {\n                            if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                                if (row.rowBreakHeight + this.Grid.ParentCell.row.grid.style.cellPadding.top < this.currentBounds.height) {\n                                    this.currentBounds.y = this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                                }\n                            }\n                        }\n                        if (row.grid.ParentCell != null) {\n                            row.grid.ParentCell.row.isRowBreaksNextPage = true;\n                            row.grid.ParentCell.row.rowBreakHeightValue = row.rowBreakHeight + this.Grid.ParentCell.row.grid.style.cellPadding.top + this.Grid.ParentCell.row.grid.style.cellPadding.bottom;\n                            for (var i_2 = row.rowIndex + 1; i_2 < row.grid.rows.count; i_2++) {\n                                row.grid.ParentCell.row.rowBreakHeightValue += row.grid.rows.getRow(i_2).height;\n                            }\n                            //row.rowBreakHeight = row.grid.ParentCell.row.rowBreakHeightValue;\n                        }\n                        /*if (row.noOfPageCount > 1)\n                        {\n                            let temp : number = row.rowBreakHeightValue;\n                            for (let j : number = 1; j < row.noOfPageCount; j++)\n                            {\n                                row.rowBreakHeightValue = 0;\n                                row.height = ((row.noOfPageCount - 1) * this.currentPage.getClientSize().height);\n                                this.drawRow(row);\n                                this.currentPage = this.getNextPageformat(format);\n                                startPage = this.currentPage;\n                            }\n                            row.rowBreakHeightValue = temp;\n                            row.noOfPageCount = 1;\n                            rowResult = this.drawRow(row);\n                        } else {\n                            rowResult = this.drawRow(row);\n                        }\n                        /*if(row.grid.isChildGrid){\n                            row.isrowFinish = false;\n                            row.isrowDraw = false;\n                            row.grid.isgridSplit = true;\n                            row.grid.ParentCell.row.grid.isgridSplit = true;\n                            //rowResult.isFinish = false;\n                            break;\n                        }*/\n                        if (row.grid.isChildGrid) {\n                            //row.grid.isgridSplit = true;\n                            row.isrowFinish = false;\n                            //row.grid.ParentCell.row.grid.isgridSplit = true;\n                            row.grid.splitChildRowIndex = row.rowIndex;\n                            row.grid.ParentCell.row.grid.splitChildRowIndex = row.grid.ParentCell.row.rowIndex;\n                            if (row.grid.ParentCell.row.grid.isGridSplit) {\n                                row.grid.ParentCell.row.noOfPageCount += 1;\n                                row.grid.ParentCell.row.grid.isGridSplit = false;\n                            }\n                            break;\n                        }\n                        if (row.noOfPageCount < 1) {\n                            if (row.grid.splitChildRowIndex != -1) {\n                                row.grid.isGridSplit = true;\n                            }\n                            if (row.style.border != null && ((row.style.border.left != null && row.style.border.left.width !== 1)\n                                || (row.style.border.top != null && row.style.border.top.width !== 1))) {\n                                var x = row.style.border.left.width / 2;\n                                var y = row.style.border.top.width / 2;\n                                if (this.currentBounds.x === PdfBorders.default.right.width / 2 && this.currentBounds.y === PdfBorders.default.right.width / 2) {\n                                    var newBound = new RectangleF(x, y, this.currentBounds.width, this.currentBounds.height);\n                                    this.currentBounds = newBound;\n                                }\n                            }\n                            if (this.Grid.repeatHeader) {\n                                for (var j_1 = 0; j_1 < this.Grid.headers.count; j_1++) {\n                                    var headerRepeat = this.Grid.headers.getHeader(j_1);\n                                    this.drawRow(headerRepeat);\n                                }\n                            }\n                            rowResult = this.drawRow(row);\n                            if (row.noOfPageCount >= 1) {\n                                var temp = row.rowBreakHeightValue;\n                                for (var j_2 = 0; j_2 < row.noOfPageCount; j_2++) {\n                                    //this.currentPage.section.add();\n                                    var tempResult1 = this.getLayoutResult();\n                                    endArgs = this.raisePageLayouted(tempResult1);\n                                    this.currentPage = this.getNextPageformat(format);\n                                    originalHeight = this.currentBounds.y;\n                                    //row.rowBreakHeightValue = 0;\n                                    if (row.grid.splitChildRowIndex != -1) {\n                                        row.grid.isGridSplit = true;\n                                    }\n                                    this.currentBounds.y = 0.5;\n                                    if (this.Grid.repeatHeader) {\n                                        for (var i_3 = 0; i_3 < this.Grid.headers.count; i_3++) {\n                                            var header = this.Grid.headers.getHeader(i_3);\n                                            this.drawRow(header);\n                                        }\n                                    }\n                                    //row.height = ((row.noOfPageCount - 1) * this.currentPage.getClientSize().height);\n                                    this.drawRow(row);\n                                }\n                                // row.rowBreakHeight = temp;\n                                // row.noOfPageCount = 1;\n                                // rowResult = this.drawRow(row);\n                            }\n                            row.grid.splitChildRowIndex = -1;\n                            row.grid.isGridSplit = false;\n                            rowResult.isFinish = this.checkIsFisished(row);\n                            //row.NestedGridLayoutResult.bounds.height = row.rowBreakHeightValue;\n                            //this.currentBounds.y = rowResult.bounds.y;\n                            for (var i_4 = 0; i_4 < row.cells.count; i_4++) {\n                                if (row.cells.getCell(i_4).value instanceof PdfGrid) {\n                                    row.cells.getCell(i_4).value.splitChildRowIndex = -1;\n                                }\n                            }\n                        }\n                    }\n                    // else if (!this.Grid.allowRowBreakAcrossPages && i < length)\n                    // {\n                    //     this.currentPage = this.getNextPageformat(format);\n                    //     break;\n                    // }\n                    // else if (i >= length)\n                    //     break;\n                }\n                if (!rowResult.isFinish && startPage !== null && format.layout !== PdfLayoutType.OnePage && repeatRow) {\n                    // During pagination, cell position is maintained here.\n                    this.startLocation.x = this.currentBounds.x;\n                    var isAddNextPage = false;\n                    this.currentPage = this.getNextPageformat(format);\n                    /*if (!this.Grid.isSingleGrid)\n                    {\n                        for ( let j : number= 0; j < this.Grid.rows.count; j++)\n                        {\n                            let isWidthGreaterthanParent : boolean = false;\n                            for (let k : number = 0; k < this.Grid.rows.getRow(j).cells.count; k++)\n                            {\n                                if (this.Grid.rows.getRow(j).cells.getCell(k).width > this.currentPageBounds.width)\n                                    isWidthGreaterthanParent = true;\n                            }\n                            if (isWidthGreaterthanParent && this.Grid.rows.getRow(j).cells.getCell(this.rowBreakPageHeightCellIndex).pageCount > 0)\n                            {\n                                isAddNextPage = true;\n                            }\n                        }\n                    }\n                    if (!this.Grid.isRearranged && isAddNextPage)\n                         {\n                             let section : PdfSection = this.currentPage.section;\n                             \n                             //this.currentPage = section.add();\n                         \n                             this.currentGraphics = this.currentPage.graphics;\n                             this.currentBounds = new RectangleF(new PointF(0,0), this.currentPage.getClientSize());\n                          \n                             let pageindex  : number = (this.currentGraphics.page as PdfPage).section.indexOf(this.currentGraphics.page as PdfPage);\n                         }\n                         else\n                         {\n                             this.currentPage = this.getNextPageformat(format);\n                         }\n                         if (format.paginateBounds.y == 0)\n                             this.currentBounds.y = PdfBorders.default.top.width/2;\n                         else\n                         {\n                             this.currentBounds.y = format == null ? 0 : format.paginateBounds.y;\n                             \n                         }*/\n                    if (this.raiseBeforePageLayout(this.currentPage, this.currentBounds, this.currentRowIndex).returnValue) {\n                        break;\n                    }\n                    if ((param.format !== null) && !param.format.usePaginateBounds && param.bounds !== null &&\n                        param.bounds.height > 0 && !this.Grid.isChildGrid) {\n                        this.currentBounds.height = param.bounds.height;\n                    }\n                    if (typeof param.format !== 'undefined' && param.format != null && typeof param.format.usePaginateBounds !== 'undefined' && !param.format.usePaginateBounds && !(param.format.paginateBounds.x === 0 && param.format.paginateBounds.y === 0 && param.format.paginateBounds.width === 0 && param.format.paginateBounds.height === 0) && param.format.paginateBounds.y === 0) {\n                        this.currentBounds.y = PdfBorders.default.top.width / 2;\n                    }\n                    else {\n                        this.currentBounds.y = format == null ? 0 : format.paginateBounds.y;\n                        if (format != null && (format.paginateBounds.x !== 0 || format.paginateBounds.y !== 0 || format.paginateBounds.height !== 0 || format.paginateBounds.width !== 0)) {\n                            this.currentBounds.x = format.paginateBounds.x;\n                            this.currentBounds.width = format.paginateBounds.width;\n                            this.currentBounds.height = format.paginateBounds.height;\n                        }\n                    }\n                    if (typeof param.format !== 'undefined' && (param.format !== null) && typeof param.format.usePaginateBounds !== 'undefined' && !param.format.usePaginateBounds && param.bounds !== null &&\n                        param.bounds.y > 0 && !this.Grid.isChildGrid) {\n                        this.currentBounds.y = param.bounds.y;\n                    }\n                    this.startLocation.y = this.currentBounds.y;\n                    if ((format.paginateBounds.x === format.paginateBounds.y) &&\n                        (format.paginateBounds.y === format.paginateBounds.height) &&\n                        (format.paginateBounds.height === format.paginateBounds.width) && (format.paginateBounds.width === 0)) {\n                        this.currentBounds.x += this.startLocation.x;\n                    }\n                    if (this.currentBounds.x === PdfBorders.default.left.width / 2) {\n                        this.currentBounds.y += this.startLocation.x;\n                    }\n                    if (this.Grid.repeatHeader) {\n                        for (var i_5 = 0; i_5 < this.Grid.headers.count; i_5++) {\n                            var header = this.Grid.headers.getHeader(i_5);\n                            this.drawRow(header);\n                        }\n                    }\n                    this.drawRow(row);\n                    if (this.currentPage !== null && !layoutedPages.containsKey(this.currentPage)) {\n                        layoutedPages.add(this.currentPage, range);\n                    }\n                }\n                if (row.NestedGridLayoutResult != null) {\n                    // Position for next row in the grid.\n                    this.currentPage = row.NestedGridLayoutResult.page;\n                    this.currentGraphics = this.currentPage.graphics; //If not, next row will not be drawn in the layouted page.\n                    this.startLocation = new PointF(row.NestedGridLayoutResult.bounds.x, row.NestedGridLayoutResult.bounds.y);\n                    var recalHeight = this.ReCalculateHeight(row, row.NestedGridLayoutResult.bounds.height);\n                    this.currentBounds.y = recalHeight;\n                    //this.currentBounds.y = row.NestedGridLayoutResult.bounds.height;\n                    if (startPage != this.currentPage) {\n                        var secion = this.currentPage.section;\n                        var startIndex = secion.indexOf(startPage) + 1;\n                        var endIndex = secion.indexOf(this.currentPage);\n                        for (var page = startIndex; page < endIndex + 1; page++) {\n                            var pageGraphics = this.currentPage.graphics;\n                            var location_2 = new PointF(format.paginateBounds.x, format.paginateBounds.y);\n                            var height = page == endIndex ? (row.NestedGridLayoutResult.bounds.height - param.bounds.y) :\n                                (this.currentBounds.height - location_2.y);\n                            if (height <= pageGraphics.clientSize.height)\n                                height += param.bounds.y;\n                            // if (row.grid.isChildGrid && row.grid.ParentCell != null)\n                            //     location.x += param.bounds.x;\n                            location_2.y = format == null ? 0.5 : format.paginateBounds.y;\n                            // Draw border for last paginated row containing nested grid.\n                            for (var c = 0; c < row.cells.count; c++) {\n                                var cell = row.cells.getCell(c);\n                                var cellWidth = 0;\n                                var totalwidth = 0;\n                                if (cell.value instanceof PdfGrid) {\n                                    for (var i_6 = 0; i_6 < cell.value.columns.count; i_6++) {\n                                        totalwidth += cell.value.columns.getColumn(i_6).columnWidth;\n                                    }\n                                }\n                                else {\n                                    totalwidth = cell.width;\n                                }\n                                // if (cell.columnSpan > 1)\n                                // {\n                                //     for (; c < cell.columnSpan; c++)\n                                //         cellWidth += row.grid.columns.getColumn(c).width;\n                                // }\n                                // else\n                                cellWidth = Math.max(totalwidth, row.grid.columns.getColumn(c).width);\n                                cell.drawCellBorders(pageGraphics, new RectangleF(location_2, new SizeF(cellWidth, height)));\n                                location_2.x += cellWidth;\n                                c += (cell.columnSpan - 1);\n                            }\n                        }\n                        // So, nested grid drawing is completed for the current row. Update page.\n                        // Otherwise, the next nested grid of the parent will draw borders from start.\n                        startPage = this.currentPage;\n                    }\n                }\n            }\n            var isPdfGrid = false;\n            var maximumCellBoundsWidth = 0;\n            if (cellBounds.length > 0) {\n                maximumCellBoundsWidth = cellBounds[0];\n            }\n            var largeNavigatePage = [[1, 2]];\n            for (var c = 0; c < this.Grid.rows.count; c++) {\n                if (this.cellEndIndex != -1 && this.Grid.rows.getRow(c).cells.getCell(this.cellEndIndex).value instanceof PdfGrid) {\n                    var grid = this.Grid.rows.getRow(c).cells.getCell(this.cellEndIndex).value;\n                    this.rowLayoutBoundsWidth = grid.rowLayoutBoundsWidth;\n                    isPdfGrid = true;\n                    // if (largeNavigatePage[0][0] < grid.listOfNavigatePages.length)\n                    // {\n                    //     largeNavigatePage[0][0] = grid.listOfNavigatePages.length;\n                    //     largeNavigatePage[0][1] = cellBounds[c];\n                    // }\n                    // else if ((largeNavigatePage[0][0] == grid.listOfNavigatePages.length) && (largeNavigatePage[0][1] < cellBounds[c]))\n                    // {\n                    //     largeNavigatePage[0][1] = cellBounds[c];\n                    // }\n                }\n            }\n            if (!isPdfGrid && cellBounds.length > 0) {\n                for (var c = 0; c < i - 1; c++) {\n                    if (maximumCellBoundsWidth < cellBounds[c]) {\n                        maximumCellBoundsWidth = cellBounds[c];\n                    }\n                }\n                this.rowLayoutBoundsWidth = maximumCellBoundsWidth;\n            }\n            else {\n                this.rowLayoutBoundsWidth = largeNavigatePage[0][1];\n            }\n            if (this.columnRanges.indexOf(range) < this.columnRanges.length - 1\n                && startPage != null && format.layout != PdfLayoutType.OnePage) {\n                isParentCell = this.Grid.isChildGrid;\n                if (largeNavigatePage[0][0] != 0) {\n                    var section = this.currentPage.section;\n                    var pageIndex = section.indexOf(this.currentPage);\n                    this.currentGraphics = this.currentPage.graphics;\n                    this.currentBounds = new RectangleF(new PointF(0, 0), this.currentPage.getClientSize());\n                    var pageindex = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n                }\n                else {\n                    this.currentPage = this.getNextPageformat(format);\n                }\n                // let locationGrid : PointF= new PointF(PdfBorders.default.right.width / 2, PdfBorders.default.top.width / 2);\n                // if (format.paginateBounds == new RectangleF(0,0,0,0) && this.startLocation == locationGrid)\n                // {\n                //     this.currentBounds.x += this.startLocation.x;\n                //     this.currentBounds.y += this.startLocation.y;\n                // }\n            }\n            if (this.columnRanges.length - 1 !== index && this.columnRanges.length > 1 && format.layout !== PdfLayoutType.OnePage) {\n                this.currentPage = this.getNextPageformat(format);\n                if ((format.paginateBounds.x === format.paginateBounds.y) && (format.paginateBounds.y === format.paginateBounds.height)\n                    && (format.paginateBounds.height === format.paginateBounds.width) && (format.paginateBounds.width === 0)) {\n                    this.currentBounds.x += this.startLocation.x;\n                    this.currentBounds.y += this.startLocation.y;\n                    //this.currentBounds.height = this.pageBounds.height;\n                }\n            }\n        }\n        result = this.getLayoutResult();\n        if (this.Grid.style.allowHorizontalOverflow && this.Grid.style.horizontalOverflowType == PdfHorizontalOverflowType.NextPage) {\n            this.reArrangePages(layoutedPages);\n        }\n        this.raisePageLayouted(result);\n        return result;\n    };\n    PdfGridLayouter.prototype.checkIsFisished = function (row) {\n        var result = true;\n        for (var i = 0; i < row.cells.count; i++) {\n            if (!row.cells.getCell(i).FinishedDrawingCell) {\n                result = false;\n            }\n        }\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * Gets the `next page`.\n     * @private\n     */\n    PdfGridLayouter.prototype.getNextPageformat = function (format) {\n        var section = this.currentPage.section;\n        var nextPage = null;\n        var index = section.indexOf(this.currentPage);\n        this.flag = false;\n        if (index === section.count - 1) {\n            nextPage = section.add();\n        }\n        else {\n            nextPage = section.getPages()[index + 1];\n        }\n        this.currentGraphics = nextPage.graphics;\n        var pageindex = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n        if (!(this.listOfNavigatePages.indexOf(pageindex) !== -1)) {\n            this.listOfNavigatePages.push(pageindex);\n        }\n        this.currentBounds = new RectangleF(new PointF(0, 0), nextPage.getClientSize());\n        if ((typeof format !== 'undefined') && format != null && format.usePaginateBounds && (typeof format.paginateBounds !== 'undefined') && format.paginateBounds != null && (format.paginateBounds.x !== format.paginateBounds.y) && (format.paginateBounds.y !== format.paginateBounds.height)\n            && (format.paginateBounds.height !== format.paginateBounds.width) && (format.paginateBounds.width !== 0)) {\n            this.currentBounds.x = format.paginateBounds.x;\n            this.currentBounds.y = format.paginateBounds.y;\n            this.currentBounds.height = format.paginateBounds.height;\n        }\n        return nextPage;\n    };\n    PdfGridLayouter.prototype.CheckIfDefaultFormat = function (format) {\n        var defaultFormat = new PdfStringFormat();\n        return (format.alignment === defaultFormat.alignment && format.characterSpacing === defaultFormat.characterSpacing &&\n            format.clipPath === defaultFormat.clipPath && format.firstLineIndent === defaultFormat.firstLineIndent &&\n            format.horizontalScalingFactor === defaultFormat.horizontalScalingFactor &&\n            format.lineAlignment === defaultFormat.lineAlignment\n            && format.lineLimit === defaultFormat.lineLimit && format.lineSpacing === defaultFormat.lineSpacing &&\n            format.measureTrailingSpaces === defaultFormat.measureTrailingSpaces && format.noClip === defaultFormat.noClip &&\n            format.paragraphIndent === defaultFormat.paragraphIndent && format.rightToLeft === defaultFormat.rightToLeft &&\n            format.subSuperScript === defaultFormat.subSuperScript && format.wordSpacing === defaultFormat.wordSpacing &&\n            format.wordWrap === defaultFormat.wordWrap);\n    };\n    /**\n     * `Raises BeforeCellDraw event`.\n     * @private\n     */\n    PdfGridLayouter.prototype.RaiseBeforeCellDraw = function (graphics, rowIndex, cellIndex, bounds, value, style) {\n        var args = null;\n        if (this.Grid.raiseBeginCellDraw) {\n            args = new PdfGridBeginCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style);\n            this.Grid.onBeginCellDraw(args);\n            style = args.style;\n        }\n        return style;\n    };\n    /**\n     * `Raises AfterCellDraw event`.\n     * @private\n     */\n    PdfGridLayouter.prototype.raiseAfterCellDraw = function (graphics, rowIndex, cellIndex, bounds, value, cellstyle) {\n        var args = null;\n        if (this.Grid.raiseEndCellDraw) {\n            args = new PdfGridEndCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, cellstyle);\n            this.Grid.onEndCellDraw(args);\n        }\n    };\n    PdfGridLayouter.prototype.reArrangePages = function (layoutedPages) {\n        var document = this.currentPage.document;\n        var pages = [];\n        var keys = layoutedPages.keys();\n        var values = layoutedPages.values();\n        for (var i = 0; i < keys.length; i++) {\n            var page = keys[i];\n            page.section = null;\n            pages.push(page);\n            document.pages.remove(page);\n        }\n        /* tslint:disable */\n        for (var i = 0; i < layoutedPages.size(); i++) {\n            var count = 0;\n            for (var j = i, count_1 = (layoutedPages.size() / this.columnRanges.length); j < layoutedPages.size(); j += count_1) {\n                var page = pages[j];\n                if (typeof page !== 'undefined' && document.pages.indexOf(page) === -1) {\n                    document.pages.add(page);\n                }\n            }\n        }\n        /* tslint:enable */\n    };\n    /**\n     * Gets the `layout result`.\n     * @private\n     */\n    PdfGridLayouter.prototype.getLayoutResult = function () {\n        if (this.Grid.isChildGrid && this.Grid.allowRowBreakAcrossPages) {\n            for (var i = 0; i < this.Grid.rows.count; i++) {\n                var row = this.Grid.rows.getRow(i);\n                if (row.rowBreakHeight > 0 && row.repeatFlag) {\n                    this.startLocation.y = this.currentPage.origin.y;\n                }\n            }\n        }\n        var bounds;\n        if (!this.isChanged) {\n            bounds = new RectangleF(this.startLocation, new SizeF(this.currentBounds.width, this.currentBounds.y -\n                this.startLocation.y));\n        }\n        // else {\n        //     bounds = new RectangleF(this.currentLocation, new SizeF(this.currentBounds.width, this.currentBounds.y -\n        //                              this.currentLocation.y));\n        // }\n        /* tslint:enable */\n        return new PdfGridLayoutResult(this.currentPage, bounds);\n    };\n    /**\n     * `Recalculate row height` for the split cell to be drawn.\n     * @private\n     */\n    PdfGridLayouter.prototype.ReCalculateHeight = function (row, height) {\n        var newHeight = 0.0;\n        for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n            if (!(row.cells.getCell(i).remainingString === null || row.cells.getCell(i).remainingString === '' ||\n                typeof row.cells.getCell(i).remainingString === 'undefined')) {\n                newHeight = Math.max(newHeight, row.cells.getCell(i).measureHeight());\n            }\n        }\n        return Math.max(height, newHeight);\n    };\n    /**\n     * `Raises BeforePageLayout event`.\n     * @private\n     */\n    PdfGridLayouter.prototype.raiseBeforePageLayout = function (currentPage, currentBounds, currentRow) {\n        var cancel = false;\n        if (this.Grid.raiseBeginPageLayout) {\n            var args = new PdfGridBeginPageLayoutEventArgs(currentBounds, currentPage, currentRow);\n            this.Grid.onBeginPageLayout(args);\n            // if (currentBounds !== args.Bounds) {\n            //     this.isChanged = true;\n            //     this.currentLocation = new PointF(args.Bounds.x, args.Bounds.y);\n            //     this.measureColumnsWidth(new RectangleF(new PointF(args.Bounds.x, args.Bounds.y) ,\n            //                                                  new SizeF(args.Bounds.width + args.Bounds.x ,\n            //                                                                 args.Bounds.height)));\n            // }\n            cancel = (typeof args.cancel === 'undefined' ? false : args.cancel);\n            currentBounds = args.bounds;\n            currentRow = args.startRowIndex;\n        }\n        return { returnValue: cancel, currentBounds: currentBounds, currentRowIndex: currentRow };\n    };\n    /**\n     * `Raises PageLayout event` if needed.\n     * @private\n     */\n    PdfGridLayouter.prototype.raisePageLayouted = function (result) {\n        var args = new PdfGridEndPageLayoutEventArgs(result);\n        if (this.Grid.raiseEndPageLayout) {\n            this.Grid.onEndPageLayout(args);\n        }\n        return args;\n    };\n    PdfGridLayouter.prototype.drawRow = function (row, result, height) {\n        if (typeof result === 'undefined') {\n            //.. Check if required space available.\n            //.....If the row conains spans which  falls through more than one page, then draw the row to next page.                        \n            var result_1 = new RowLayoutResult();\n            var rowHeightWithSpan = 0;\n            var location_3 = new PointF(0, 0);\n            var size = new SizeF(0, 0);\n            var isHeader = false;\n            if (row.rowSpanExists) {\n                var maxSpan = 0;\n                var currRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                if (currRowIndex === -1) {\n                    currRowIndex = this.Grid.headers.indexOf(row);\n                    if (currRowIndex !== -1) {\n                        isHeader = true;\n                    }\n                }\n                for (var i = 0; i < row.cells.count; i++) {\n                    var cell = row.cells.getCell(i);\n                    maxSpan = Math.max(maxSpan, cell.rowSpan);\n                }\n                for (var i = currRowIndex; i < currRowIndex + maxSpan; i++) {\n                    rowHeightWithSpan += (isHeader ? this.Grid.headers.getHeader(i).height : this.Grid.rows.getRow(i).height);\n                }\n                // let rowMaxHeight : number = rowHeightWithSpan;\n                // for (let i : number = 0; i < row.cells.count; i++ ) {\n                //     rowMaxHeight = rowMaxHeight > row.cells.getCell(i).height ? rowMaxHeight : row.cells.getCell(i).height;\n                // }\n                // let flag : boolean = true;\n                // let nextRow : PdfGridRow = this.Grid.headers.getHeader(this.Grid.headers.indexOf(row) + 1);\n                // for (let i : number = 0; i < nextRow.cells.count; i++ ) {\n                //     if (nextRow.cells.getCell(i).value !== '' && nextRow.cells.getCell(i).value !== undefined) {\n                //         flag = false;\n                //         break;\n                //     }\n                // }\n                // if ((rowMaxHeight > rowHeightWithSpan) && flag) {\n                //     row.height += (rowMaxHeight - rowHeightWithSpan);\n                // }                \n            }\n            var calculatedHeight = row.rowBreakHeight > 0.0 ? row.rowBreakHeight : row.height;\n            if (typeof this.Grid.isChildGrid !== 'undefined' && this.Grid.isChildGrid && typeof this.Grid.ParentCell !== 'undefined' && this.Grid.ParentCell != null) {\n                //Split row only if row height exceeds page height and AllowRowBreakAcrossPages is true.\n                // if (calculatedHeight + this.Grid.ParentCell.row.grid.style.cellPadding.bottom +\n                //             this.Grid.ParentCell.row.grid.style.cellPadding.top > this.currentPageBounds.height) {\n                //     if (this.Grid.allowRowBreakAcrossPages) {\n                //         result.isFinish = true;\n                //         if ( this.Grid.isChildGrid && row.rowBreakHeight > 0 ) {\n                //             if (this.Grid.ParentCell.row.grid.style.cellPadding !== null) {\n                //                 this.currentBounds.y += this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                //             }\n                //             this.currentBounds.x = this.startLocation.x;\n                //         }\n                //         result.bounds = this.currentBounds ;\n                //         this.drawRowWithBreak(result, row, calculatedHeight);\n                //     } else {\n                //         //If AllowRowBreakAcrossPages is not true, draw the row till it fits the page.                       \n                //         if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                //             this.currentBounds.y += this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                //             calculatedHeight = this.currentBounds.height - this.currentBounds.y -\n                //                     this.Grid.ParentCell.row.grid.style.cellPadding.bottom;\n                //         }\n                //         result.isFinish = false;\n                //         this.drawRow( row, result, calculatedHeight);\n                //     }\n                // } else\n                if (this.currentBounds.y + this.Grid.ParentCell.row.grid.style.cellPadding.bottom + calculatedHeight >\n                    this.currentPageBounds.height || this.currentBounds.y + this.Grid.ParentCell.row.grid.style.cellPadding.bottom\n                    + calculatedHeight > this.currentBounds.height || this.currentBounds.y +\n                    this.Grid.ParentCell.row.grid.style.cellPadding.bottom + rowHeightWithSpan > this.currentPageBounds.height) {\n                    //If a row is repeated and still cannot fit in page, proceed draw.\n                    if (typeof this.Grid.ParentCell.row.grid.LayoutFormat !== 'undefined' && this.Grid.ParentCell.row.grid.LayoutFormat.break === PdfLayoutBreakType.FitPage) {\n                        PdfGridLayouter.repeatRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                        this.Grid.splitChildRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                    }\n                    if (PdfGridLayouter.repeatRowIndex > -1 && PdfGridLayouter.repeatRowIndex === row.rowIndex) {\n                        if (this.Grid.allowRowBreakAcrossPages) {\n                            result_1.isFinish = true;\n                            // if (this.Grid.isChildGrid && row.rowBreakHeightValue > 0) {\n                            //     // if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                            //     //     this.currentBounds.y += this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                            //     // }\n                            //     this.currentBounds.x = this.startLocation.x;\n                            // }\n                            result_1.bounds = this.currentBounds;\n                            this.drawRowWithBreak(result_1, row, calculatedHeight);\n                            row.repeatFlag = true;\n                            row.repeatRowNumber = PdfGridLayouter.repeatRowIndex;\n                        }\n                        // else {\n                        //     result.isFinish = false;\n                        //     row.repeatFlag = false;\n                        //     this.drawRow( row, result, calculatedHeight);\n                        // }\n                    }\n                    // else {\n                    //     result.isFinish = false;\n                    // }\n                }\n                else {\n                    result_1.isFinish = true;\n                    if (row.grid.ParentCell.row.rowBreakHeightValue > 0) {\n                        row.repeatFlag = true;\n                    }\n                    else {\n                        row.repeatFlag = false;\n                        calculatedHeight = row.height;\n                    }\n                    if (this.Grid.isChildGrid && row.rowBreakHeight > 0) {\n                        if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                            calculatedHeight += this.Grid.ParentCell.row.grid.style.cellPadding.bottom;\n                        }\n                    }\n                    this.drawRow(row, result_1, calculatedHeight);\n                }\n            }\n            else {\n                //Split row only if row height exceeds page height and AllowRowBreakAcrossPages is true.\n                if (calculatedHeight > this.currentPageBounds.height) {\n                    if (this.Grid.allowRowBreakAcrossPages) {\n                        result_1.isFinish = true;\n                        //result.bounds = this.currentBounds;\n                        this.drawRowWithBreak(result_1, row, calculatedHeight);\n                        row.isrowFinish = true;\n                        row.repeatFlag = true;\n                        if (row.grid.splitChildRowIndex !== -1) {\n                            result_1.isFinish = false;\n                        }\n                    }\n                    // else {\n                    //     //If AllowRowBreakAcrossPages is not true, draw the row till it fits the page.\n                    //     result.isFinish = false;\n                    //     this.drawRow( row, result, calculatedHeight);\n                    // }\n                }\n                else if (this.currentBounds.y + calculatedHeight > this.currentPageBounds.height ||\n                    this.currentBounds.y + calculatedHeight > (this.currentBounds.height + this.startLocation.y) ||\n                    this.currentBounds.y + rowHeightWithSpan > this.currentPageBounds.height) {\n                    // If a row is repeated and still cannot fit in page, proceed draw.\n                    var isFit = false;\n                    if ((this.Grid.allowRowBreakAcrossPages && !this.Grid.repeatHeader && !row.isRowHeightSet && !row.rowMergeComplete)) {\n                        if (this.Grid.LayoutFormat !== null && this.Grid.LayoutFormat.paginateBounds.height > 0) {\n                            isFit = this.isFitToCell((this.currentBounds.height + this.startLocation.y) - this.currentBounds.y, this.Grid, row);\n                        }\n                        else\n                            isFit = this.isFitToCell(this.currentPageBounds.height - this.currentBounds.y, this.Grid, row);\n                        if (isFit) {\n                            this.isPaginate = true;\n                        }\n                    }\n                    else if (this.Grid.allowRowBreakAcrossPages && this.Grid.LayoutFormat != null && this.Grid.LayoutFormat.layout == PdfLayoutType.Paginate && this.Grid.LayoutFormat.break != PdfLayoutBreakType.FitElement && row.isRowHeightSet && this.currentBounds.y + height > this.currentPageBounds.height) {\n                        isFit = this.isFitToCell(this.currentPageBounds.height - this.currentBounds.y, this.Grid, row);\n                        if (!isFit)\n                            isFit = !(this.slr !== null && this.slr.actualSize.height == 0 && this.slr.remainder != null && this.slr.remainder.length > 0 && this.remainderText == this.slr.remainder);\n                        if (isFit && this.slr != null && this.slr.lineCount > 1) {\n                            //It may text cutoff issue\n                            isFit = false;\n                        }\n                        this.remainderText = null;\n                    }\n                    if (PdfGridLayouter.repeatRowIndex > -1 && PdfGridLayouter.repeatRowIndex === row.rowIndex || isFit) {\n                        if (this.Grid.allowRowBreakAcrossPages) {\n                            result_1.isFinish = true;\n                            this.drawRowWithBreak(result_1, row, calculatedHeight);\n                            row.repeatFlag = true;\n                            row.repeatRowNumber = PdfGridLayouter.repeatRowIndex;\n                            if (row.grid.splitChildRowIndex !== -1) {\n                                result_1.isFinish = false;\n                            }\n                        }\n                        else {\n                            result_1.isFinish = false;\n                            this.drawRow(row, result_1, calculatedHeight);\n                        }\n                    }\n                    else {\n                        result_1.isFinish = false;\n                    }\n                }\n                else {\n                    result_1.isFinish = true;\n                    this.drawRow(row, result_1, calculatedHeight);\n                    row.repeatFlag = false;\n                }\n            }\n            return result_1;\n        }\n        else {\n            var skipcell = false;\n            var location_4 = new PointF(this.currentBounds.x, this.currentBounds.y);\n            // if (row.grid.isChildGrid && row.grid.allowRowBreakAcrossPages && this.startLocation.x !== this.currentBounds.x && row.width <\n            //                 this.currentPage.getClientSize().width) {\n            //     location.x = this.startLocation.x;\n            // }\n            result.bounds = new RectangleF(location_4, new SizeF(0, 0));\n            height = this.ReCalculateHeight(row, height);\n            for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n                var cancelSpans = ((i > this.cellEndIndex + 1) && (row.cells.getCell(i).columnSpan > 1));\n                // let cancelSpans : boolean = false;\n                if (!cancelSpans) {\n                    for (var j = 1; j < row.cells.getCell(i).columnSpan; j++) {\n                        row.cells.getCell(i + j).isCellMergeContinue = true;\n                    }\n                }\n                var size = new SizeF(this.Grid.columns.getColumn(i).width, height);\n                // if (size.width > this.currentGraphics.clientSize.width) {\n                //     size.width = this.currentGraphics.clientSize.width;\n                // }\n                // if (this.Grid.isChildGrid && this.Grid.style.allowHorizontalOverflow) {\n                //     if (size.width >= this.currentGraphics.clientSize.width) {\n                //         size.width -= 2 * this.currentBounds.x;\n                //     }\n                // }\n                /* tslint:disable */\n                if (!this.CheckIfDefaultFormat(this.Grid.columns.getColumn(i).format) &&\n                    this.CheckIfDefaultFormat(row.cells.getCell(i).stringFormat)) {\n                    row.cells.getCell(i).stringFormat = this.Grid.columns.getColumn(i).format;\n                }\n                var cellstyle = row.cells.getCell(i).style;\n                var tempValue = ((typeof row.cells.getCell(i).value === 'string' &&\n                    row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '');\n                row.cells.getCell(i).style = this.RaiseBeforeCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location_4, size), tempValue, cellstyle);\n                //row.cells.getCell(i).style = cellstyle;\n                if (!skipcell) {\n                    if (row.cells.getCell(i).value instanceof PdfGrid) {\n                        var grid = row.cells.getCell(i).value;\n                        grid.parentCellIndex = i;\n                    }\n                    var stringResult = row.cells.getCell(i).draw(this.currentGraphics, new RectangleF(location_4, size), cancelSpans);\n                    if (row.grid.style.allowHorizontalOverflow && (row.cells.getCell(i).columnSpan > this.cellEndIndex ||\n                        i + row.cells.getCell(i).columnSpan > this.cellEndIndex + 1) && this.cellEndIndex < row.cells.count - 1) {\n                        row.rowOverflowIndex = this.cellEndIndex;\n                    }\n                    if (row.grid.style.allowHorizontalOverflow && (row.rowOverflowIndex > 0 && (row.cells.getCell(i).columnSpan >\n                        this.cellEndIndex || i + row.cells.getCell(i).columnSpan > this.cellEndIndex + 1)) &&\n                        row.cells.getCell(i).columnSpan - this.cellEndIndex + i - 1 > 0) {\n                        row.cells.getCell(row.rowOverflowIndex + 1).value = stringResult !== null ? (stringResult.remainder !== undefined) ?\n                            stringResult.remainder : '' : '';\n                        row.cells.getCell(row.rowOverflowIndex + 1).stringFormat = row.cells.getCell(i).stringFormat;\n                        row.cells.getCell(row.rowOverflowIndex + 1).style = row.cells.getCell(i).style;\n                        row.cells.getCell(row.rowOverflowIndex + 1).columnSpan = row.cells.getCell(i).columnSpan - this.cellEndIndex + i - 1;\n                    }\n                }\n                /* tslint:enable */\n                tempValue = ((typeof row.cells.getCell(i).value === 'string' &&\n                    row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '');\n                if (!cancelSpans) {\n                    this.raiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location_4, size), tempValue, row.cells.getCell(i).style);\n                }\n                if (row.cells.getCell(i).value instanceof PdfGrid) {\n                    var grid = row.cells.getCell(i).value;\n                    if (this.Grid.columns.getColumn(i).width >= this.currentGraphics.clientSize.width) {\n                        location_4.x = grid.rowLayoutBoundsWidth;\n                        location_4.x += grid.style.cellSpacing;\n                    }\n                    else {\n                        location_4.x += this.Grid.columns.getColumn(i).width;\n                    }\n                }\n                else {\n                    location_4.x += this.Grid.columns.getColumn(i).width;\n                }\n            }\n            if (!row.rowMergeComplete || row.isRowHeightSet) {\n                this.currentBounds.y += height;\n            }\n            result.bounds = new RectangleF(new PointF(result.bounds.x, result.bounds.y), new SizeF(location_4.x, location_4.y));\n        }\n    };\n    PdfGridLayouter.prototype.isFitToCell = function (currentHeight, grid, gridRow) {\n        var isFit = false;\n        var layouter = new PdfStringLayouter();\n        for (var i = 0; i < gridRow.cells.count; i++) {\n            var cell = gridRow.cells.getCell(i);\n            if (typeof cell.value !== 'undefined' && cell.value !== null && typeof cell.value === 'string') {\n                var font = null;\n                if (typeof cell.style.font !== 'undefined' && cell.style.font != null) {\n                    font = cell.style.font;\n                }\n                else if (typeof cell.row.style.font !== 'undefined' && cell.row.style.font != null) {\n                    font = cell.row.style.font;\n                }\n                else if (typeof cell.row.grid.style.font !== 'undefined' && cell.row.grid.style.font != null) {\n                    font = cell.row.grid.style.font;\n                }\n                else {\n                    font = PdfDocument.defaultFont;\n                }\n                this.remainderText = gridRow.cells.getCell(i).value;\n                var width = gridRow.cells.getCell(i).width;\n                if (grid.columns.getColumn(i).isCustomWidth && gridRow.cells.getCell(i).width > grid.columns.getColumn(i).width) {\n                    width = grid.columns.getColumn(i).width;\n                }\n                this.slr = layouter.layout(gridRow.cells.getCell(i).value, font, gridRow.cells.getCell(i).stringFormat, new SizeF(width, currentHeight), false, this.currentPageBounds);\n                var height = this.slr.actualSize.height;\n                if (height == 0) {\n                    isFit = false;\n                    break;\n                }\n                if (gridRow.cells.getCell(i).style != null && gridRow.cells.getCell(i).style.borders != null && gridRow.cells.getCell(i).style.borders.top != null && gridRow.cells.getCell(i).style.borders.bottom != null)\n                    height += (gridRow.cells.getCell(i).style.borders.top.width + gridRow.cells.getCell(i).style.borders.bottom.width) * 2;\n                if (this.slr.lineCount > 1 && gridRow.cells.getCell(i).stringFormat != null && gridRow.cells.getCell(i).stringFormat.lineSpacing != 0)\n                    height += (this.slr.lineCount - 1) * (gridRow.cells.getCell(i).style.stringFormat.lineSpacing);\n                if (gridRow.cells.getCell(i).style.cellPadding == null) {\n                    height += (grid.style.cellPadding.top + grid.style.cellPadding.bottom);\n                }\n                else {\n                    height += (grid.style.cellPadding.top + grid.style.cellPadding.bottom);\n                }\n                height += grid.style.cellSpacing;\n                if (currentHeight > height || (typeof this.slr.remainder !== 'undefined' && this.slr.remainder !== null)) {\n                    isFit = true;\n                    break;\n                }\n            }\n        }\n        return isFit;\n    };\n    PdfGridLayouter.prototype.drawRowWithBreak = function (result, row, calculateHeight) {\n        var location = new PointF(this.currentBounds.x, this.currentBounds.y);\n        if (row.grid.isChildGrid && row.grid.allowRowBreakAcrossPages && this.startLocation.x !== this.currentBounds.x) {\n            location.x = this.startLocation.x;\n        }\n        result.bounds = new RectangleF(location, new SizeF(0, 0));\n        this.gridHeight = row.rowBreakHeight > 0 ? this.currentPageBounds.height : 0;\n        // Calculate the remaining height.\n        if (row.grid.style.cellPadding.top + this.currentBounds.y + row.grid.style.cellPadding.bottom < this.currentPageBounds.height) {\n            row.rowBreakHeight = this.currentBounds.y + calculateHeight - this.currentPageBounds.height;\n        }\n        // else {\n        //     row.rowBreakHeight = calculateHeight;\n        //     result.isFinish = false;\n        //     return;\n        // }\n        // No need to explicit break if the row height is equal to grid height.\n        for (var i = 0; i < row.cells.count; i++) {\n            var cell = row.cells.getCell(i);\n            var cellHeight = cell.measureHeight();\n            if (cellHeight === calculateHeight && cell.value instanceof PdfGrid) {\n                row.rowBreakHeight = 0;\n            }\n            // else if (cellHeight === calculateHeight && (cell.value as PdfGrid) === null) {\n            //     row.rowBreakHeight = this.currentBounds.y + calculateHeight - this.currentPageBounds.height;\n            // }\n        }\n        for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n            var cancelSpans = ((row.cells.getCell(i).columnSpan + i > this.cellEndIndex + 1) &&\n                (row.cells.getCell(i).columnSpan > 1));\n            // if (!cancelSpans) {\n            //     for (let k : number = 1; k < row.cells.getCell(i).columnSpan; k++) {\n            //         row.cells.getCell(i + k).isCellMergeContinue = true;\n            //     }\n            //}\n            var size = new SizeF(this.Grid.columns.getColumn(i).width, this.gridHeight > 0.0 ? this.gridHeight :\n                this.currentPageBounds.height);\n            // if (size.width === 0) {\n            //     size = new SizeF(row.cells.getCell(i).width, size.height);\n            // }\n            // if (!this.CheckIfDefaultFormat(this.Grid.columns.getColumn(i).format) &&\n            //         this.CheckIfDefaultFormat((row.cells.getCell(i).stringFormat))) {\n            //     row.cells.getCell(i).stringFormat = this.Grid.columns.getColumn(i).format;\n            // }\n            var cellstyle1 = row.cells.getCell(i).style;\n            row.cells.getCell(i).style = cellstyle1;\n            var skipcell = false;\n            var stringResult = null;\n            if (!skipcell) {\n                stringResult = row.cells.getCell(i).draw(this.currentGraphics, new RectangleF(location, size), cancelSpans);\n            }\n            //If still row is to be drawn, set cell finished drawing cell as false and update the text to be drawn.\n            if (row.rowBreakHeight > 0.0) {\n                if (stringResult != null && typeof stringResult.remainder !== 'undefined') {\n                    row.cells.getCell(i).FinishedDrawingCell = false;\n                    row.cells.getCell(i).remainingString = stringResult.remainder == null ? ' ' : stringResult.remainder;\n                    row.rowBreakHeight = calculateHeight - stringResult.actualSize.height;\n                }\n            }\n            result.isFinish = (!result.isFinish) ? result.isFinish : row.cells.getCell(i).FinishedDrawingCell;\n            // let tempValue : string = ((typeof row.cells.getCell(i).value === 'string' &&\n            //row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '') as string;\n            // if (!cancelSpans) {\n            //     // this.raiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i,\n            //     //           new RectangleF(location, size), tempValue, row.cells.getCell(i).style);            \n            //     this.raiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location, size),\n            //                             (row.cells.getCell(i).value as string) ? row.cells.getCell(i).value.toString() : ' ',\n            //                             row.cells.getCell(i).style);\n            //     }                \n            if (row.cells.getCell(i).value instanceof PdfGrid) {\n                var grid = row.cells.getCell(i).value;\n                this.rowBreakPageHeightCellIndex = i;\n                // row.cells.getCell(i).pageCount = grid.listOfNavigatePages.length;\n                // for (let j : number = 0;j<grid.listOfNavigatePages.length;j++){\n                //     let pageIndex : number =grid.listOfNavigatePages.indexOf(j);\n                //             this.Grid.listOfNavigatePages.push(pageIndex);\n                //     }\n                if (this.Grid.columns.getColumn(i).width >= this.currentGraphics.clientSize.width) {\n                    location.x = this.rowLayoutBoundsWidth;\n                    location.x += grid.style.cellSpacing;\n                }\n                else {\n                    location.x += this.Grid.columns.getColumn(i).width;\n                }\n            }\n            else {\n                location.x += this.Grid.columns.getColumn(i).width;\n            }\n        }\n        this.currentBounds.y += this.gridHeight > 0.0 ? this.gridHeight : calculateHeight;\n        result.bounds = new RectangleF(new PointF(result.bounds.x, result.bounds.y), new SizeF(location.x, location.y));\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    PdfGridLayouter.repeatRowIndex = -1;\n    return PdfGridLayouter;\n}(ElementLayouter));\nexport { PdfGridLayouter };\n// recalculateBounds : boolean, clientSize : SizeF\n//Implementation\n/**\n * `Initializes` internal data.\n * @private\n */\n//Internal declaration\nvar PdfGridLayoutResult = /** @class */ (function (_super) {\n    __extends(PdfGridLayoutResult, _super);\n    /**\n     * Constructor\n     * @private\n     */\n    function PdfGridLayoutResult(page, bounds) {\n        return _super.call(this, page, bounds) || this;\n    }\n    return PdfGridLayoutResult;\n}(PdfLayoutResult));\nexport { PdfGridLayoutResult };\n/**\n * `PdfGridLayoutFormat` class represents a flexible grid that consists of columns and rows.\n */\nvar PdfGridLayoutFormat = /** @class */ (function (_super) {\n    __extends(PdfGridLayoutFormat, _super);\n    /**\n     * Initializes a new instance of the `PdfGridLayoutFormat` class.\n     * @private\n     */\n    function PdfGridLayoutFormat(baseFormat) {\n        return _super.call(this, baseFormat) || this;\n    }\n    return PdfGridLayoutFormat;\n}(PdfLayoutFormat));\nexport { PdfGridLayoutFormat };\nvar GridCellEventArgs = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initialize a new instance for `GridCellEventArgs` class.\n     * @private\n     */\n    function GridCellEventArgs(graphics, rowIndex, cellIndex, bounds, value) {\n        this.gridRowIndex = rowIndex;\n        this.gridCellIndex = cellIndex;\n        this.internalValue = value;\n        this.gridBounds = bounds;\n        this.pdfGraphics = graphics;\n    }\n    Object.defineProperty(GridCellEventArgs.prototype, \"rowIndex\", {\n        // Properties\n        /**\n         * Gets the value of current `row index`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"cellIndex\", {\n        /**\n         * Gets the value of current `cell index`.\n         * @private\n         */\n        get: function () {\n            return this.gridCellIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"value\", {\n        /**\n         * Gets the actual `value` of current cell.\n         * @private\n         */\n        get: function () {\n            return this.internalValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"bounds\", {\n        /**\n         * Gets the `bounds` of current cell.\n         * @private\n         */\n        get: function () {\n            return this.gridBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"graphics\", {\n        /**\n         * Gets the instance of `current graphics`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return GridCellEventArgs;\n}());\nexport { GridCellEventArgs };\nvar PdfGridBeginCellDrawEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridBeginCellDrawEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `StartCellLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridBeginCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style) {\n        var _this = _super.call(this, graphics, rowIndex, cellIndex, bounds, value) || this;\n        _this.style = style;\n        return _this;\n    }\n    Object.defineProperty(PdfGridBeginCellDrawEventArgs.prototype, \"skip\", {\n        // Properties\n        /**\n         * Gets or sets a value indicating whether the value of this cell should be `skipped`.\n         * @private\n         */\n        get: function () {\n            return this.bSkip;\n        },\n        set: function (value) {\n            this.bSkip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridBeginCellDrawEventArgs.prototype, \"style\", {\n        /**\n         * Gets or sets a `style` value of the cell.\n         * @private\n         */\n        get: function () {\n            return this.cellStyle;\n        },\n        set: function (value) {\n            this.cellStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridBeginCellDrawEventArgs;\n}(GridCellEventArgs));\nexport { PdfGridBeginCellDrawEventArgs };\nvar PdfGridEndCellDrawEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridEndCellDrawEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfGridEndCellLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridEndCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style) {\n        var _this = _super.call(this, graphics, rowIndex, cellIndex, bounds, value) || this;\n        _this.cellStyle = style;\n        return _this;\n    }\n    Object.defineProperty(PdfGridEndCellDrawEventArgs.prototype, \"style\", {\n        // Propertise\n        /**\n         * Get the `PdfGridCellStyle`.\n         * @private\n         */\n        get: function () {\n            return this.cellStyle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridEndCellDrawEventArgs;\n}(GridCellEventArgs));\nexport { PdfGridEndCellDrawEventArgs };\nvar PdfCancelEventArgs = /** @class */ (function () {\n    function PdfCancelEventArgs() {\n    }\n    Object.defineProperty(PdfCancelEventArgs.prototype, \"cancel\", {\n        // Properties\n        /**\n         * Gets and Sets the value of `cancel`.\n         * @private\n         */\n        get: function () {\n            return this.isCancel;\n        },\n        set: function (value) {\n            this.isCancel = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCancelEventArgs;\n}());\nexport { PdfCancelEventArgs };\nvar BeginPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(BeginPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `BeginPageLayoutEventArgs` class with the specified rectangle and page.\n     * @private\n     */\n    function BeginPageLayoutEventArgs(bounds, page) {\n        var _this = _super.call(this) || this;\n        _this.bounds = bounds;\n        _this.pdfPage = page;\n        return _this;\n    }\n    Object.defineProperty(BeginPageLayoutEventArgs.prototype, \"bounds\", {\n        // Properties\n        /**\n         * Gets or sets value that indicates the lay outing `bounds` on the page.\n         * @private\n         */\n        get: function () {\n            return this.cellBounds;\n        },\n        set: function (value) {\n            this.cellBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BeginPageLayoutEventArgs.prototype, \"page\", {\n        /**\n         * Gets the `page` where the lay outing should start.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return BeginPageLayoutEventArgs;\n}(PdfCancelEventArgs));\nexport { BeginPageLayoutEventArgs };\n/**\n * `EndPageLayoutEventArgs` class is alternate for end page layout events.\n */\nvar EndPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(EndPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `EndPageLayoutEventArgs` class. with the specified 'PdfLayoutResult'.\n     * @private\n     */\n    function EndPageLayoutEventArgs(result) {\n        var _this = _super.call(this) || this;\n        _this.layoutResult = result;\n        return _this;\n    }\n    Object.defineProperty(EndPageLayoutEventArgs.prototype, \"result\", {\n        // Properties\n        /**\n         * Gets the lay outing `result` of the page.\n         * @private\n         */\n        get: function () {\n            return this.layoutResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EndPageLayoutEventArgs.prototype, \"nextPage\", {\n        /**\n         * Gets or sets a value indicating the `next page` where the element should be layout.\n         * @private\n         */\n        get: function () {\n            return this.nextPdfPage;\n        },\n        set: function (value) {\n            this.nextPdfPage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EndPageLayoutEventArgs;\n}(PdfCancelEventArgs));\nexport { EndPageLayoutEventArgs };\n/**\n * `PdfGridBeginPageLayoutEventArgs` class is alternate for begin page layout events.\n */\nvar PdfGridBeginPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridBeginPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initialize a new instance of `PdfGridBeginPageLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridBeginPageLayoutEventArgs(bounds, page, startRow) {\n        var _this = _super.call(this, bounds, page) || this;\n        _this.startRow = startRow;\n        return _this;\n    }\n    Object.defineProperty(PdfGridBeginPageLayoutEventArgs.prototype, \"startRowIndex\", {\n        // Properties\n        /**\n         * Gets the `start row index`.\n         * @private\n         */\n        get: function () {\n            return this.startRow;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridBeginPageLayoutEventArgs;\n}(BeginPageLayoutEventArgs));\nexport { PdfGridBeginPageLayoutEventArgs };\n/**\n * `PdfGridEndPageLayoutEventArgs` class is alternate for begin page layout events.\n */\nvar PdfGridEndPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridEndPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initialize a new instance of `PdfGridEndPageLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridEndPageLayoutEventArgs(result) {\n        return _super.call(this, result) || this;\n    }\n    return PdfGridEndPageLayoutEventArgs;\n}(EndPageLayoutEventArgs));\nexport { PdfGridEndPageLayoutEventArgs };\nvar RowLayoutResult = /** @class */ (function () {\n    //Constructors\n    /**\n     * Initializes a new instance of the `RowLayoutResult` class.\n     * @private\n     */\n    function RowLayoutResult() {\n        this.layoutedBounds = new RectangleF(0, 0, 0, 0);\n    }\n    Object.defineProperty(RowLayoutResult.prototype, \"isFinish\", {\n        /**\n         * Gets or sets a value indicating whether this instance `is finish`.\n         * @private\n         */\n        get: function () {\n            return this.bIsFinished;\n        },\n        set: function (value) {\n            this.bIsFinished = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RowLayoutResult.prototype, \"bounds\", {\n        /**\n         * Gets or sets the `bounds`.\n         * @private\n         */\n        get: function () {\n            return this.layoutedBounds;\n        },\n        set: function (value) {\n            this.layoutedBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RowLayoutResult;\n}());\nexport { RowLayoutResult };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * ShapeLayouter.ts class for EJ2-PDF\n * @private\n */\nimport { ElementLayouter, PdfLayoutResult } from './element-layouter';\nimport { RectangleF, PointF } from './../../../drawing/pdf-drawing';\nimport { PdfLayoutBreakType, PdfLayoutType } from './../../figures/enum';\nimport { BeginPageLayoutEventArgs, EndPageLayoutEventArgs } from './../../../structured-elements/grid/layout/grid-layouter';\n/**\n * ShapeLayouter class.\n * @private\n */\nvar ShapeLayouter = /** @class */ (function (_super) {\n    __extends(ShapeLayouter, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `ShapeLayouter` class.\n     * @private\n     */\n    function ShapeLayouter(element) {\n        var _this = _super.call(this, element) || this;\n        // Fields\n        /**\n         * Initializes the object to store `older form elements` of previous page.\n         * @default 0\n         * @private\n         */\n        _this.olderPdfForm = 0;\n        /**\n         * The `bounds` of the shape element.\n         * * @default new RectangleF()\n         * @private\n         */\n        _this.shapeBounds = new RectangleF();\n        /**\n         * Total Page size of the web page.\n         * * @default 0\n         * @private\n         */\n        _this.totalPageSize = 0;\n        return _this;\n    }\n    Object.defineProperty(ShapeLayouter.prototype, \"element\", {\n        // Properties\n        /**\n         * Gets shape element.\n         * @private\n         */\n        get: function () {\n            return this.elements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Layouts the element.\n     * @private\n     */\n    ShapeLayouter.prototype.layoutInternal = function (param) {\n        var currentPage = param.page;\n        var currentBounds = param.bounds;\n        var shapeLayoutBounds = this.element.getBounds();\n        shapeLayoutBounds.x = 0;\n        shapeLayoutBounds.y = 0;\n        /* tslint:disable */\n        var isEmpty = (this.shapeBounds.x === this.shapeBounds.y && this.shapeBounds.y === this.shapeBounds.width && this.shapeBounds.width === this.shapeBounds.height && this.shapeBounds.height === 0) ? true : false;\n        /* tslint:enable */\n        if ((this.isPdfGrid) && (!(isEmpty))) {\n            shapeLayoutBounds = this.shapeBounds;\n        }\n        var result = null;\n        var pageResult = new ShapeLayoutResult();\n        pageResult.page = currentPage;\n        /*tslint:disable:no-constant-condition */\n        while (true) {\n            // Raise event.\n            var result1 = this.raiseBeforePageLayout(currentPage, currentBounds);\n            currentBounds = result1.currentBounds;\n            var endArgs = null;\n            if (!result1.cancel) {\n                pageResult = this.layoutOnPage(currentPage, currentBounds, shapeLayoutBounds, param);\n                // Raise event.\n                endArgs = this.raiseEndPageLayout(pageResult);\n                result1.cancel = (endArgs === null) ? false : endArgs.cancel;\n            }\n            if (!pageResult.end && !result1.cancel) {\n                currentBounds = this.getPaginateBounds(param);\n                shapeLayoutBounds = this.getNextShapeBounds(shapeLayoutBounds, pageResult);\n                currentPage = (endArgs === null || endArgs.nextPage === null) ?\n                    this.getNextPage(currentPage) : endArgs.nextPage;\n                if (this.isPdfGrid) {\n                    result = this.getLayoutResult(pageResult);\n                    break;\n                }\n            }\n            else {\n                result = this.getLayoutResult(pageResult);\n                break;\n            }\n        }\n        return result;\n    };\n    /**\n     * Raises BeforePageLayout event.\n     * @private\n     */\n    ShapeLayouter.prototype.raiseBeforePageLayout = function (currentPage, currentBounds) {\n        var cancel = false;\n        if (this.element.raiseBeginPageLayout) {\n            var args = new BeginPageLayoutEventArgs(currentBounds, currentPage);\n            this.element.onBeginPageLayout(args);\n            cancel = args.cancel;\n            currentBounds = args.bounds;\n        }\n        return { currentBounds: currentBounds, cancel: cancel };\n    };\n    /**\n     * Raises PageLayout event if needed.\n     * @private\n     */\n    ShapeLayouter.prototype.raiseEndPageLayout = function (pageResult) {\n        var args = null;\n        if (this.element.raiseEndPageLayout) {\n            var res = this.getLayoutResult(pageResult);\n            args = new EndPageLayoutEventArgs(res);\n            this.element.onEndPageLayout(args);\n        }\n        return args;\n    };\n    /**\n     * Creates layout result.\n     * @private\n     */\n    ShapeLayouter.prototype.getLayoutResult = function (pageResult) {\n        var result = new PdfLayoutResult(pageResult.page, pageResult.bounds);\n        return result;\n    };\n    /**\n     * Calculates the next active shape bounds.\n     * @private\n     */\n    ShapeLayouter.prototype.getNextShapeBounds = function (shapeLayoutBounds, pageResult) {\n        var layoutedBounds = pageResult.bounds;\n        shapeLayoutBounds.y = (shapeLayoutBounds.y + layoutedBounds.height);\n        shapeLayoutBounds.height = (shapeLayoutBounds.height - layoutedBounds.height);\n        return shapeLayoutBounds;\n    };\n    /**\n     * Layouts the element on the current page.\n     * @private\n     */\n    ShapeLayouter.prototype.layoutOnPage = function (currentPage, curBounds, sBounds, param) {\n        var result = new ShapeLayoutResult();\n        curBounds = this.checkCorrectCurrentBounds(currentPage, curBounds, param);\n        var fitToPage = this.fitsToBounds(curBounds, sBounds);\n        var canDraw = !((param.format.break === PdfLayoutBreakType.FitElement)\n            && (!fitToPage && (currentPage === param.page)));\n        var shapeFinished = false;\n        if (canDraw) {\n            var drawRectangle = this.getDrawBounds(curBounds, sBounds);\n            this.drawShape(currentPage.graphics, curBounds, drawRectangle);\n            result.bounds = this.getPageResultBounds(curBounds, sBounds);\n            shapeFinished = ((curBounds.height) >= (sBounds.height));\n        }\n        result.end = (shapeFinished || (param.format.layout === PdfLayoutType.OnePage));\n        result.page = currentPage;\n        return result;\n    };\n    /**\n     * Returns Rectangle for element drawing on the page.\n     * @private\n     */\n    ShapeLayouter.prototype.getDrawBounds = function (currentBounds, shapeLayoutBounds) {\n        var result = currentBounds;\n        result.y = (result.y - shapeLayoutBounds.y);\n        result.height = (result.height + shapeLayoutBounds.y);\n        return result;\n    };\n    /**\n     * Draws the shape.\n     * @private\n     */\n    ShapeLayouter.prototype.drawShape = function (g, currentBounds, drawRectangle) {\n        var gState = g.save();\n        try {\n            g.setClip(currentBounds);\n            this.element.drawGraphicsHelper(g, new PointF(drawRectangle.x, drawRectangle.y));\n        }\n        finally {\n            g.restore(gState);\n        }\n    };\n    /**\n     * Corrects current bounds on the page.\n     * @protected\n     */\n    ShapeLayouter.prototype.checkCorrectCurrentBounds = function (currentPage, curBounds, param) {\n        var pageSize = currentPage.graphics.clientSize;\n        curBounds.width = (curBounds.width > 0) ? curBounds.width : (pageSize.width - curBounds.x);\n        curBounds.height = (curBounds.height > 0) ? curBounds.height : (pageSize.height - curBounds.y);\n        if (this.isPdfGrid) {\n            curBounds.height = (curBounds.height - this.bottomCellPadding);\n        }\n        return curBounds;\n    };\n    /**\n     * Calculates bounds where the shape was layout on the page.\n     * @private\n     */\n    ShapeLayouter.prototype.getPageResultBounds = function (currentBounds, shapeLayoutBounds) {\n        var result = currentBounds;\n        result.height = Math.min(result.height, shapeLayoutBounds.height);\n        return result;\n    };\n    /**\n     * Checks whether shape rectangle fits to the lay outing bounds.\n     * @private\n     */\n    ShapeLayouter.prototype.fitsToBounds = function (currentBounds, shapeLayoutBounds) {\n        var fits = (shapeLayoutBounds.height <= currentBounds.height);\n        return fits;\n    };\n    /**\n     * Initializes the offset `index`.\n     * * @default 0\n     * @private\n     */\n    ShapeLayouter.index = 0;\n    /**\n     * Initializes the `difference in page height`.\n     * * @default 0\n     * @private\n     */\n    ShapeLayouter.splitDiff = 0;\n    /**\n     * Determines the `end of Vertical offset` values.\n     * * @default false\n     * @private\n     */\n    ShapeLayouter.last = false;\n    /**\n     * Determines the document link annotation `border width`.\n     * * @default 0\n     * @private\n     */\n    ShapeLayouter.borderWidth = 0;\n    return ShapeLayouter;\n}(ElementLayouter));\nexport { ShapeLayouter };\n/**\n * Contains lay outing result settings.\n * @private\n */\nvar ShapeLayoutResult = /** @class */ (function () {\n    function ShapeLayoutResult() {\n    }\n    return ShapeLayoutResult;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLayoutElement } from './../layout-element';\nimport { ShapeLayouter } from './shape-layouter';\n/**\n * Base class for the main shapes.\n * @private\n */\nvar PdfShapeElement = /** @class */ (function (_super) {\n    __extends(PdfShapeElement, _super);\n    function PdfShapeElement() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    // methods\n    /**\n     * Gets the bounds.\n     * @private\n     */\n    PdfShapeElement.prototype.getBounds = function () {\n        var rect = this.getBoundsInternal();\n        return rect;\n    };\n    /**\n     * `drawGraphicsHelper` the graphics.\n     * @public\n     */\n    PdfShapeElement.prototype.drawGraphicsHelper = function (graphics, location) {\n        if ((graphics == null)) {\n            throw new Error('ArgumentNullException :graphics');\n        }\n        this.drawShapeHelper(graphics, location.x, location.y);\n    };\n    /**\n     * `drawShapeHelper` the graphics.\n     * @private\n     */\n    PdfShapeElement.prototype.drawShapeHelper = function (graphics, x, y) {\n        var bNeedSave = (x !== 0.5 || y !== 0.5);\n        var gState = null;\n        // Translate co-ordinates.\n        if (bNeedSave) {\n            // Save state.\n            gState = graphics.save();\n            graphics.translateTransform(x, y);\n        }\n        this.drawInternal(graphics);\n        if (bNeedSave) {\n            // Restore state.\n            graphics.restore(gState);\n        }\n    };\n    /**\n     * Layouts the element.\n     * @private\n     */\n    PdfShapeElement.prototype.layout = function (param) {\n        var layouter = new ShapeLayouter(this);\n        var result = layouter.layout(param);\n        return result;\n    };\n    return PdfShapeElement;\n}(PdfLayoutElement));\nexport { PdfShapeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfDrawElement.ts class for EJ2-PDF\n */\nimport { PdfShapeElement } from './pdf-shape-element';\n/**\n * Represents a base class for all page graphics elements.\n */\nvar PdfDrawElement = /** @class */ (function (_super) {\n    __extends(PdfDrawElement, _super);\n    /**\n     * Initializes a new instance of the `PdfDrawElement` class.\n     * @protected\n     */\n    function PdfDrawElement(pen) {\n        var _this = _super.call(this) || this;\n        if (typeof pen !== 'undefined') {\n            _this.mpen = pen;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfDrawElement.prototype, \"pen\", {\n        // Properties\n        /**\n         * Gets or sets a pen that will be used to draw the element.\n         * @public\n         */\n        get: function () {\n            return this.mpen;\n        },\n        set: function (value) {\n            this.mpen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfDrawElement;\n}(PdfShapeElement));\nexport { PdfDrawElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfFillElement.ts class for EJ2-PDF\n */\nimport { PdfDrawElement } from './draw-element';\nimport { PdfPen } from './../../pdf-pen';\nimport { PdfColor } from './../../pdf-color';\n/**\n * Represents a base class for all page graphics elements.\n */\nvar PdfFillElement = /** @class */ (function (_super) {\n    __extends(PdfFillElement, _super);\n    /**\n     * Initializes a new instance of the `PdfFillElement` class.\n     * @protected\n     */\n    function PdfFillElement(arg1, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Internal variable to store pen.\n         * @private\n         */\n        _this.mbrush = null;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof PdfPen) {\n            _this = _super.call(this, arg1) || this;\n        }\n        else {\n            _this.mbrush = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfFillElement.prototype, \"brush\", {\n        // Properties\n        /**\n         * Gets or sets a brush of the element.\n         * @public\n         */\n        get: function () {\n            return this.mbrush;\n        },\n        set: function (value) {\n            this.mbrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Gets the pen. If both pen and brush are not explicitly defined, default pen will be used.\n     * @protected\n     */\n    PdfFillElement.prototype.obtainPen = function () {\n        return ((this.mbrush == null) && (this.pen == null)) ? new PdfPen(new PdfColor(0, 0, 0)) : this.pen;\n    };\n    return PdfFillElement;\n}(PdfDrawElement));\nexport { PdfFillElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Path.ts class for EJ2-PDF\n */\nimport { PdfBrush } from './../brushes/pdf-brush';\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutFormat } from './../figures/base/element-layouter';\nimport { RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PathPointType } from './enum';\nimport { PdfFillElement } from './../figures/base/fill-element';\nimport { PdfFillMode } from './../enum';\n/**\n * `PdfPath` class Implements graphics path, which is a sequence of primitive graphics elements.\n * @private\n */\nvar PdfPath = /** @class */ (function (_super) {\n    __extends(PdfPath, _super);\n    /**\n     * Initializes a new instance of the `PdfPath` class.\n     * @public\n     */\n    /* tslint:disable-next-line:max-line-length */\n    function PdfPath(arg1, arg2, arg3, arg4) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Local variable to store the points.\n         * @private\n         */\n        _this.mpoints = null;\n        /**\n         * Local variable to store the path Types.\n         * @private\n         */\n        _this.mpathTypes = null;\n        /**\n         * Local variable to store the Start Figure.\n         * @private\n         */\n        _this.mStartFigure = true;\n        /**\n         * Local variable to store the fill Mode.\n         * @private\n         */\n        _this.mfillMode = PdfFillMode.Alternate;\n        /**\n         * Local variable to store the Beziers.\n         * @private\n         */\n        _this.isBeziers3 = false;\n        /**\n         * Local variable to store the xps.\n         * @private\n         */\n        _this.isXps = false;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof PdfPen) {\n            _this = _super.call(this, arg1) || this;\n            if (arg2 instanceof PdfBrush) {\n                _this = _super.call(this, arg1, arg2) || this;\n                _this.fillMode = arg3;\n            }\n            else if (arg2 !== null && typeof arg2 !== 'undefined' && arg3 !== null && typeof arg3 !== 'undefined') {\n                _this.addPath(arg2, arg3);\n            }\n        }\n        else if (arg1 instanceof PdfBrush) {\n            _this = _super.call(this, arg1) || this;\n            if (arg2 !== null && typeof arg2 !== 'undefined') {\n                _this.fillMode = arg2;\n            }\n            if (arg3 !== null && typeof arg3 !== 'undefined' && arg4 !== null && typeof arg4 !== 'undefined') {\n                _this.addPath(arg3, arg4);\n            }\n        }\n        else {\n            _this.addPath(arg1, arg2);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPath.prototype, \"fillMode\", {\n        // Properties\n        /**\n         * Gets or sets the fill mode.\n         * @public\n         */\n        get: function () {\n            return this.mfillMode;\n        },\n        set: function (value) {\n            this.mfillMode = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"pathPoints\", {\n        /**\n         * Gets the path points.\n         * @public\n         */\n        get: function () {\n            return this.points;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"pathTypes\", {\n        /**\n         * Gets the path point types.\n         * @public\n         */\n        get: function () {\n            return this.types;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"pointCount\", {\n        /**\n         * Gets the point count.\n         * @public\n         */\n        get: function () {\n            var count = 0;\n            if ((this.mpoints != null)) {\n                count = this.mpoints.length;\n            }\n            return count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"lastPoint\", {\n        /**\n         * Gets the last points.\n         * @public\n         */\n        get: function () {\n            return this.getLastPoint();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"points\", {\n        /**\n         * Gets the points list.\n         * @private\n         */\n        get: function () {\n            if ((this.mpoints == null)) {\n                this.mpoints = [];\n            }\n            return this.mpoints;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"types\", {\n        /**\n         * Gets the types.\n         * @private\n         */\n        get: function () {\n            if ((this.mpathTypes == null)) {\n                this.mpathTypes = [];\n            }\n            return this.mpathTypes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPath.prototype.draw = function (arg1, arg2, arg3, arg4) {\n        if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2.x, arg2.y);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg1, arg2, arg3, null);\n        }\n        else if (arg2 instanceof PointF && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg1, arg2.x, arg2.y, arg3);\n        }\n        else if (typeof arg2 === 'number' && (arg4 instanceof PdfLayoutFormat || arg4 == null) && typeof arg3 === 'number') {\n            var widthValue = (arg1.graphics.clientSize.width - arg2);\n            var layoutRect = new RectangleF(arg2, arg3, widthValue, 0);\n            return this.drawHelper(arg1, layoutRect, arg4);\n        }\n        else if (arg2 instanceof RectangleF && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg1, arg2, arg3);\n        }\n        else {\n            return this.drawHelper(arg1, arg2, arg3);\n        }\n    };\n    PdfPath.prototype.addArc = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof RectangleF) {\n            this.addArc(arg1.x, arg1.y, arg1.width, arg1.height, arg2, arg3);\n        }\n        else {\n            var points = this.getBezierArcPoints(arg1, arg2, (arg2 + arg3), (arg2 + arg4), arg5, arg6);\n            for (var i = 0; i < points.length; i = i + 8) {\n                /* tslint:disable-next-line:max-line-length */\n                var point = [points[i], points[i + 1], points[i + 2], points[i + 3], points[i + 4], points[i + 5], points[i + 6], points[i + 7]];\n                this.addPoints(point, PathPointType.Bezier3);\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PdfPath.prototype.addBezier = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {\n        if (arg1 instanceof PointF && arg2 instanceof PointF && arg3 instanceof PointF && arg4 instanceof PointF) {\n            this.addBezier(arg1.x, arg1.y, arg2.x, arg2.y, arg3.x, arg3.y, arg4.x, arg4.y);\n        }\n        else {\n            var points = [];\n            points.push(arg1);\n            points.push(arg2);\n            points.push(arg3);\n            points.push(arg4);\n            points.push(arg5);\n            points.push(arg6);\n            points.push(arg7);\n            points.push(arg8);\n            this.addPoints(points, PathPointType.Bezier3);\n        }\n    };\n    PdfPath.prototype.addEllipse = function (arg1, arg2, arg3, arg4) {\n        if (arg1 instanceof RectangleF) {\n            this.addEllipse(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else {\n            this.startFigure();\n            this.addArc(arg1, arg2, arg3, arg4, 0, 360);\n            this.closeFigure();\n        }\n    };\n    PdfPath.prototype.addLine = function (arg1, arg2, arg3, arg4) {\n        if (arg1 instanceof PointF && arg2 instanceof PointF) {\n            this.addLine(arg1.x, arg1.y, arg2.x, arg2.y);\n        }\n        else {\n            var points = [];\n            points.push(arg1);\n            points.push(arg2);\n            points.push(arg3);\n            points.push(arg4);\n            this.addPoints(points, PathPointType.Line);\n        }\n    };\n    PdfPath.prototype.addPath = function (arg1, arg2) {\n        if (arg1 instanceof PdfPath) {\n            this.addPath(arg1.pathPoints, arg1.pathTypes);\n        }\n        else {\n            if ((arg1 == null)) {\n                throw new Error('ArgumentNullException:pathPoints');\n            }\n            if ((arg2 == null)) {\n                throw new Error('ArgumentNullException:pathTypes');\n            }\n            var count = arg1.length;\n            if ((count !== arg2.length)) {\n                throw new Error('The argument arrays should be of equal length.');\n            }\n        }\n    };\n    PdfPath.prototype.addPie = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof RectangleF) {\n            this.addPie(arg1.x, arg1.y, arg1.width, arg1.height, arg2, arg3);\n        }\n        else {\n            this.startFigure();\n            this.addArc(arg1, arg2, arg3, arg4, arg5, arg6);\n            this.addPoint(new PointF((arg1 + (arg3 / 2)), (arg2 + (arg4 / 2))), PathPointType.Line);\n            this.closeFigure();\n        }\n    };\n    /**\n     * `add a polygon` specified by points.\n     * @param points The points of the polygon\n     */\n    PdfPath.prototype.addPolygon = function (points) {\n        var count = (points.length * 2);\n        var p = [];\n        this.startFigure();\n        for (var i = 0; i < points.length; i++) {\n            p.push(points[i].x);\n            p.push(points[i].y);\n        }\n        this.addPoints(p, PathPointType.Line);\n        this.closeFigure();\n    };\n    PdfPath.prototype.addRectangle = function (arg1, y, width, height) {\n        if (arg1 instanceof RectangleF) {\n            this.addRectangle(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else {\n            var points = [];\n            this.startFigure();\n            points.push(arg1);\n            points.push(y);\n            points.push((arg1 + width));\n            points.push(y);\n            points.push((arg1 + width));\n            points.push((y + height));\n            points.push(arg1);\n            points.push((y + height));\n            this.addPoints(points, PathPointType.Line);\n            this.closeFigure();\n        }\n    };\n    /**\n     * Starts a new figure.\n     * @public\n     */\n    PdfPath.prototype.startFigure = function () {\n        this.mStartFigure = true;\n    };\n    /**\n     * Closed all non-closed figures.\n     * @public\n     */\n    PdfPath.prototype.closeAllFigures = function () {\n        var startPath = this.pathPoints[0];\n        for (var i = 0; i < this.mpathTypes.length; i++) {\n            var pt = ((this.types[i]));\n            var flag = false;\n            if (((i !== 0) && (pt === PathPointType.Start))) {\n                this.closeFigure((i - 1));\n                flag = true;\n            }\n            else if (((i === (this.mpathTypes.length - 1)) && (!flag && this.isXps))) {\n                if ((startPath.x === this.pathPoints[i].y)) {\n                    this.closeFigure(i);\n                }\n            }\n        }\n    };\n    /**\n     * Gets the last point.\n     * @public\n     */\n    PdfPath.prototype.getLastPoint = function () {\n        var lastPoint = new PointF(0, 0);\n        var count = this.pointCount;\n        if (((count > 0) && (this.mpoints != null))) {\n            lastPoint.x = this.mpoints[(count - 1)].x;\n            lastPoint.y = this.mpoints[(count - 1)].y;\n        }\n        return lastPoint;\n    };\n    /**\n     * Gets the bezier points for arc constructing.\n     * @public\n     */\n    PdfPath.prototype.getBezierArcPoints = function (x1, y1, x2, y2, s1, e1) {\n        if ((x1 > x2)) {\n            var tmp = void 0;\n            tmp = x1;\n            x1 = x2;\n            x2 = tmp;\n        }\n        if ((y2 > y1)) {\n            var tmp = void 0;\n            tmp = y1;\n            y1 = y2;\n            y2 = tmp;\n        }\n        var fragAngle;\n        var numFragments;\n        if ((Math.abs(e1) <= 90)) {\n            fragAngle = e1;\n            numFragments = 1;\n        }\n        else {\n            numFragments = (Math.ceil((Math.abs(e1) / 90)));\n            fragAngle = (e1 / numFragments);\n        }\n        var xcen = ((x1 + x2) / 2);\n        var ycen = ((y1 + y2) / 2);\n        var rx = ((x2 - x1) / 2);\n        var ry = ((y2 - y1) / 2);\n        var halfAng = ((fragAngle * (Math.PI / 360)));\n        var kappa = (Math.abs(4.0 / 3.0 * (1.0 - Math.cos(halfAng)) / Math.sin(halfAng)));\n        var pointList = [];\n        for (var i = 0; (i < numFragments); i++) {\n            var theta0 = (((s1 + (i * fragAngle)) * (Math.PI / 180)));\n            var theta1 = (((s1 + ((i + 1) * fragAngle)) * (Math.PI / 180)));\n            var cos0 = (Math.cos(theta0));\n            var cos1 = (Math.cos(theta1));\n            var sin0 = (Math.sin(theta0));\n            var sin1 = (Math.sin(theta1));\n            if ((fragAngle > 0)) {\n                /* tslint:disable-next-line:max-line-length */\n                pointList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 - (kappa * sin0)))), (ycen - (ry * (sin0 + (kappa * cos0)))), (xcen + (rx * (cos1 + (kappa * sin1)))), (ycen - (ry * (sin1 - (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n            else {\n                /* tslint:disable-next-line:max-line-length */\n                pointList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 + (kappa * sin0)))), (ycen - (ry * (sin0 - (kappa * cos0)))), (xcen + (rx * (cos1 - (kappa * sin1)))), (ycen - (ry * (sin1 + (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n        }\n        return pointList;\n    };\n    /**\n     * `getBoundsInternal` Returns a rectangle that bounds this element.\n     * @public\n     */\n    PdfPath.prototype.getBoundsInternal = function () {\n        var points = this.pathPoints;\n        var bounds = new RectangleF(0, 0, 0, 0);\n        if ((points.length > 0)) {\n            var xmin = points[0].x;\n            var xmax = points[0].x;\n            var ymin = points[0].y;\n            var ymax = points[0].y;\n            for (var i = 1; i < points.length; i++) {\n                var point = points[i];\n                xmin = Math.min(point.x, xmin);\n                xmax = Math.max(point.x, xmax);\n                ymin = Math.min(point.y, ymin);\n                ymax = Math.max(point.y, ymax);\n            }\n            bounds = new RectangleF(xmin, ymin, (xmax - xmin), (ymax - ymin));\n        }\n        return bounds;\n    };\n    /**\n     * `drawInternal` Draws an element on the Graphics.\n     * @param graphics Graphics context where the element should be printed.\n     * @public\n     */\n    PdfPath.prototype.drawInternal = function (graphics) {\n        if ((graphics == null)) {\n            throw new Error('ArgumentNullException :graphics');\n        }\n        graphics.drawPath(this.obtainPen(), this.brush, this);\n    };\n    PdfPath.prototype.addPoints = function (points, pointType, startIndex, endIndex) {\n        if (typeof startIndex === 'undefined' && typeof endIndex === 'undefined') {\n            this.addPoints(points, pointType, 0, points.length);\n        }\n        else {\n            for (var i = startIndex; i < endIndex; i++) {\n                var point = new PointF(points[i], points[(i + 1)]);\n                if ((i === startIndex)) {\n                    if (((this.pointCount <= 0) || this.mStartFigure)) {\n                        this.addPoint(point, PathPointType.Start);\n                        this.mStartFigure = false;\n                    }\n                    else if (((point.x !== this.lastPoint.x) && (point.y !== this.lastPoint.y) && !this.isBeziers3)) {\n                        this.addPoint(point, PathPointType.Line);\n                    }\n                    else if ((point.x !== this.lastPoint.x) && (point.y !== this.lastPoint.y)) {\n                        this.addPoint(point, PathPointType.Bezier3);\n                    }\n                }\n                else {\n                    this.addPoint(point, pointType);\n                }\n                i++;\n            }\n        }\n    };\n    /**\n     * `add a point` Adds the point and its type\n     * @param points The points.\n     * @param pointType Type of the points.\n     * @private\n     */\n    PdfPath.prototype.addPoint = function (point, pointType) {\n        this.points.push(point);\n        this.types.push((pointType));\n    };\n    PdfPath.prototype.closeFigure = function (index) {\n        if (typeof index === 'undefined') {\n            if ((this.pointCount > 0)) {\n                this.closeFigure(this.pointCount - 1);\n            }\n            this.startFigure();\n        }\n        else {\n            if ((index < 0)) {\n                throw new Error('IndexOutOfRangeException()');\n            }\n            var pt = ((this.types[index]));\n            pt = (pt | PathPointType.CloseSubpath);\n            this.types[index] = (pt);\n        }\n    };\n    return PdfPath;\n}(PdfFillElement));\nexport { PdfPath };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPen } from './../pdf-pen';\nimport { RectangleF } from './../../drawing/pdf-drawing';\nimport { PdfFillElement } from './../figures/base/fill-element';\n/**\n * `PdfRectangleArea` class Implements graphics rectangle area, which is a sequence of primitive graphics elements.\n * @private\n */\nvar PdfRectangleArea = /** @class */ (function (_super) {\n    __extends(PdfRectangleArea, _super);\n    /* tslint:disable-next-line:max-line-length */\n    function PdfRectangleArea(arg1, arg2, arg3, arg4, arg5, arg6) {\n        var _this = _super.call(this) || this;\n        //Fields\n        /**\n         * public variable to store the rectangle.\n         * @public\n         */\n        _this.bounds = new RectangleF(0, 0, 0, 0);\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof PdfPen) {\n            _this = _super.call(this, arg1, arg2) || this;\n            if (arg3 instanceof RectangleF) {\n                _this.bounds = arg3;\n            }\n            else {\n                _this.bounds = new RectangleF(arg3, arg4, arg5, arg6);\n            }\n        }\n        else if (arg1 instanceof RectangleF) {\n            _this.bounds = arg1;\n        }\n        else {\n            _this.bounds = new RectangleF(arg1, arg2, arg3, arg4);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfRectangleArea.prototype, \"x\", {\n        //Properties\n        /**\n         * Gets or sets the X co-ordinate of the upper-left corner of this the element.\n         * @public\n         */\n        get: function () {\n            return this.bounds.x;\n        },\n        set: function (value) {\n            this.bounds.x = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRectangleArea.prototype, \"y\", {\n        /**\n         * Gets or sets the Y co-ordinate of the upper-left corner of this the element.\n         * @public\n         */\n        get: function () {\n            return this.bounds.y;\n        },\n        set: function (value) {\n            this.bounds.y = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRectangleArea.prototype, \"width\", {\n        /**\n         * Gets or sets the width of this element.\n         * @public\n         */\n        get: function () {\n            return this.bounds.width;\n        },\n        set: function (value) {\n            this.bounds.width = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRectangleArea.prototype, \"height\", {\n        /**\n         * Gets or sets the height of this element.\n         * @public\n         */\n        get: function () {\n            return this.bounds.height;\n        },\n        set: function (value) {\n            this.bounds.height = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    PdfRectangleArea.prototype.getBoundsInternal = function () {\n        return this.bounds;\n    };\n    return PdfRectangleArea;\n}(PdfFillElement));\nexport { PdfRectangleArea };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPen } from './../pdf-pen';\nimport { RectangleF } from './../../drawing/pdf-drawing';\nimport { PdfRectangleArea } from './rectangle-area';\n/**\n * `PdfEllipsePart` class Implements graphics ellipse part, which is a sequence of primitive graphics elements.\n * @private\n */\nvar PdfEllipsePart = /** @class */ (function (_super) {\n    __extends(PdfEllipsePart, _super);\n    /* tslint:disable-next-line:max-line-length */\n    function PdfEllipsePart(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * public variable to store the start angle.\n         * @public\n         */\n        _this.startAngle = 0;\n        /**\n         * public variable to store the sweep angle.\n         * @public\n         */\n        _this.sweepAngle = 0;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof RectangleF && typeof arg2 !== 'undefined' && typeof arg3 !== 'undefined') {\n            _this = _super.call(this, arg1) || this;\n            _this.startAngle = arg2;\n            _this.sweepAngle = arg3;\n        }\n        else if (arg1 instanceof PdfPen) {\n            if (arg3 instanceof RectangleF) {\n                _this = _super.call(this, arg1, arg2, arg3) || this;\n                _this.startAngle = arg4;\n                _this.sweepAngle = arg5;\n            }\n            else {\n                _this = _super.call(this, arg1, arg2, arg3, arg4, arg5, arg6) || this;\n                _this.startAngle = arg7;\n                _this.sweepAngle = arg8;\n            }\n        }\n        else {\n            _this = _super.call(this, arg1, arg2, arg3, arg4) || this;\n            _this.startAngle = arg5;\n            _this.sweepAngle = arg6;\n        }\n        return _this;\n    }\n    return PdfEllipsePart;\n}(PdfRectangleArea));\nexport { PdfEllipsePart };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * arc.ts class for EJ2-PDF\n */\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutFormat } from './../figures/base/element-layouter';\nimport { RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfEllipsePart } from './../figures/ellipse-part';\n/**\n * `PdfArc` class Implements graphics arc, which is a sequence of primitive graphics elements.\n * @private\n */\nvar PdfArc = /** @class */ (function (_super) {\n    __extends(PdfArc, _super);\n    /* tslint:disable-next-line:max-line-length */\n    function PdfArc(arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        var _this = this;\n        if (typeof arg1 === 'undefined') {\n            _this = _super.call(this) || this;\n        }\n        else if (arg1 instanceof RectangleF) {\n            _this = _super.call(this, arg1, arg2, arg3) || this;\n        }\n        else if (arg1 instanceof PdfPen) {\n            if (arg2 instanceof RectangleF) {\n                _this = _super.call(this, arg1, null, arg2, arg3, arg4) || this;\n            }\n            else if (typeof arg6 === 'undefined' && typeof arg7 === 'undefined') {\n                _this = _super.call(this, arg1, null, 0, 0, arg2, arg3, arg4, arg5) || this;\n            }\n            else if (typeof arg6 !== 'undefined' && typeof arg7 !== 'undefined') {\n                _this = _super.call(this, arg1, null, arg2, arg3, arg4, arg5, arg6, arg7) || this;\n            }\n        }\n        else if (typeof arg1 !== 'undefined' && typeof arg5 === 'undefined' && typeof arg6 === 'undefined') {\n            _this = _super.call(this, 0, 0, arg1, arg2, arg3, arg4) || this;\n        }\n        else if (typeof arg1 !== 'undefined' && typeof arg5 !== 'undefined' && typeof arg6 !== 'undefined') {\n            _this = _super.call(this, arg1, arg2, arg3, arg4, arg5, arg6) || this;\n        }\n        return _this;\n    }\n    PdfArc.prototype.draw = function (argu1, arg2, arg3, arg4) {\n        if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(argu1, arg2.x, arg2.y);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(argu1, arg2, null);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            return this.drawHelper(argu1, arg2, arg3, null);\n        }\n        else if (arg2 instanceof PointF && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(argu1, arg2.x, arg2.y, arg3);\n        }\n        else if (typeof arg2 === 'number' && (arg4 instanceof PdfLayoutFormat || arg4 == null) && typeof arg3 === 'number') {\n            var widthValue = (argu1.graphics.clientSize.width - arg2);\n            var layoutRect = new RectangleF(arg2, arg3, widthValue, 0);\n            return this.drawHelper(argu1, layoutRect, arg4);\n        }\n        else {\n            return this.drawHelper(argu1, arg2, arg3);\n        }\n    };\n    // Implementation\n    /**\n     * `drawInternal` Draws an element on the Graphics.\n     * @param graphics Graphics context where the element should be printed.\n     *\n     */\n    PdfArc.prototype.drawInternal = function (graphics) {\n        if ((graphics == null)) {\n            throw new Error('ArgumentNullException : graphics');\n        }\n        graphics.drawArc(this.obtainPen(), this.bounds, this.startAngle, this.sweepAngle);\n    };\n    return PdfArc;\n}(PdfEllipsePart));\nexport { PdfArc };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfTrueTypeFont.ts class for EJ2-PDF\n */\nimport { UnicodeTrueTypeFont } from './unicode-true-type-font';\nimport { PdfFont } from './pdf-font';\nimport { PdfFontStyle } from './enum';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfTextDirection } from './../enum';\nimport { RtlRenderer } from './rtl-renderer';\n//https://www.giftofspeed.com/base64-encoder/\nvar PdfTrueTypeFont = /** @class */ (function (_super) {\n    __extends(PdfTrueTypeFont, _super);\n    function PdfTrueTypeFont(base64String, size, style) {\n        var _this = _super.call(this, size) || this;\n        /**\n         * Indicates whether the font is embedded or not.\n         * @private\n         */\n        _this.isEmbedFont = false;\n        /**\n         * Indicates whether the font is unicoded or not.\n         * @private\n         */\n        _this.isUnicode = true;\n        if (style !== undefined) {\n            _this.createFontInternal(base64String, style);\n        }\n        else {\n            _this.createFontInternal(base64String, PdfFontStyle.Regular);\n        }\n        return _this;\n    }\n    PdfTrueTypeFont.prototype.equalsToFont = function (font) {\n        var result = false;\n        //let result : boolean = this.fontInternal.equalsToFont(font);\n        return result;\n    };\n    PdfTrueTypeFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n            var returnValue = this.getUnicodeLineWidth(line, /*out*/ width, format);\n            width = returnValue.width;\n        }\n        else {\n            width = this.fontInternal.getLineWidth(line);\n        }\n        var size = this.metrics.getSize(format);\n        width *= (PdfFont.charSizeMultiplier * size);\n        width = this.applyFormatSettings(line, format, width);\n        return width;\n    };\n    /**\n     * Returns width of the char.\n     */\n    PdfTrueTypeFont.prototype.getCharWidth = function (charCode, format) {\n        var codeWidth = this.fontInternal.getCharWidth(charCode);\n        var size = this.metrics.getSize(format);\n        codeWidth *= (0.001 * size);\n        return codeWidth;\n    };\n    //Implementation\n    PdfTrueTypeFont.prototype.createFontInternal = function (base64String, style) {\n        this.fontInternal = new UnicodeTrueTypeFont(base64String, this.size);\n        this.calculateStyle(style);\n        this.initializeInternals();\n    };\n    PdfTrueTypeFont.prototype.calculateStyle = function (style) {\n        var iStyle = this.fontInternal.ttfMetrics.macStyle;\n        if ((style & PdfFontStyle.Underline) !== 0) {\n            iStyle |= PdfFontStyle.Underline;\n        }\n        if ((style & PdfFontStyle.Strikeout) !== 0) {\n            iStyle |= PdfFontStyle.Strikeout;\n        }\n        this.setStyle(iStyle);\n    };\n    PdfTrueTypeFont.prototype.initializeInternals = function () {\n        var equalFont = null;\n        if (PdfDocument.enableCache) {\n            // Search for the similar fonts.\n            equalFont = PdfDocument.cache.search(this);\n        }\n        var internals = null;\n        // There is not equal font in the cache.\n        if (equalFont !== null && equalFont !== undefined) {\n            // Get the settings from the cached font.\n            internals = equalFont.getInternals();\n            var metrics = equalFont.metrics;\n            metrics = metrics.clone();\n            metrics.size = this.size;\n            this.metrics = metrics;\n            this.fontInternal = equalFont.fontInternal;\n        }\n        else {\n            if (equalFont == null) {\n                if (this.fontInternal instanceof UnicodeTrueTypeFont) {\n                    this.fontInternal.isEmbed = this.isEmbedFont;\n                }\n                this.fontInternal.createInternals();\n                internals = this.fontInternal.getInternals();\n                this.metrics = this.fontInternal.metrics;\n            }\n        }\n        this.metrics.isUnicodeFont = true;\n        this.setInternals(internals);\n        //this.ttfReader = (this.fontInternal as UnicodeTrueTypeFont).ttfReader;\n    };\n    /**\n     * Stores used symbols.\n     */\n    PdfTrueTypeFont.prototype.setSymbols = function (text) {\n        var internalFont = this.fontInternal;\n        if (internalFont != null) {\n            internalFont.setSymbols(text);\n        }\n    };\n    Object.defineProperty(PdfTrueTypeFont.prototype, \"Unicode\", {\n        /**\n         * Property\n         *\n         */\n        get: function () {\n            return this.isUnicode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // public get Font() : UnicodeTrueTypeFont {\n    //     return this.fontInternal as UnicodeTrueTypeFont;\n    // }\n    PdfTrueTypeFont.prototype.getUnicodeLineWidth = function (line, /*out*/ width, format) {\n        // if (line == null) {\n        //     throw new Error('ArgumentNullException : line');\n        // }\n        width = 0;\n        var glyphIndices = null;\n        var rtlRender = new RtlRenderer();\n        /* tslint:disable-next-line:max-line-length */\n        var result = rtlRender.getGlyphIndex(line, this, (format.textDirection === PdfTextDirection.RightToLeft) ? true : false, /*out*/ glyphIndices, true);\n        var resultGlyph = result.success;\n        glyphIndices = result.glyphs;\n        if (resultGlyph && glyphIndices !== null) {\n            var ttfReader = this.fontInternal.ttfReader;\n            for (var i = 0, len = glyphIndices.length; i < len; i++) {\n                var glyphIndex = glyphIndices[i];\n                var glyph = ttfReader.getGlyph(glyphIndex);\n                if (glyph !== null && typeof glyph !== 'undefined') {\n                    width += glyph.width;\n                }\n            }\n        }\n        return { success: resultGlyph, width: width };\n    };\n    return PdfTrueTypeFont;\n}(PdfFont));\nexport { PdfTrueTypeFont };\n","/**\n * PdfPageTemplateElement.ts class for EJ2-Pdf\n */\nimport { PdfDockStyle, PdfAlignmentStyle, TemplateType } from './enum';\nimport { PointF, SizeF } from './../drawing/pdf-drawing';\nimport { PdfTemplate } from './../graphics/figures/pdf-template';\nimport { PdfPage } from './pdf-page';\nimport { RectangleF } from './../drawing/pdf-drawing';\n/**\n * Describes a `page template` object that can be used as header/footer, watermark or stamp.\n */\nvar PdfPageTemplateElement = /** @class */ (function () {\n    /* tslint:disable */\n    function PdfPageTemplateElement(arg1, arg2, arg3, arg4, arg5) {\n        if (arg1 instanceof RectangleF && typeof arg2 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg1.width, arg1.height, null);\n        }\n        else if (arg1 instanceof RectangleF && arg2 instanceof PdfPage && typeof arg3 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg1.width, arg1.height, arg2);\n        }\n        else if (arg1 instanceof PointF && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg2.width, arg2.height, null);\n        }\n        else if (arg1 instanceof PointF && arg2 instanceof SizeF && arg3 instanceof PdfPage && typeof arg4 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg2.width, arg2.height, arg3);\n        }\n        else if (arg1 instanceof SizeF && typeof arg2 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1.width, arg1.height, null);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1, arg2, null);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && arg3 instanceof PdfPage && typeof arg4 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1, arg2, arg3);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            this.InitiateBounds(arg1, arg2, arg3, arg4, null);\n        }\n        else {\n            this.InitiateBounds(arg1, arg2, arg3, arg4, null);\n            // this.graphics.colorSpace = this.page.document.colorSpace;\n        }\n        /* tslint:enable */\n    }\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"dock\", {\n        // Properties\n        /**\n         * Gets or sets the `dock style` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.dockStyle;\n        },\n        set: function (value) {\n            // if (this.dockStyle !== value && this.Type === TemplateType.None) {\n            this.dockStyle = value;\n            // Reset alignment.\n            this.resetAlignment();\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"alignment\", {\n        /**\n         * Gets or sets `alignment` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.alignmentStyle;\n        },\n        set: function (value) {\n            // if (this.alignmentStyle !== value) {\n            this.setAlignment(value);\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"foreground\", {\n        /**\n         * Indicates whether the page template is located `in front of the page layers or behind of it`.\n         * @private\n         */\n        get: function () {\n            return this.isForeground;\n        },\n        set: function (value) {\n            // if (this.foreground !== value) {\n            this.isForeground = value;\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"background\", {\n        /**\n         * Indicates whether the page template is located `behind of the page layers or in front of it`.\n         * @private\n         */\n        get: function () {\n            return !this.isForeground;\n        },\n        set: function (value) {\n            this.isForeground = !value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"location\", {\n        /**\n         * Gets or sets `location` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.currentLocation;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"x\", {\n        /**\n         * Gets or sets `X` co-ordinate of the template element on the page.\n         * @private\n         */\n        get: function () {\n            var value = (typeof this.currentLocation !== 'undefined') ? this.currentLocation.x : 0;\n            return value;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation.x = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"y\", {\n        /**\n         * Gets or sets `Y` co-ordinate of the template element on the page.\n         * @private\n         */\n        get: function () {\n            var value = (typeof this.currentLocation !== 'undefined') ? this.currentLocation.y : 0;\n            return value;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation.y = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"size\", {\n        /**\n         * Gets or sets `size` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.size;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.template.reset(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"width\", {\n        /**\n         * Gets or sets `width` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.width;\n        },\n        set: function (value) {\n            if (this.template.width !== value && this.type === TemplateType.None) {\n                var size = this.template.size;\n                size.width = value;\n                this.template.reset(size);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"height\", {\n        /**\n         * Gets or sets `height` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.height;\n        },\n        set: function (value) {\n            if (this.template.height !== value && this.type === TemplateType.None) {\n                var size = this.template.size;\n                size.height = value;\n                this.template.reset(size);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"graphics\", {\n        /**\n         * Gets `graphics` context of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.graphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"template\", {\n        /**\n         * Gets Pdf `template` object.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.pdfTemplate === 'undefined' || this.pdfTemplate == null) {\n            //     this.pdfTemplate = new PdfTemplate(this.size);\n            // }\n            return this.pdfTemplate;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"type\", {\n        /**\n         * Gets or sets `type` of the usage of this page template.\n         * @private\n         */\n        get: function () {\n            return this.templateType;\n        },\n        set: function (value) {\n            this.updateDocking(value);\n            this.templateType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"bounds\", {\n        /**\n         * Gets or sets `bounds` of the page template.\n         * @public\n         */\n        get: function () {\n            return new RectangleF(new PointF(this.x, this.y), this.size);\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.location = new PointF(value.x, value.y);\n                this.size = new SizeF(value.width, value.height);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Initialize Bounds` Initialize the bounds value of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.InitiateBounds = function (arg1, arg2, arg3, arg4, arg5) {\n        this.x = arg1;\n        this.y = arg2;\n        this.pdfTemplate = new PdfTemplate(arg3, arg4);\n        // this.graphics.colorSpace = this.page.document.colorSpace;\n    };\n    /**\n     * `Updates Dock` property if template is used as header/footer.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.updateDocking = function (type) {\n        if (type !== TemplateType.None) {\n            switch (type) {\n                case TemplateType.Top:\n                    this.dock = PdfDockStyle.Top;\n                    break;\n                case TemplateType.Bottom:\n                    this.dock = PdfDockStyle.Bottom;\n                    break;\n                case TemplateType.Left:\n                    this.dock = PdfDockStyle.Left;\n                    break;\n                case TemplateType.Right:\n                    this.dock = PdfDockStyle.Right;\n                    break;\n            }\n            this.resetAlignment();\n        }\n    };\n    /**\n     * `Resets alignment` of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.resetAlignment = function () {\n        this.alignment = PdfAlignmentStyle.None;\n    };\n    /**\n     * `Sets alignment` of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.setAlignment = function (alignment) {\n        if (this.dock === PdfDockStyle.None) {\n            this.alignmentStyle = alignment;\n        }\n        else {\n            // Template is docked and alignment has been changed.\n            var canBeSet = false;\n            switch (this.dock) {\n                case PdfDockStyle.Left:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopLeft || alignment === PdfAlignmentStyle.MiddleLeft ||\n                        alignment === PdfAlignmentStyle.BottomLeft || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Top:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopLeft || alignment === PdfAlignmentStyle.TopCenter ||\n                        alignment === PdfAlignmentStyle.TopRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Right:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopRight || alignment === PdfAlignmentStyle.MiddleRight ||\n                        alignment === PdfAlignmentStyle.BottomRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Bottom:\n                    canBeSet = (alignment === PdfAlignmentStyle.BottomLeft || alignment === PdfAlignmentStyle.BottomCenter\n                        || alignment === PdfAlignmentStyle.BottomRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Fill:\n                    canBeSet = (alignment === PdfAlignmentStyle.MiddleCenter || alignment === PdfAlignmentStyle.None);\n                    break;\n            }\n            if (canBeSet) {\n                this.alignmentStyle = alignment;\n            }\n        }\n    };\n    /**\n     * Draws the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.draw = function (layer, document) {\n        var page = layer.page;\n        var bounds = this.calculateBounds(page, document);\n        if (bounds.x === -0) {\n            bounds.x = 0;\n        }\n        layer.graphics.drawPdfTemplate(this.template, new PointF(bounds.x, bounds.y), new SizeF(bounds.width, bounds.height));\n    };\n    /**\n     * Calculates bounds of the page template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.calculateBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.alignmentStyle !== PdfAlignmentStyle.None) {\n            result = this.getAlignmentBounds(page, document);\n        }\n        else if (this.dockStyle !== PdfDockStyle.None) {\n            result = this.getDockBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getAlignmentBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.type === TemplateType.None) {\n            result = this.getSimpleAlignmentBounds(page, document);\n        }\n        else {\n            result = this.getTemplateAlignmentBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getSimpleAlignmentBounds = function (page, document) {\n        var bounds = this.bounds;\n        var pdfSection = page.section;\n        var actualBounds = pdfSection.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        switch (this.alignmentStyle) {\n            case PdfAlignmentStyle.TopLeft:\n                x = 0;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.TopCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.TopRight:\n                x = actualBounds.width - this.width;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.MiddleLeft:\n                x = 0;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleRight:\n                x = actualBounds.width - this.width;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.BottomLeft:\n                x = 0;\n                y = actualBounds.height - this.height;\n                break;\n            case PdfAlignmentStyle.BottomCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = actualBounds.height - this.height;\n                break;\n            case PdfAlignmentStyle.BottomRight:\n                x = actualBounds.width - this.width;\n                y = actualBounds.height - this.height;\n                break;\n        }\n        bounds.x = x;\n        bounds.y = y;\n        return bounds;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getTemplateAlignmentBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        switch (this.alignmentStyle) {\n            case PdfAlignmentStyle.TopLeft:\n                if (this.type === TemplateType.Left) {\n                    x = -actualBounds.x;\n                    y = 0;\n                }\n                else if (this.type === TemplateType.Top) {\n                    x = -actualBounds.x;\n                    y = -actualBounds.y;\n                }\n                break;\n            case PdfAlignmentStyle.TopCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = -actualBounds.y;\n                break;\n            case PdfAlignmentStyle.TopRight:\n                if (this.type === TemplateType.Right) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = 0;\n                }\n                else if (this.type === TemplateType.Top) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = -actualBounds.y;\n                }\n                break;\n            case PdfAlignmentStyle.MiddleLeft:\n                x = -actualBounds.x;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleRight:\n                x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.BottomLeft:\n                if (this.type === TemplateType.Left) {\n                    x = -actualBounds.x;\n                    y = actualBounds.height - this.height;\n                }\n                else if (this.type === TemplateType.Bottom) {\n                    x = -actualBounds.x;\n                    y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                }\n                break;\n            case PdfAlignmentStyle.BottomCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                break;\n            case PdfAlignmentStyle.BottomRight:\n                if (this.type === TemplateType.Right) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = actualBounds.height - this.height;\n                }\n                else if (this.type === TemplateType.Bottom) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                }\n                break;\n        }\n        result.x = x;\n        result.y = y;\n        return result;\n    };\n    /**\n     * Calculates bounds according to the docking.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getDockBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.type === TemplateType.None) {\n            result = this.getSimpleDockBounds(page, document);\n        }\n        else {\n            result = this.getTemplateDockBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the docking.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getSimpleDockBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        var width = this.width;\n        var height = this.height;\n        switch (this.dockStyle) {\n            case PdfDockStyle.Left:\n                x = 0;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Top:\n                x = 0;\n                y = 0;\n                width = actualBounds.width;\n                height = this.height;\n                break;\n            case PdfDockStyle.Right:\n                x = actualBounds.width - this.width;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Bottom:\n                x = 0;\n                y = actualBounds.height - this.height;\n                width = actualBounds.width;\n                height = this.height;\n                break;\n            case PdfDockStyle.Fill:\n                x = 0;\n                x = 0;\n                width = actualBounds.width;\n                height = actualBounds.height;\n                break;\n        }\n        result = new RectangleF(x, y, width, height);\n        return result;\n    };\n    /**\n     * Calculates template bounds basing on docking if template is a page template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getTemplateDockBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var actualSize = section.pageSettings.getActualSize();\n        var x = this.x;\n        var y = this.y;\n        var width = this.width;\n        var height = this.height;\n        switch (this.dockStyle) {\n            case PdfDockStyle.Left:\n                x = -actualBounds.x;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Top:\n                x = -actualBounds.x;\n                y = -actualBounds.y;\n                width = actualSize.width;\n                height = this.height;\n                if (actualBounds.height < 0) {\n                    y = -actualBounds.y + actualSize.height;\n                }\n                break;\n            case PdfDockStyle.Right:\n                x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Bottom:\n                x = -actualBounds.x;\n                y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                width = actualSize.width;\n                height = this.height;\n                if (actualBounds.height < 0) {\n                    y -= actualSize.height;\n                }\n                break;\n            case PdfDockStyle.Fill:\n                x = 0;\n                x = 0;\n                width = actualBounds.width;\n                height = actualBounds.height;\n                break;\n        }\n        result = new RectangleF(x, y, width, height);\n        return result;\n    };\n    return PdfPageTemplateElement;\n}());\nexport { PdfPageTemplateElement };\n"],"names":["defaultToString","item","Object","prototype","toString","call","Dictionary","toStringFunction","this","table","nElements","toStr","getValue","key","pair","value","setValue","k","remove","previousElement","keys","keysArray","namesOfKeys","index1","length","pair1","push","values","valuesArray","namesOfValues","index2","pair2","containsKey","clear","size","PdfName","stringStartMark","internalValue","isSaving6","position6","normalizeValue","defineProperty","get","status6","set","enumerable","configurable","index6","val","save","writer","write","escapeString","clone","crossTable","newName","stringValue","result","i","len_1","ch","delimiters","indexOf","c","replacements","Operators","forTest","obj","endObj","r","whiteSpace","slash","newLine","stream","endStream","xref","f","n","trailer","startxref","eof","header","beginText","endText","beginPath","appendLineSegment","stroke","fill","fillEvenOdd","fillStroke","fillStrokeEvenOdd","appendbeziercurve","appendRectangle","saveState","restoreState","paintXObject","modifyCtm","modifyTM","setLineWidth","setLineCapStyle","setLineJoinStyle","setDashPattern","setFlatnessTolerance","closePath","closeStrokePath","closeFillStrokePath","setCharacterSpace","setWordSpace","setHorizontalScaling","setTextLeading","setFont","setRenderingMode","setTextRise","setTextScaling","setCoords","goToNextLine","setText","setTextWithFormatting","setTextOnNewLine","selectcolorspaceforstroking","selectcolorspacefornonstroking","setrbgcolorforstroking","setrbgcolorfornonstroking","setcmykcolorforstroking","setcmykcolorfornonstroking","setgraycolorforstroking","setgraycolorfornonstroking","clipPath","clipPathEvenOdd","endPath","setGraphicsState","comment","evenOdd","setMiterLimit","setColorAndPattern","setColorAndPatternStroking","DictionaryProperties","pages","kids","count","resources","type","mediaBox","parent","root","decodeParms","filter","font","type1","baseFont","encoding","subtype","contents","procset","colorSpace","extGState","pattern","xObject","width","height","bitsPerComponent","image","dctdecode","columns","blackIs1","s","predictor","deviceRgb","next","action","link","a","annot","p","rect","uri","annots","ca","CA","xyz","fit","dest","BM","flatedecode","rotate","bBox","form","w","cIDFontType2","cIDToGIDMap","identity","dw","fontDescriptor","cIDSystemInfo","fontName","flags","fontBBox","missingWidth","stemV","italicAngle","capHeight","ascent","descent","leading","avgWidth","fontFile2","maxWidth","xHeight","stemH","registry","ordering","supplement","type0","identityH","toUnicode","descendantFonts","background","shading","matrix","antiAlias","function","extend","shadingType","coords","domain","range","functionType","bitsPerSample","patternType","paintType","tilingType","xStep","yStep","PdfDictionary","dictionary","position7","primitiveItems","prefix","suffix","object","archive","isFont","encrypt","dictionaryProperties","items","index","status","freezeChanges","status7","isSaving7","index7","getArchive","setArchive","setEncrypt","modify","getEncrypt","freezer","bChanged","onBeginSave","beginSave","sender","onFontDictionaryBeginSave","fontDictionaryBeginSave","onDescendantFontBeginSave","descendantFontBeginSave","onTemplateBeginSave","pageBeginDrawTemplate","pageBeginSave","onBeginAnnotationSave","annotationBeginSave","onSectionBeginSave","saveEvent","sectionBeginSave","state","bRaiseEvent","Count","saveItems","SaveSectionCollectionEventHandler","SaveDescendantFontEventHandler","SaveFontDictionaryEventHandler","SaveAnnotationEventHandler","SaveSectionEventHandler","SaveTemplateEventHandler","PdfNumber","position5","integer","status5","isSaving5","index5","intValue","floatToString","number","returnString","toFixed","min","x","y","z","Math","PdfArray","array","startMark","endMark","position9","clonedObject9","internalElements","tempArray","elements","tempNumberArray","pdfNumber","add","status9","isSaving9","index9","pdfCrossTable","element","markedChange","contains","tempElement","inputElement","getItems","len","newArray","fromRectangle","bounds","insert","tempElements","markChanged","removeAt","__extends","extendStatics","d","b","setPrototypeOf","__proto__","Array","hasOwnProperty","__","constructor","create","PdfStream","_super","data","_this","dicPrefix","dicSuffix","clonedObject2","bCompress","isImageStream","isFontStream","dataStream2","bCompress2","clearStream","internalStream","text","Error","writeBytes","String","fromCharCode","onCmapBeginSave","cmapBeginSave","onFontProgramBeginSave","fontProgramBeginSave","compressContent","byteArray","charCodeAt","dataArray","Uint8Array","sw","CompressedStreamWriter","close","getCompressedString","addFilter","filterName","PdfReferenceHolder","name","isImage","bytesToString","output","SaveCmapEventHandler","SaveFontProgramEventHandler","InternalEnum","ForceEncoding","SourceType","PdfString","bHex","position1","clonedObject1","bDecrypted","isParentDecrypted","isPacked","isFormField","isColorSpace","isHexString","status1","isSaving1","bConverted","bForceEncoding","bytesToHex","bytes","undefined","encode","Ascii","pdfEncode","stringMark","escapeSymbols","currentData","CrossTable","newString","toUnicodeArray","bAddPrefix","code","byteToString","hexStringMark","hexFormatPattern","PdfReference","objNumber","genNumber","index3","position3","Number","status3","isSaving3","obj1","obj2","index4","position4","objectIndex","initialize","status4","isSaving4","primitiveObject","pdfReference","tempObj","position","cTable","document","isSaving","getReference","PdfAction","pdfDictionary","PdfUriAction","uniformResourceIdentifier","PdfHorizontalAlignment","PdfVerticalAlignment","PdfTextAlignment","TextRenderingMode","PdfLineJoin","PdfLineCap","PdfDashStyle","PdfFillMode","PdfColorSpace","PdfBlendMode","PdfGraphicsUnit","PdfGridImagePosition","PdfTextDirection","PdfColor","color1","color2","color3","color4","assignRGB","filled","redColor","greenColor","g","blueColor","grayColor","gray","alpha","maxColourChannelValue","cyanColor","magentaColor","yellowColor","blackColor","assignCMYK","red","green","blue","black","cyan","magenta","yellow","isEmpty","str","Rgb","rgbToString","GrayScale","grayScaleToString","Cmyk","cmykToString","ifStroking","colour","grayStringsSroke","grayStringsFill","rgbStrings","m","toArray","PointF","SizeF","RectangleF","arg1","arg2","arg3","arg4","pointf","sizef","Rectangle","left","top","right","bottom","topLeft","PdfBrush","PdfSolidBrush","color","pdfColor","monitorChanges","brush","streamWriter","getResources","saveChanges","currentColorSpace","diff","setColorAndSpace","resetChanges","PdfFontStyle","PdfFontFamily","PdfFontType","PdfWordWrapType","PdfSubSuperScript","FontEncoding","TtfCmapFormat","TtfCmapEncoding","TtfPlatformID","TtfMicrosoftEncodingID","TtfMacintoshEncodingID","FontDescriptorFlags","TtfCompositeGlyphFlags","PdfStringFormat","scalingFactor","wordWrapType","Word","internalLineLimit","textAlignment","verticalAlignment","direction","Top","isRightToLeft","internalCharacterSpacing","internalWordSpacing","clip","pdfSubSuperScript","None","internalParagraphIndent","firstLineIndent","trailingSpaces","isNoClip","initialLineIndent","StringTokenizer","textValue","currentPosition","getCharsCount","symbols","numSymbols","curIndex","readLine","pos","substr","text2","peekLine","line","readWord","peekWord","word","read","end","num","builder","peek","readToEnd","symbol","tab","spaces","whiteSpacePattern","PdfStringLayouter","isOverloadWithPosition","layout","arg5","arg6","arg7","clientSize","doLayout","format","rectSize","pageHeight","rectangle","reader","PdfStringLayoutResult","lineResult","lines","lineIndent","getLineIndent","layoutLine","numSymbolsInserted","returnedValue","copyToResult","success","numInserted","finalizeResult","firstLine","paragraphIndent","getLineHeight","lineSpacing","getLineWidth","layoutLineHeight","lineWidth","lineType","LineType","FirstParagraphLine","round","addToLineResult","NewLineBreak","curLine","curIndent","curLineWidth","getWrapType","WordOnly","textRemainder","substring","wordWrap","Character","ln","LayoutBreak","LastParagraphLine","layoutLines","breakType","info","LineInfo","actualSize","max","allowPartialLines","lineLimit","maxHeight","expHeight","lineHeight","trimLine","size1","rightToLeft","trim","empty","content","PdfFont","style","fontStyle","Regular","fontSize","setStyle","metrics","getHeight","Bold","Italic","Strikeout","Underline","fontMetrics","pdfFontInternals","measureString","temparg2","layoutArea","temparg3","equalsTo","equalsToFont","getInternals","setInternals","internals","applyFormatSettings","realWidth","characterSpacing","wordSpacing","charSizeMultiplier","syncObject","PdfWriter","pdfDocument","buffer","overload","tempOverload","ObjectStatus","PdfMainObjectCollection","objectCollections","mainObjectCollection","primitiveObjectCollection","isNew","objInfo","ObjectInfo","Registered","lookFor","reference","wasNew","trySetReference","found","setReference","destroy","_i","_a","pdfObject","objectCollectionIndex","PdfDocumentBase","isStreamCopied","PdfDocument","objects","currentSavingObject","pdfCatalog","setMainObjectCollection","setCrossTable","setCatalog","catalog","filename","Encoding","SW","StreamWriter","encoding_1","SW_1","Promise","resolve","reject","blobData","Blob","docSave","ObjectType","PdfCatalog","sections","tempDictionaryProperties","PdfCrossTable","maxGenNumIndex","objectCount","merging","internalTrailer","pdfObjects","saveHead","mappedReferences","markTrailerReferences","saveObjects","saveCount","xrefPos","registerObject","saveSections","saveTrailer","saveTheEndess","objectCollection","prevXRef","objectNum","prepareSubsection","saveSubsection","Free","getItem","offset","generation","isFree","addOffsetLength","addGenNumberLength","total","split","version","generateFileVersion","bNew","getSubReference","objnumber","nextObjNumber","tempIndex","tempkey","tempvalue","bForceNew","saveIndirectObject","currentSavingObj","doSaveObject","free","RegisteredObject","dereference","rh","tempOffset","offsetNumber","tempReference","Normal","PdfPageSize","letter","note","legal","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a10","b0","b1","b2","b3","b4","b5","archE","archD","archC","archB","archA","flsa","halfLetter","letter11x17","ledger","PdfPageOrientation","PdfPageRotateAngle","PdfNumberStyle","PdfDockStyle","PdfAlignmentStyle","TemplateType","PdfMargins","pdfMargin","setMargins","leftMargin","topMargin","rightMargin","bottomMargin","margin1","margin2","margin3","margin4","PdfPageSettings","margins","pageMargins","pageSize","rotateAngle","RotateAngle0","pageOrientation","Portrait","pageOrigin","isRotation","setSize","orientation","updateSize","Landscape","settings","getActualSize","PdfStreamWriter","dictionaryName","writeOperator","executeObject","useEvenOddRule","fillStrokePath","fillPath","closeFillPath","textScaling","strokePath","restoreGraphicsState","saveGraphicsState","startNextLine","writePoint","showText","checkTextParam","writeText","setLeading","setTextRenderingMode","renderingMode","setCharacterSpacing","charSpacing","setWordSpacing","showNextLineText","setColorSpace","temparg1","op","opcode","start","updateY","arg","string","writeComment","forStroking","setLineDashPattern","patternOffset","setLineDashPatternHelper","tempPattern","miterLimit","setLineCap","lineCapStyle","setLineJoin","lineJoinStyle","returnValue","appendBezierSegment","setColourWithPattern","colours","patternName","PdfPen","dashOffsetValue","penDashPattern","pdfDashStyle","Solid","pdfLineCap","pdfLineJoin","penWidth","internalMiterLimit","setBrush","Custom","Dash","Dot","DashDot","DashDotDot","sBrush","pdfBrush","currentPen","dashControl","lineJoin","lineCap","pen","getPattern","dashOffset","dashPattern","PdfTransformationMatrix","radDegFactor","PI","transformationMatrix","Matrix","translate","offsetX","offsetY","scale","scaleX","scaleY","angle","cos","sin","multiply","degreesToRadians","degreesX","degRadFactor","radiansToDegrees","radians","metrixElements","transform","point","x2","y2","tempMatrix","dispose","ProcedureSets","pdf","imageB","imageC","imageI","TemporaryDictionary","mKeys","mValues","ReferenceError","RangeError","splice","PdfTransparency","mode","PdfAutomaticFieldInfoCollection","automaticFieldsInformation","fieldInfo","automaticFields","PdfGraphicsElement","drawHelper","graphics","bNeedSave","gState","translateTransform","drawInternal","restore","PdfAutomaticField","internalBounds","internalTemplateSize","internalFont","internalBrush","internalPen","internalStringFormat","performDrawHelper","location","scalingX","scalingY","getFont","stringFormat","draw","location_1","PdfAutomaticFieldInfo","getSize","getBrush","defaultFont","getPageFromGraphics","page","currentPage","field","pageNumberFieldLocation","pageNumberField","ByteArray","mPosition","dataView","DataView","readByte","getBuffer","writeFromBase64String","base64","arr","encodedString","input","chr1","chr2","chr3","enc2","enc3","keyStr","resultIndex","totalLength","replace","charAt","byteLength","readNextTwoBytes","PdfBoolean","objectStatus","saving","boolToStr","ImageFormat","ImageDecoder","sof1Marker","sof2Marker","sof3Marker","sof5Marker","sof6Marker","sof7Marker","sof9Marker","sof10Marker","sof11Marker","sof13Marker","sof14Marker","sof15Marker","mFormat","Unknown","mbitsPerComponent","mStream","mHeight","mWidth","mImageData","internalBuffer","checkIfJpeg","Jpeg","parseJpegImage","reset","imgData","isLengthExceed","skip","readExceededJPGImage","mJpegHeader","getImageDictionary","imageData","imageStream","tempString","decodedString","imageDataAsNumberArray","compress","getColorSpace","getDecodeParams","decodeParams","isContinueReading","getMarker","skipStream","noOfBytes","temp","marker","markerLength","mPngHeader","GIF_HEADER","BMP_HEADER","PdfUnitConverter","dpi","updateProportionsHelper","convertUnits","from","to","convertFromPixels","convertToPixels","proportions","pixelPerInch","horizontalResolution","verticalResolution","PdfImage","imageWidth","imageHeight","imagePhysicalDimension","getPointSize","dpiX","dpiY","ucX","ucY","ptWidth","Pixel","Point","ptHeight","PdfBitmap","imageStatus","loadImage","initializeAsync","decoder","TtfTableInfo","checksum","TtfNameTable","TtfNameRecord","TtfHeadTable","TtfMetrics","macStyle","TtfHorizontalHeaderTable","TtfOS2Table","TtfPostTable","TtfLongHorMetric","TtfCmapSubTable","TtfCmapTable","TtfGlyphInfo","charCode","compareTo","glyph","TtfLocaTable","TtfAppleCmapSubTable","TtfMicrosoftCmapSubTable","TtfTrimmedCmapSubTable","TtfGlyphHeader","BigEndianWriter","capacity","int32Size","int16Size","int64Size","bufferLength","length_1","internalPosition","writeShort","flush","writeInt","writeUInt","buff","writeString","TtfReader","fontData","isTtcFont","isMacTtf","metricsName","isMacTTF","missedGlyphs","tableNames","entrySelectors","macintoshDictionary","microsoftDictionary","internalMacintoshGlyphs","internalMicrosoftGlyphs","readFontDictionary","nameTable","readNameTable","headTable","readHeadTable","initializeFontName","checkPreambula","numTables","readInt16","tableDirectory","tableKey","readString","readInt32","lowestPosition","fixOffsets","minOffset","MAX_VALUE","tableKeys","shift","tableInfo","getTable","formatSelector","readUInt16","recordsCount","nameRecords","record","platformID","encodingID","languageID","nameID","unicode","readFixed","fontRevision","checkSumAdjustment","readUInt32","magicNumber","unitsPerEm","created","readInt64","modified","xMin","yMin","xMax","yMax","lowestReadableSize","fontDirectionHint","indexToLocalFormat","glyphDataFormat","readHorizontalHeaderTable","ascender","descender","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","metricDataFormat","numberOfHMetrics","readOS2Table","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","readBytes","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","vendorIdentifier","fsSelection","usFirstCharIndex","usLastCharIndex","sTypoAscender","sTypoDescender","sTypoLineGap","usWinAscent","usWinDescent","ulCodePageRange1","ulCodePageRange2","sxHeight","sCapHeight","usDefaultChar","usBreakChar","usMaxContext","readPostTable","formatType","underlinePosition","underlineThickness","isFixedPitch","minType42","maxType42","minType1","maxType1","readWidthTable","glyphCount","advanceWidth","lsb","glyphWidth","floor","readCmapTable","tablesCount","subTables","subTable","readCmapSubTable","getCmapEncoding","Macintosh","Microsoft","Apple","readAppleCmapTable","readMicrosoftCmapTable","Trimmed","readTrimmedCmapTable","maxMacIndex","glyphInfo","getWidth","macintosh","addGlyph","collection","Unicode","microsoft","segCountX2","searchRange","entrySelector","rangeShift","segCount","endCount","readUshortArray","reservedPad","startCount","idDelta","idRangeOffset","glyphID","codeOffset","j","id","Symbol","firstCode","entryCount","fontFamily","postScriptName","glyphCode","Undefined","Roman","microsoftGlyphs","macintoshGlyphs","initializeMetrics","horizontalHeadTable","os2Table","postTable","cmapTables","bSymbol","isSymbol","factor","winAscent","macAscent","winDescent","macDescent","ceil","fontBox","widthTable","updateWidth","subScriptSizeFactor","superscriptSizeFactor","getGlyph","byteToProcess","space","getString","getDefaultGlyph","readLocaTable","bShort","offsets","updateGlyphChars","glyphChars","locaTable","glyphCharKeys","nextKey","processCompositeGlyph","glyphOffset","glyphHeader","numberOfContours","skipBytes","glyphIndex","MoreComponents","Arg1And2AreWords","WeHaveScale","WeHaveAnXyScale","WeHaveTwoByTwo","generateGlyphTable","newLocaTable","newGlyphTable","activeGlyphs","sort","glyphSize","glyphSizeAligned","align","nextGlyphOffset","nextGlyphIndex","oldGlyphOffset","oldNextGlyphOffset","glyphTableSize","updateLocaTable","bLocaIsShort","newLocaTableOut","newLocaUpdated","newLocaSize","getFontProgram","locaTableSize","getFontProgramLength","fontProgramLength","writeCheckSums","writeGlyphs","tableName","usedTablesSize","nextTableSize","calculateCheckSum","byte1","byte2","byte3","byte4","i_1","setOffset","createInternals","bIsLocaShort","isFontPresent","getGlyphChars","chars","charKeys","getAllGlyphs","allGlyphInfo","readFontProgram","result1","result2","convertString","getCharWidth","isUnicode","i1","i2","i3","i4","low","written","PdfFontMetrics","getAscent","getDescent","getLineGap","clearTypeFonts","clearTypeFontCollection","subSuperScript","SubScript","SuperScript","WidthTable","internalWidthTable","StandardWidthTable","widths","swt","UnicodeTrueTypeFont","base64String","nameString","isCompress","isEmbedFont","cmapPrefix","cmapEndCodespaceRange","cmapBeginRange","cmapEndRange","cmapSuffix","fontString","Initialize","ttfReader","ttfMetrics","fontDictionary","fontProgram","cmap","descendantFont","subsetName","getFontName","createDescendantFont","createCmap","createFontDictionary","createFontProgram","isBold","random","formatName","ret","createFontDescriptor","systemInfo","createSystemInfo","descriptor","getDescriptorFlags","getBoundBox","descFonts","usedChars","getDescendantWidth","generateCmap","generateFontProgram","chLen","firstGlyphIndex","lastGlyphIndex","firstGlyphIndexWasSet","widthDetails","first","last","middlePart","toHexString","nextRange","FixedPitch","Symbolic","Nonsymbolic","isItalic","ForceBold","abs","isCaseChange","toUpperCase","setSymbols","ArabicShapeRenderer","arabicCharTable","alef","alefHamza","alefHamzaBelow","alefMadda","lam","hamza","zeroWidthJoiner","hamzaAbove","hamzaBelow","wawHamza","yehHamza","waw","alefMaksura","yeh","farsiYeh","shadda","madda","lwa","lwawh","lwawhb","lwawm","bwhb","fathatan","superScriptalef","vowel","arabicMapTable","getCharacterShape","shape","level","str2","st","doShape","previous","ArabicShape","present","ligature","shapeCount","getShapeCount","Shapes","Value","append","Ligature","Type","shapeValue","shapeType","shapeVowel","shapeLigature","shapeShapes","Bidi","indexes","indexLevels","mirroringShapeCharacters","update","doMirrorShaping","res","getLogicalToVisualString","inputText","isRtl","rtlCharacters","RtlCharacters","getVisualOrder","setDefaultIndexLevel","doOrder","resultBuilder","sIndex","eIndex","odd","even","reArrange","pstart","pend","types","textOrder","rtlCharacterTypes","L","LRE","LRO","R","AL","RLE","RLO","PDF","EN","ES","ET","AN","CS","NSM","BN","B","S","WS","ON","charTypes","getCharacterCode","doVisualOrder","levels","characterCodes","setDefaultLevels","setLevels","updateLevels","getEmbeddedCharactersLength","preview","preType","checkNSM","checkEmbeddedCharacters","startType","endType","charType","checkEuropeanDigits","checkArabicCharacters","checkEuropeanNumberSeparator","checkEuropeanNumberTerminator","l","getLength","checkOtherNeutrals","checkOtherCharacters","pst","checkCommanCharacters","validSet","t","byte","lt","tt","rt","RtlRenderer","openBracket","closeBracket","rtl","wordSpace","customLayout","splitLayout","customSplitLayout","getGlyphIndex","glyphs","custom","fontInternal","Uint16Array","textDirection","layouted","txt","words","addChars","PdfLayoutType","PdfLayoutBreakType","PathPointType","PdfGradientBrush","mbackground","mbStroking","mfunction","mpatternDictionary","sh","aa","mcolorSpace","csValue","colorSpaceToDeviceName","mshading","patternDictionary","mmatrix","resetFunction","name_1","getName","resetPatternDictionary","cloneAntiAliasingValue","cloneBackgroundValue","PdfTemplate","writeTransformation","tempSize","templateSize","pdfGraphics","gr","GetResourceEventHandler","PdfGraphics","initializeCoordinates","PdfResources","addType","addSubType","baseDictionary","properties","getNames","primitive","names","sName","generateName","PdfTilingBrush","pdfNames","fonts","requireProcedureSet","procedureSetName","procSets","removeFont","Guid","getNewGuidString","xobjects","savable","transDic","parentXObjects","hasSameImageStream","oldReference","values_1","mStroking","mLocation","mDictionaryProperties","PdfPage","mPage","brushStream","mResources","setBox","setObligatoryFields","mTransformationMatrix","tempBrushStream","tempResource","mBox","tileTransform","box","mGraphics","name1","previousTextRenderingMode","Fill","previousCharacterSpacing","previousWordSpacing","previousTextScaling","procedureSets","isNormalRender","isUseFontSize","isEmfTextScaled","isEmf","isEmfPlus","isBaselineFormat","emfScalingFactor","colorSpaceChanged","isPointOverload","currentColorSpaces","isImageOptimized","graphicsState","istransparencySet","internalAutomaticFields","startCutIndex","canvasSize","pdfStreamWriter","pdfStringLayoutResult","internalMediaBoxUpperRightBound","clipBounds","pageLayer","bStateSaved","currentBrush","currentFont","bCSInitialized","currentStringFormat","drawPdfTemplate","template","bNeedScale","getTranslateTransform","getScaleTransform","newLocation","drawString","arg8","arg9","temparg4","temparg5","temparg6","temparg7","temparg8","temparg9","checkCorrectLayoutRectangle","drawStringLayoutResult","drawLine","stateControl","drawRectangle","xOffset","yOffset","layer","drawPathHelper","Winding","isPen","isBrush","isEvenOdd","Alternate","drawImage","physicalDimension","name_2","setResources","resource","getLineBounds","lineIndex","layoutRectangle","lineCount","getTextVerticalAlignShift","hShift","getHorizontalAlignShift","shouldJustify","textSize","layoutedRectangle","alignment","Center","Right","lineAlignment","Middle","Bottom","setLayer","pageSave","performDraw","applyStringSettings","horizontalScalingFactor","resultHeight","remainingString","drawLayoutResult","underlineStrikeoutText","getNextPage","section","getPages","setClip","tm","getTextRenderingMode","cs","ws","textHeight","boundsHeight","vAlignShift","ttfFont","lineInfo","hAlignShift","drawUnicodeLine","drawAsciiLine","justifyLine","useWordSpace","Justify","rtlRender","blocks","rightAlign","RightToLeft","drawUnicodeBlocks","breakUnicodeLine","tokens","token","convertToUnicode","getUnicodeString","xShift","spaceWidth","tokenWidth","converted","boundsWidth","hasWordSpacing","whitespacesCount","justifyStyle","goodWidth","hasSpaces","goodLineBreakStyle","underline","strikeout","linePen","createUnderlineStikeoutPen","vShift","underlineYOffset","strikeoutYOffset","x1","FillStroke","Stroke","ClipFlag","layoutBounds","firstParagraphLine","Left","lastDocumentCS","lastGraphicsCS","initCurrentColorSpace","penControl","brushControl","fontControl","colorspace","lgb","curSubSuper","prevSubSuper","setTransparency","trasparencies","transp","td","TransparencyData","name_3","clipTranslateMargins","clipArea","scaleTransform","rotateTransform","getRotateTransform","mediaBoxUpperRightBound","cropBox","PdfGraphicsState","textRenderingMode","doRestoreState","pop","drawPath","path","buildUpPath","pathPoints","pathTypes","fillMode","drawArc","constructArcPath","cnt","typeValue","Start","Bezier3","p2","p3","getBezierPoints","Line","checkFlags","points","pathTypesValuesMask","CloseSubpath","y1","startAng","sweepAngle","getBezierArc","pt","numX1","numY1","numX2","numY2","s1","e1","tmp","fragAngle1","numFragments","xcen","ycen","rx","ry","halfAng","kappa","pointsList","thetaValue0","thetaValue1","cos0","cos1","sin0","sin1","transparencyObject","internalTextRenderingMode","internalTextScaling","pdfColorSpace","pdfPen","pdfFont","alphaPen","alphaBrush","blendMode","PdfPageLayer","streamClipPageTemplates","isVisible","sublayer","contentLength","pdfPage","clipPageTemplates","layerid","layerName","initializeGraphics","PdfPageLayerCollection","sign","oPage","sc","isSame","origin","clipRect","getActualBounds","pageSettings","PdfCollection","parentLayerCount","optionalContent","PdfPageBase","lPage","parseLayers","list","firstArgument","secondArgument","addLayer","insertLayer","loadedPage","saveStream","restoreStream","saveData","defLayerIndex","pageDictionary","pdfSection","layers","defaultLayerIndex","layerCollection","PdfAnnotationCollection","alreadyExistsAnnotationError","missingAnnotationException","internalAnnotations","lists","annotation","doAdd","destination","setPage","layoutResult","lastPosition","setColor","annotationCollection","defaultLayer","parentDocument","annotations","setSection","resetProgress","isProgressOn","getClientSize","doc","drawPageTemplates","containsTemplates","backLayer","drawTemplates","frontLayer","PageAddedEventArgs","PdfSectionPageCollection","PdfDocumentTemplate","leftTemplate","checkElement","topTemplate","rightTemplate","bottomTemplate","evenLeft","evenTop","evenRight","evenBottom","oddLeft","oddTop","oddRight","oddBottom","getLeft","isEven","EvenLeft","OddLeft","getTop","EvenTop","OddTop","getRight","EvenRight","OddRight","getBottom","EvenBottom","OddBottom","pageCollectionIndex","templateElement","PdfSectionTemplate","leftValue","topValue","rightValue","bottomValue","stampValue","PdfSection","pageAdded","pdfPages","initialSettings","sectionCollection","pagesReferences","pageTemplate","pagesCollection","pointToNativePdf","setPageSettings","PageSettingsState","pageCount","foreground","documentHeaders","getDocumentTemplates","sectionTemplates","getSectionTemplates","templates","applyDocumentTopTemplate","applyDocumentBottomTemplate","applyDocumentLeftTemplate","applyDocumentRightTemplate","page_1","checkPresence","pageAddedMethod","args","onPageAdded","document_1","getLeftIndentWidth","top_1","getTopIndentHeight","getRightIndentWidth","getBottomIndentHeight","includeMargins","templateWidth","docTemplateWidth","templateHeight","docTemplateHeight","temproaryPages","applyPageSettings","container","parentSettings","PdfSectionCollection","rotateFactor","sectionHeaders","drawTemplatesHelper","pageRotate","sectionCount","pdfSectionCollection","section_1","checkSection","countPages","forEach","PdfDocumentPageCollection","pdfPageCollectionIndex","getLastSection","getPageByIndex","getPage","sectionStartIndex","pageIndex","numPages","PdfCacheCollection","referenceObjects","pdfFontCollection","search","group","getGroup","createNewGroup","tGroup","representative","removeGroup","slice","isMerging","defaultMargin","isMerge","cacheCollection","documentPageCollection","defaultStandardFont","PdfStandardFont","Helvetica","isCacheEnabled","checkPagesPresence","cache","PdfStandardFontMetricsFactory","getMetrics","getHelveticaMetrics","Courier","getCourierMetrics","TimesRoman","getTimesMetrics","getSymbolMetrics","ZapfDingbats","getZapfDingbatsMetrics","subSuperScriptFactor","helveticaBoldItalicAscent","helveticaBoldItalicDescent","helveticaBoldItalicName","arialBoldWidth","helveticaBoldAscent","helveticaBoldDescent","helveticaBoldName","helveticaItalicAscent","helveticaItalicDescent","helveticaItalicName","arialWidth","helveticaAscent","helveticaDescent","helveticaName","courierBoldItalicAscent","courierBoldItalicDescent","courierBoldItalicName","fixedWidth","courierBoldAscent","courierBoldDescent","courierBoldName","courierItalicAscent","courierItalicDescent","courierItalicName","courierAscent","courierDescent","courierName","timesBoldItalicAscent","timesBoldItalicDescent","timesBoldItalicName","timesRomanBoldItalicWidths","timesBoldAscent","timesBoldDescent","timesBoldName","timesRomanBoldWidth","timesItalicAscent","timesItalicDescent","timesItalicName","timesRomanItalicWidth","timesAscent","timesDescent","timesName","timesRomanWidth","symbolAscent","symbolDescent","symbolName","symbolWidth","zapfDingbatsAscent","zapfDingbatsDescent","zapfDingbatsName","zapfDingbatsWidth","fontFamilyPrototype","encodings","pdfFontFamily","checkStyle","initializeInternals","convert","getCharWidthInternal","equal","stFont","fontFamilyEqual","lineReducer","styleEqual","WinAnsiEncoding","charOffset","PdfAnnotation","textBrush","textFont","internalColor","darkness","nativeRectangle","initialHeight","tempLoacation","PdfLinkAnnotation","PdfActionLinkAnnotation","pdfAction","getSetAction","PdfDocumentLinkAnnotation","pdfDestination","ElementLayouter","layoutElement","getElement","param","layoutInternal","Layouter","getPaginateBounds","usePaginateBounds","paginateBounds","PdfLayoutFormat","baseFormat","break","boundsSet","layoutType","layoutPaginateBounds","PdfLayoutParams","layoutFormat","PdfLayoutResult","PdfBorders","defaultBorderPenLeft","dashStyle","defaultBorderPenRight","defaultBorderPenTop","defaultBorderPenBottom","leftPen","rightPen","topPen","bottomPen","PdfPaddings","hasLeftPad","hasRightPad","hasTopPad","hasBottomPad","leftPad","rightPad","bottomPad","topPad","PdfLayoutElement","beginPageLayout","endPageLayout","onBeginPageLayout","onEndPageLayout","bEmbedFonts","default","newBound","TextLayouter","currentBounds","pageResult","TextPageLayoutResult","remainder","layoutOnPage","getLayoutResult","PdfTextLayoutResult","lastLineBounds","checkCorrectBounds","stringResult","textFinished","FitElement","PdfTextWebLink","getTextPageBounds","verticalShift","remainderText","lastLineTextBounds","PdfTextElement","elementValue","hasPointOverload","isPdfTextElement","drawText","stringLayoutResult","previousPosition","calculateResultBounds","lineSize","maximumWidth","startPosition","PdfUriAnnotation","pdfUriAction","uriAction","uniformResourceLocator","uriAnnotation","recalculateBounds","defaultBorder","previousFontStyle","calculateBounds","url","drawMultipleLineWithPoint","drawMultipleLineWithBounds","PdfNumbersConvertor","intArabic","numberStyle","Numeric","LowerLatin","arabicToLetter","toLowerCase","LowerRoman","arabicToRoman","UpperLatin","UpperRoman","retval","retvalM","generateNumber","retvalCM","retvalD","retvalCD","retvalC","retvalXC","retvalL","retvalXL","retvalX","retvalIX","retvalV","retvalIV","retvalI","arabic","stack","convertToLetter","appendChar","magnitude","numberstring","letterLimit","acsiiStartIndex","PdfTemplateValuePair","pdfTemplate","PdfMultipleValueField","drawLocation","PdfPageNumberField","internalNumberStyle","internalGetValue","PdfCompositeField","arguments","internalText","automaticField","PdfSingleValueField","painterGraphics","PdfPageCountField","PdfDestinationMode","PdfExtend","PdfDestination","destinationMode","Location","zoomFactor","destinationLocation","initializePrimitive","simplePage","FitToPage","PdfFunction","mDictionary","PdfSampledFunction","sizes","samples","checkParams","setDomainAndRange","setSizeAndValues","PdfLinearGradientMode","ShadingType","KnownColor","PdfBrushes","sBrushes","AliceBlue","AntiqueWhite","Aqua","Aquamarine","Azure","Beige","Bisque","Black","BlanchedAlmond","Blue","BlueViolet","Brown","BurlyWood","CadetBlue","Chartreuse","Chocolate","Coral","CornflowerBlue","Cornsilk","Crimson","Cyan","DarkBlue","DarkCyan","DarkGoldenrod","DarkGray","DarkGreen","DarkKhaki","DarkMagenta","DarkOliveGreen","DarkOrange","DarkOrchid","DarkRed","DarkSalmon","DarkSeaGreen","DarkSlateBlue","DarkSlateGray","DarkTurquoise","DarkViolet","DeepPink","DeepSkyBlue","DimGray","DodgerBlue","Firebrick","FloralWhite","ForestGreen","Fuchsia","Gainsboro","GhostWhite","Gold","Goldenrod","Gray","Green","GreenYellow","Honeydew","HotPink","IndianRed","Indigo","Ivory","Khaki","Lavender","LavenderBlush","LawnGreen","LemonChiffon","LightBlue","LightCoral","LightCyan","LightGoldenrodYellow","LightGray","LightGreen","LightPink","LightSalmon","LightSeaGreen","LightSkyBlue","LightSlateGray","LightSteelBlue","LightYellow","Lime","LimeGreen","Linen","Magenta","Maroon","MediumAquamarine","MediumBlue","MediumOrchid","MediumPurple","MediumSeaGreen","MediumSlateBlue","MediumSpringGreen","MediumTurquoise","MediumVioletRed","MidnightBlue","MintCream","MistyRose","Moccasin","NavajoWhite","Navy","OldLace","Olive","OliveDrab","Orange","OrangeRed","Orchid","PaleGoldenrod","PaleGreen","PaleTurquoise","PaleVioletRed","PapayaWhip","PeachPuff","Peru","Pink","Plum","PowderBlue","Purple","Red","RosyBrown","RoyalBlue","SaddleBrown","Salmon","SandyBrown","SeaGreen","SeaShell","Sienna","Silver","SkyBlue","SlateBlue","SlateGray","Snow","SpringGreen","SteelBlue","Tan","Teal","Thistle","Tomato","Transparent","Turquoise","Violet","Wheat","White","WhiteSmoke","Yellow","YellowGreen","colorName","getColorValue","PdfBlend","precision","mFactors","mPositions","positionarray","mCount","generateColorBlend","positions","cBlend","PdfColorBlend","clrs","c1","c2","interpolate","colors","clonePdfBlend","blend","factors","gcd","u","v","iU","iV","gcdInt","mcolors","getFunction","colourComponents","getColorComponentsCount","maxComponentValue","getMaxComponentValue","setRange","func","mbrush","samplesCount","step","intervals","getIntervals","getSamplesValues","cloneColorBlend","maxValue","sampleCount","getGrayscaleSamples","getCmykSamples","getRgbSamples","getNextColor","indexHi","indexLow","getIndices","positionLow","positionHi","colorLow","colorHi","currPos","prev","PdfLinearGradientBrush","mPointStart","mPointEnd","setPoints","BackwardDiagonal","ForwardDiagonal","Horizontal","Vertical","mBoundaries","radAngle","tan","centre","p1","cp1","subPoints","choosePoint","coef","mulPoints","addPoints","mulPoint","mColours","mColourBlend","initShading","mBlend","extStart","extEnd","End","point1","point2","interpolationColors","PdfRadialGradientBrush","centerStart","radiusStart","centerEnd","radiusEnd","colorStart","colorEnd","mRadiusStart","mRadiusEnd","mColour","mColourBlends","extend1","extEnd1","pointStart","pointEnd","rBrush","PdfBorderOverlapStyle","PdfGridStyleBase","gridBackgroundBrush","gridTextBrush","gridTextPen","gridFont","gridBackgroundImage","PdfGridStyle","gridBorderOverlapStyle","Overlap","bAllowHorizontalOverflow","gridHorizontalOverflowType","PdfHorizontalOverflowType","LastPage","gridCellSpacing","gridCellPadding","PdfGridCellStyle","gridCellBorders","PdfGridRowStyle","gridRowBackgroundBrush","setBackgroundBrush","cells","getCell","backgroundBrush","gridRowTextBrush","setTextBrush","gridRowTextPen","setTextPen","textPen","gridRowFont","gridRowBorder","setBorder","borders","setParent","gridRowBackgroundImage","setBackgroundImage","PdfGridCell","row","cellWidth","cellHeight","tempval","fontSpilt","finsh","rowSpanRemainingHeight","hasRowSpan","hasColSpan","isFinish","gridRowSpan","colSpan","gridRow","internalIsCellMergeContinue","internalIsRowMergeContinue","internalIsCellMergeStart","internalIsRowMergeStart","remaining","objectValue","PdfGrid","grid","isSingleGrid","ParentCell","isChildGrid","rowCount","rows","getRow","colCount","rowSpanExists","hasRowSpanSpan","cellStyle","measureHeight","columnSpanExists","isComplete","measureWidth","layouter","getTextFont","webLink","cellPadding","cellSpacing","drawCellBackground","getBackgroundBrush","backgroundImage","getBackgroundImage","adjustContentLayoutArea","returnBounds","rowSpan","cancelSubsequentSpans","allowHorizontalOverflow","rowOverflowIndex","adjustOuterLayoutArea","getTextPen","getTextBrush","strFormat","getStringFormat","innerLayoutArea","allowRowBreakAcrossPages","splitChildRowIndex","rowFontSplit","repeatFlag","childGrid","layoutRect","PdfGridLayouter","PdfGridLayoutFormat","LayoutFormat","Paginate","setSpan","checkSpan","childGridResult","rowBreakHeightValue","rowBreakHeight","NestedGridLayoutResult","imageBounds","drawCellBorders","borderOverlapStyle","Inside","Square","isHeader","currentColIndex","columnSpan","isCellMergeContinue","span","totalWidth","compWidth","getColumn","currentRowIndex","rowCollection","headers","totalHeight","getHeader","rowMergeComplete","calculateWidth","currentValue","cellIndex","internalWidth","tempWidth","PdfGridCellCollection","cell","tempcell","PdfGridColumn","columnWidth","isCustomWidth","PdfGridColumnCollection","internalColumns","measureColumnsWidth","initialWidth","isPageWidth","getDefaultWidths","subFactor","PdfGridRow","gridRowOverflowIndex","rowHeight","rowWidth","isrowFinish","isRowSpanRowHeightSet","noOfPageCount","isRowHeightSet","isPageBreakRowSpanApplied","isRowMergeComplete","isHeaderRow","pdfGrid","bRowSpanExists","gridCells","rowStyle","border","gridRowBreakHeight","gridResult","bColumnSpanExists","cellIn","rowin","rowWid","PdfGridRowCollection","addRow","temprow","PdfGridHeaderCollection","gridSize","isGridSplit","isRearranged","pageBounds","listOfNavigatePages","parentCellIndex","breakRow","hasColumnSpan","beginCellDraw","endCellDraw","bRepeatHeader","gridColumns","gridRows","gridHeaders","gridInitialWidth","gridStyle","ispageWidth","ischildGrid","measure","parentCell","onBeginCellDraw","raiseBeginCellDraw","onEndCellDraw","raiseEndCellDraw","hasChanged","currentRow","gridLocation","currentCellIndex","maxSpan","isRowMergeContinue","isCellMergeStart","isRowMergeStart","maximumRowSpan","cellcolSpan","cellrowSpan","cellmaxSpan","padding","columnCount","childGridColumnWidth","colCount_1","colCount_2","RowCount","ColCount","colWidth","childGridColWidth","childheight","flag","columnRanges","currentLocation","slr","isPaginate","getFormat","gridLayoutFormat","currentPageBounds","currentGraphics","FitColumnsToPage","Grid","startLocation","hType","horizontalOverflowType","determineColumnDrawRanges","startColumn","endColumn","cellWidths","availableWidth","subWidths","layoutedPages","startPage","cellBounds","cellStartIndex","cellEndIndex","returnObject","raiseBeforePageLayout","drawHeader","headerHeight","headerResult","drawRow","repeatRowIndex","OnePage","getNextPageformat","repeatRow","originalHeight","rowResult","rowIndex","tempResult","raisePageLayouted","cancel","isRowBreaksNextPage","i_2","repeatHeader","j_1","headerRepeat","j_2","tempResult1","i_3","checkIsFisished","i_4","i_5","recalHeight","ReCalculateHeight","secion","startIndex","endIndex","pageGraphics","location_2","totalwidth","i_6","isPdfGrid","maximumCellBoundsWidth","largeNavigatePage","rowLayoutBoundsWidth","NextPage","reArrangePages","FinishedDrawingCell","nextPage","pageindex","CheckIfDefaultFormat","defaultFormat","measureTrailingSpaces","noClip","RaiseBeforeCellDraw","PdfGridBeginCellDrawEventArgs","raiseAfterCellDraw","cellstyle","PdfGridEndCellDrawEventArgs","count_1","isChanged","PdfGridLayoutResult","newHeight","raiseBeginPageLayout","PdfGridBeginPageLayoutEventArgs","startRowIndex","PdfGridEndPageLayoutEventArgs","raiseEndPageLayout","result_1","RowLayoutResult","rowHeightWithSpan","currRowIndex","calculatedHeight","FitPage","drawRowWithBreak","repeatRowNumber","isFit","isFitToCell","location_4","cancelSpans","tempValue","currentHeight","calculateHeight","gridHeight","cellstyle1","rowBreakPageHeightCellIndex","GridCellEventArgs","gridRowIndex","gridCellIndex","gridBounds","bSkip","PdfCancelEventArgs","isCancel","BeginPageLayoutEventArgs","EndPageLayoutEventArgs","nextPdfPage","startRow","layoutedBounds","bIsFinished","ShapeLayouter","olderPdfForm","shapeBounds","totalPageSize","shapeLayoutBounds","getBounds","ShapeLayoutResult","endArgs","getNextShapeBounds","curBounds","sBounds","checkCorrectCurrentBounds","fitToPage","fitsToBounds","shapeFinished","getDrawBounds","drawShape","getPageResultBounds","drawGraphicsHelper","bottomCellPadding","splitDiff","borderWidth","PdfShapeElement","apply","getBoundsInternal","drawShapeHelper","PdfDrawElement","mpen","PdfFillElement","obtainPen","PdfPath","mpoints","mpathTypes","mStartFigure","mfillMode","isBeziers3","isXps","addPath","getLastPoint","widthValue","addArc","getBezierArcPoints","addBezier","addEllipse","startFigure","closeFigure","addLine","addPie","addPoint","addPolygon","addRectangle","closeAllFigures","startPath","lastPoint","pointCount","fragAngle","pointList","theta0","theta1","xmin","xmax","ymin","ymax","pointType","PdfRectangleArea","PdfEllipsePart","startAngle","PdfArc","argu1","PdfTrueTypeFont","createFontInternal","getUnicodeLineWidth","codeWidth","calculateStyle","iStyle","equalFont","enableCache","isEmbed","isUnicodeFont","glyphIndices","resultGlyph","PdfPageTemplateElement","InitiateBounds","dockStyle","resetAlignment","alignmentStyle","setAlignment","isForeground","templateType","updateDocking","dock","canBeSet","TopLeft","MiddleLeft","BottomLeft","TopCenter","TopRight","MiddleRight","BottomRight","BottomCenter","MiddleCenter","getAlignmentBounds","getDockBounds","getSimpleAlignmentBounds","getTemplateAlignmentBounds","actualBounds","getSimpleDockBounds","getTemplateDockBounds"],"mappings":"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AAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,MACpB,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,MACpB,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,MACpB,IAAU,IAAU,MACpB,IAAU,IAAU,MACpB,IAAU,IAAU,MACpB,IAAU,IAAU,MACpB,IAAU,IAAU,MACpB,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,MACpB,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,MACpB,IAAU,IAAU,IAAU,IAAU,MACxC,IAAU,IAAU,MACpB,IAAU,IAAU,MACpB,IAAU,IAAU,MACpB,IAAU,IAAU,MACpB,IAAU,IAAU,MACpB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,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,OAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,OAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,OAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,OAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,OAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAE7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,KAAM,MAC7CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,MAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,MAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,MAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,MAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,MAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,MAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,MAC9CR,KAAKq/C,yBAAyB7+C,SAAS,KAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KAAKq/C,yBAAyB7+C,SAAS,MAAO,OAC9CR,KA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,IAAK,KAMTd,EAA8B4B,YAC1B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAM/E5B,EAA8BqD,iBAC1B,IAAK,IAAK,IAAK,IAAK,IAA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K,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,EAAG,IAAK,EAAG,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,EACzE,IAAK,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAAM,IAAK,IAAK,IAAK,EACzE,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EACzE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,KAMTzC,EAA8ByD,aAC1B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,GAMxCzD,EAA8B6D,mBAC1B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAA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"}