{"version":3,"file":"ej2-excel-export.es2015.js","sources":["../src/es6/cell-style.js","../src/es6/cell.js","../src/es6/column.js","../src/es6/row.js","../src/es6/worksheets.js","../src/es6/worksheet.js","../src/es6/image.js","../src/es6/value-formatter.js","../src/es6/csv-helper.js","../src/es6/blob-helper.js","../src/es6/auto-filters.js","../src/es6/workbook.js","../src/es6/index.js"],"sourcesContent":["/**\n * CellStyle class\n * @private\n */\nexport class CellStyle {\n    constructor() {\n        this.numFmtId = 0;\n        this.backColor = 'none';\n        this.fontName = 'Calibri';\n        this.fontSize = 10.5;\n        this.fontColor = '#000000';\n        this.italic = false;\n        this.bold = false;\n        this.underline = false;\n        this.strikeThrough = false;\n        this.wrapText = false;\n        this.hAlign = 'general';\n        this.vAlign = 'bottom';\n        this.indent = 0;\n        this.rotation = 0;\n        this.numberFormat = 'GENERAL';\n        this.type = 'datetime';\n        this.borders = new Borders();\n        this.isGlobalStyle = false;\n    }\n}\n/**\n * Font Class\n * @private\n */\nexport class Font {\n    constructor() {\n        this.sz = 10.5;\n        this.name = 'Calibri';\n        this.u = false;\n        this.b = false;\n        this.i = false;\n        this.color = 'FF000000';\n        this.strike = false;\n    }\n}\n/**\n * CellXfs class\n * @private\n */\nexport class CellXfs {\n}\n/**\n * Alignment class\n * @private\n */\nexport class Alignment {\n}\n/**\n * CellStyleXfs class\n * @private\n */\nexport class CellStyleXfs {\n}\n/**\n * CellStyles class\n * @private\n */\nexport class CellStyles {\n    constructor() {\n        this.name = 'Normal';\n        this.xfId = 0;\n    }\n}\n/**\n * NumFmt class\n * @private\n */\nexport class NumFmt {\n    constructor(id, code) {\n        this.numFmtId = id;\n        this.formatCode = code;\n    }\n}\n/**\n * Border class\n * @private\n */\nexport class Border {\n    constructor(mLine, mColor) {\n        this.lineStyle = mLine;\n        this.color = mColor;\n    }\n}\n/**\n * Borders class\n * @private\n */\nexport class Borders {\n    constructor() {\n        this.left = new Border('none', '#FFFFFF');\n        this.right = new Border('none', '#FFFFFF');\n        this.top = new Border('none', '#FFFFFF');\n        this.bottom = new Border('none', '#FFFFFF');\n        this.all = new Border('none', '#FFFFFF');\n    }\n}\n","/**\n * Worksheet class\n * @private\n */\nexport class Cell {\n}\n/**\n * Cells class\n * @private\n */\nexport class Cells extends Array {\n    constructor() {\n        super(...arguments);\n        this.add = (cell) => {\n            let inserted = false;\n            let count = 0;\n            for (let c of this) {\n                if (c.index === cell.index) {\n                    this[count] = cell;\n                    inserted = true;\n                }\n                count++;\n            }\n            if (!inserted) {\n                this.push(cell);\n            }\n        };\n    }\n}\n","/**\n * Column class\n * @private\n */\nexport class Column {\n}\n","/**\n * Row class\n * @private\n */\nexport class Row {\n}\n/**\n * Rows class\n * @private\n */\nexport class Rows extends Array {\n    constructor() {\n        super(...arguments);\n        this.add = (row) => {\n            this.push(row);\n        };\n    }\n}\n","/**\n * Worksheets class\n * @private\n */\nexport class Worksheets extends Array {\n}\n","/**\n * Worksheet class\n * @private\n */\nexport class Worksheet {\n    constructor() {\n        this.isSummaryRowBelow = true;\n        this.showGridLines = true;\n        this.enableRtl = false;\n    }\n}\n/**\n * Hyperlink class\n * @private\n */\nexport class HyperLink {\n}\n/**\n * Grouping class\n * @private\n */\nexport class Grouping {\n}\n/**\n * FreezePane class\n * @private\n */\nexport class FreezePane {\n}\n/**\n * MergeCell\n * @private\n */\nexport class MergeCell {\n}\n/**\n * MergeCells class\n * @private\n */\nexport class MergeCells extends Array {\n    constructor() {\n        super(...arguments);\n        this.add = (mergeCell) => {\n            let inserted = false;\n            let count = 0;\n            for (let mCell of this) {\n                if (MergeCells.isIntersecting(mCell, mergeCell)) {\n                    let intersectingCell = new MergeCell();\n                    intersectingCell.x = Math.min(mCell.x, mergeCell.x);\n                    intersectingCell.y = Math.min(mCell.Y, mergeCell.y);\n                    intersectingCell.width = Math.max(mCell.Width + mCell.X, mergeCell.width + mergeCell.x);\n                    intersectingCell.height = Math.max(mCell.Height + mCell.Y, mergeCell.height + mergeCell.y);\n                    intersectingCell.ref = (this[count].ref.split(':')[0]) + ':' + (mergeCell.ref.split(':')[1]);\n                    this[count] = intersectingCell;\n                    mergeCell = intersectingCell;\n                    inserted = true;\n                }\n                count++;\n            }\n            if (!inserted) {\n                this.push(mergeCell);\n            }\n            return mergeCell;\n        };\n    }\n    static isIntersecting(base, compare) {\n        return (base.x <= compare.x + compare.width)\n            && (compare.x <= base.x + base.width)\n            && (base.y <= compare.y + compare.height)\n            && (compare.y <= base.y + base.height);\n    }\n}\n","/**\n * Image class\n * @private\n */\nexport class Image {\n}\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\n// import { IValueFormatter } from '../base/interface';\n/**\n * ValueFormatter class to globalize the value.\n * @private\n */\nexport class ValueFormatter {\n    constructor(cultureName) {\n        this.intl = new Internationalization();\n        // if (!isNullOrUndefined(cultureName)) {\n        //     this.intl.culture = cultureName;\n        // }\n    }\n    getFormatFunction(format, isServerRendered) {\n        if (format.type) {\n            if (isServerRendered) {\n                format.isServerRendered = true;\n            }\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    }\n    // public getParserFunction(format: NumberFormatOptions | DateFormatOptions): Function {\n    //     if ((<DateFormatOptions>format).type) {\n    //         return this.intl.getDateParser(<DateFormatOptions>format);\n    //     } else {\n    //         return this.intl.getNumberParser(<DateFormatOptions>format);\n    //     }\n    // }\n    // public fromView(value: string, format: Function, type?: string): string | number | Date {\n    //     if (type === 'date' || type === 'datetime' || type === 'number') {\n    //         return format(value);\n    //     } else {\n    //         return value;\n    //     }\n    // }\n    toView(value, format) {\n        let result = value;\n        if (!isNullOrUndefined(format) && !isNullOrUndefined(value)) {\n            result = format(value);\n        }\n        return result;\n    }\n    // public setCulture(cultureName: string): void {\n    //     if (!isNullOrUndefined(cultureName)) {\n    //         setCulture(cultureName);\n    //     }\n    // }\n    /* tslint:disable:no-any */\n    displayText(value, format, isServerRendered) {\n        return this.toView(value, this.getFormatFunction(format, isServerRendered));\n    }\n}\n","import { ValueFormatter } from './value-formatter';\n/**\n * CsvHelper class\n * @private\n */\nexport class CsvHelper {\n    /* tslint:disable:no-any */\n    constructor(json, separator) {\n        this.csvStr = '';\n        if (separator === null || separator === undefined) {\n            this.separator = ',';\n        }\n        else {\n            this.separator = separator;\n        }\n        this.formatter = new ValueFormatter();\n        this.isMicrosoftBrowser = !(!navigator.msSaveBlob);\n        if (json.isServerRendered !== null && json.isServerRendered !== undefined) {\n            this.isServerRendered = json.isServerRendered;\n        }\n        if (json.styles !== null && json.styles !== undefined) {\n            this.globalStyles = new Map();\n            for (let i = 0; i < json.styles.length; i++) {\n                if (json.styles[i].name !== undefined && json.styles[i].numberFormat !== undefined) {\n                    this.globalStyles.set(json.styles[i].name, json.styles[i].numberFormat);\n                }\n            }\n        }\n        // Parses Worksheets data to DOM.        \n        if (json.worksheets !== null && json.worksheets !== undefined) {\n            this.parseWorksheet(json.worksheets[0]);\n        }\n        //this.csvStr = 'a1,a2,a3\\nb1,b2,b3';\n    }\n    parseWorksheet(json) {\n        //Rows\n        if (json.rows !== null && json.rows !== undefined) {\n            this.parseRows(json.rows);\n        }\n    }\n    /* tslint:disable:no-any */\n    parseRows(rows) {\n        let count = 1;\n        for (let row of rows) {\n            //Row index\n            if (row.index !== null && row.index !== undefined) {\n                while (count < row.index) {\n                    this.csvStr += '\\n';\n                    count++;\n                }\n                this.parseRow(row);\n            }\n            else {\n                throw Error('Row index is missing.');\n            }\n        }\n    }\n    /* tslint:disable:no-any */\n    parseRow(row) {\n        if (row.cells !== null && row.cells !== undefined) {\n            let count = 1;\n            for (let cell of row.cells) {\n                //cell index\n                if (cell.index !== null && cell.index !== undefined) {\n                    while (count < cell.index) {\n                        this.csvStr += this.separator;\n                        count++;\n                    }\n                    this.parseCell(cell);\n                }\n                else {\n                    throw Error('Cell index is missing.');\n                }\n            }\n        }\n    }\n    /* tslint:disable:no-any */\n    parseCell(cell) {\n        let csv = this.csvStr;\n        if (cell.value !== undefined) {\n            if (cell.value instanceof Date) {\n                if (cell.style !== undefined && cell.style.numberFormat !== undefined) {\n                    /* tslint:disable-next-line:max-line-length */\n                    try {\n                        csv += this.parseCellValue(this.formatter.displayText(cell.value, { type: 'dateTime', skeleton: cell.style.numberFormat }, this.isServerRendered));\n                    }\n                    catch (error) {\n                        /* tslint:disable-next-line:max-line-length */\n                        csv += this.parseCellValue(this.formatter.displayText(cell.value, { type: 'dateTime', format: cell.style.numberFormat }, this.isServerRendered));\n                    }\n                }\n                else if (cell.style !== undefined && cell.style.name !== undefined && this.globalStyles.has(cell.style.name)) {\n                    /* tslint:disable-next-line:max-line-length */\n                    try {\n                        csv += this.parseCellValue(this.formatter.displayText(cell.value, { type: 'dateTime', skeleton: this.globalStyles.get(cell.style.name) }, this.isServerRendered));\n                    }\n                    catch (error) {\n                        /* tslint:disable-next-line:max-line-length */\n                        csv += this.parseCellValue(this.formatter.displayText(cell.value, { type: 'dateTime', format: this.globalStyles.get(cell.style.name) }, this.isServerRendered));\n                    }\n                }\n                else {\n                    csv += cell.value;\n                }\n            }\n            else if (typeof (cell.value) === 'boolean') {\n                csv += cell.value ? 'TRUE' : 'FALSE';\n            }\n            else if (typeof (cell.value) === 'number') {\n                if (cell.style !== undefined && cell.style.numberFormat !== undefined) {\n                    /* tslint:disable-next-line:max-line-length */\n                    csv += this.parseCellValue(this.formatter.displayText(cell.value, { format: cell.style.numberFormat }, this.isServerRendered));\n                }\n                else if (cell.style !== undefined && cell.style.name !== undefined && this.globalStyles.has(cell.style.name)) {\n                    /* tslint:disable-next-line:max-line-length */\n                    csv += this.parseCellValue(this.formatter.displayText(cell.value, { format: this.globalStyles.get(cell.style.name) }, this.isServerRendered));\n                }\n                else {\n                    csv += cell.value;\n                }\n            }\n            else {\n                csv += this.parseCellValue(cell.value);\n            }\n        }\n        this.csvStr = csv;\n    }\n    parseCellValue(value) {\n        let val = '';\n        let length = value.length;\n        for (let start = 0; start < length; start++) {\n            if (value[start] === '\\\"') {\n                val += value[start].replace('\\\"', '\\\"\\\"');\n            }\n            else {\n                val += value[start];\n            }\n        }\n        value = val;\n        if (value.indexOf(this.separator) !== -1 || value.indexOf('\\n') !== -1) {\n            return value = '\\\"' + value + '\\\"';\n        }\n        else {\n            return value;\n        }\n    }\n    /**\n     * Saves the file with specified name and sends the file to client browser\n     * @param  {string} fileName- file name to save.\n     * @param  {Blob} buffer- the content to write in file\n     */\n    save(fileName) {\n        this.buffer = new Blob(['\\ufeff' + this.csvStr], { type: 'text/csv;charset=UTF-8' });\n        if (this.isMicrosoftBrowser) {\n            navigator.msSaveBlob(this.buffer, fileName);\n        }\n        else {\n            let dataUrl = window.URL.createObjectURL(this.buffer);\n            let dwlLink = document.createElementNS('http://www.w3.org/1999/xhtml', 'a');\n            dwlLink.download = fileName;\n            dwlLink.href = dataUrl;\n            let event = document.createEvent('MouseEvent');\n            event.initEvent('click', true, true);\n            dwlLink.dispatchEvent(event);\n            setTimeout(() => {\n                window.URL.revokeObjectURL(dataUrl);\n            });\n        }\n    }\n    saveAsBlob() {\n        return new Blob(['\\ufeff' + this.csvStr], { type: 'text/csv;charset=UTF-8' });\n    }\n}\n","/**\n * BlobHelper class\n * @private\n */\nexport class BlobHelper {\n    constructor() {\n        /* tslint:disable:no-any */\n        this.parts = [];\n    }\n    /* tslint:disable:no-any */\n    append(part) {\n        this.parts.push(part);\n        this.blob = undefined; // Invalidate the blob\n    }\n    getBlob() {\n        return new Blob(this.parts, { type: 'text/plain' });\n    }\n}\n","/**\n * AutoFilters class\n * @private\n */\nexport class AutoFilters {\n}\n","import { Worksheets } from './worksheets';\nimport { Worksheet, FreezePane, MergeCell, MergeCells, HyperLink, Grouping } from './worksheet';\nimport { CellStyle, Font, Borders, CellXfs, Alignment, NumFmt, CellStyleXfs, CellStyles } from './cell-style';\nimport { Column } from './column';\nimport { Row, Rows } from './row';\nimport { Image } from './image';\nimport { Cell, Cells } from './cell';\nimport { ZipArchive, ZipArchiveItem } from '@syncfusion/ej2-compression';\nimport { CsvHelper } from './csv-helper';\nimport { Internationalization, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { BlobHelper } from './blob-helper';\nimport { AutoFilters } from './auto-filters';\n/**\n * Workbook class\n */\nexport class Workbook {\n    /* tslint:disable:no-any */\n    constructor(json, saveType, culture, currencyString, separator) {\n        this.sharedStringCount = 0;\n        this.unitsProportions = [\n            96 / 75.0,\n            96 / 300.0,\n            96,\n            96 / 25.4,\n            96 / 2.54,\n            1,\n            96 / 72.0,\n            96 / 72.0 / 12700,\n        ];\n        /* tslint:disable:no-any */\n        this.hyperlinkStyle = { fontColor: '#0000FF', underline: true };\n        if (culture !== undefined) {\n            this.culture = culture;\n        }\n        else {\n            this.culture = 'en-US';\n        }\n        if (currencyString !== undefined) {\n            this.currency = currencyString;\n        }\n        else {\n            this.currency = 'USD';\n        }\n        this.intl = new Internationalization(this.culture);\n        this.mSaveType = saveType;\n        if (saveType === 'xlsx') {\n            this.mArchive = new ZipArchive();\n            this.sharedString = [];\n            this.mFonts = [];\n            this.mBorders = [];\n            this.mStyles = [];\n            this.printTitles = new Map();\n            this.cellStyles = new Map();\n            this.mNumFmt = new Map();\n            this.mFills = new Map();\n            this.mStyles.push(new CellStyle());\n            this.mFonts.push(new Font());\n            /* tslint:disable */\n            this.cellStyles.set('Normal', new CellStyles());\n            /* tslint:enable */\n            this.mCellXfs = [];\n            this.mCellStyleXfs = [];\n            this.drawingCount = 0;\n            this.imageCount = 0;\n            if (json.styles !== null && json.styles !== undefined) {\n                /* tslint:disable-next-line:no-any */\n                this.globalStyles = new Map();\n                for (let i = 0; i < json.styles.length; i++) {\n                    if (json.styles[i].name !== undefined) {\n                        if (!this.cellStyles.has(json.styles[i].name)) {\n                            let cellStyle = new CellStyle();\n                            cellStyle.isGlobalStyle = true;\n                            this.parserCellStyle(json.styles[i], cellStyle, 'none');\n                            let cellStylesIn = new CellStyles();\n                            cellStylesIn.name = cellStyle.name;\n                            cellStylesIn.xfId = (cellStyle.index - 1);\n                            this.cellStyles.set(cellStylesIn.name, cellStylesIn);\n                            /* tslint:disable-next-line:no-any */\n                            let tFormat = {};\n                            if (json.styles[i].numberFormat !== undefined) {\n                                tFormat.format = json.styles[i].numberFormat;\n                            }\n                            if (json.styles[i].type !== undefined) {\n                                tFormat.type = json.styles[i].type;\n                            }\n                            else {\n                                tFormat.type = 'datetime';\n                            }\n                            if (tFormat.format !== undefined) {\n                                this.globalStyles.set(json.styles[i].name, tFormat);\n                            }\n                        }\n                        else {\n                            throw Error('Style name ' + json.styles[i].name + ' is already existed');\n                        }\n                    }\n                }\n            }\n            // Parses Worksheets data to DOM.        \n            if (json.worksheets !== null && json.worksheets !== undefined) {\n                this.parserWorksheets(json.worksheets);\n            }\n            else {\n                throw Error('Worksheet is expected.');\n            }\n            // Parses the BuiltInProperties data to DOM.        \n            if (json.builtInProperties !== null && json.builtInProperties !== undefined) {\n                this.builtInProperties = new BuiltInProperties();\n                this.parserBuiltInProperties(json.builtInProperties, this.builtInProperties);\n            }\n        }\n        else {\n            this.csvHelper = new CsvHelper(json, separator);\n        }\n    }\n    /* tslint:disable:no-any */\n    parserBuiltInProperties(jsonBuiltInProperties, builtInProperties) {\n        //Author\n        if (jsonBuiltInProperties.author !== null && jsonBuiltInProperties.author !== undefined) {\n            builtInProperties.author = jsonBuiltInProperties.author;\n        }\n        //Comments\n        if (jsonBuiltInProperties.comments !== null && jsonBuiltInProperties.comments !== undefined) {\n            builtInProperties.comments = jsonBuiltInProperties.comments;\n        }\n        //Category\n        if (jsonBuiltInProperties.category !== null && jsonBuiltInProperties.category !== undefined) {\n            builtInProperties.category = jsonBuiltInProperties.category;\n        }\n        //Company\n        if (jsonBuiltInProperties.company !== null && jsonBuiltInProperties.company !== undefined) {\n            builtInProperties.company = jsonBuiltInProperties.company;\n        }\n        //Manager\n        if (jsonBuiltInProperties.manager !== null && jsonBuiltInProperties.manager !== undefined) {\n            builtInProperties.manager = jsonBuiltInProperties.manager;\n        }\n        //Subject\n        if (jsonBuiltInProperties.subject !== null && jsonBuiltInProperties.subject !== undefined) {\n            builtInProperties.subject = jsonBuiltInProperties.subject;\n        }\n        //Title\n        if (jsonBuiltInProperties.title !== null && jsonBuiltInProperties.title !== undefined) {\n            builtInProperties.title = jsonBuiltInProperties.title;\n        }\n        //Creation date\n        if (jsonBuiltInProperties.createdDate !== null && jsonBuiltInProperties.createdDate !== undefined) {\n            builtInProperties.createdDate = jsonBuiltInProperties.createdDate;\n        }\n        //Modified date\n        if (jsonBuiltInProperties.modifiedDate !== null && jsonBuiltInProperties.modifiedDate !== undefined) {\n            builtInProperties.modifiedDate = jsonBuiltInProperties.modifiedDate;\n        }\n        //Tags\n        if (jsonBuiltInProperties.tags !== null && jsonBuiltInProperties.tags !== undefined) {\n            builtInProperties.tags = jsonBuiltInProperties.tags;\n        }\n        //Status\n        if (jsonBuiltInProperties.status !== null && jsonBuiltInProperties.status !== undefined) {\n            builtInProperties.status = jsonBuiltInProperties.status;\n        }\n    }\n    /* tslint:disable:no-any */\n    parserWorksheets(json) {\n        this.worksheets = new Worksheets();\n        let length = json.length;\n        for (let i = 0; i < length; i++) {\n            let jsonSheet = json[i];\n            let sheet = new Worksheet();\n            this.mergeCells = new MergeCells();\n            this.mergedCellsStyle = new Map();\n            this.mHyperLinks = [];\n            //Name\n            if (jsonSheet.name !== null && jsonSheet.name !== undefined) {\n                sheet.name = jsonSheet.name;\n            }\n            else {\n                sheet.name = 'Sheet' + (i + 1).toString();\n            }\n            if (jsonSheet.enableRtl !== null && jsonSheet.enableRtl !== undefined) {\n                sheet.enableRtl = jsonSheet.enableRtl;\n            }\n            sheet.index = (i + 1);\n            //Columns\n            if (jsonSheet.columns !== null && jsonSheet.columns !== undefined) {\n                this.parserColumns(jsonSheet.columns, sheet);\n            }\n            //Rows\n            if (jsonSheet.rows !== null && jsonSheet.rows !== undefined) {\n                this.parserRows(jsonSheet.rows, sheet);\n            }\n            //showGridLines\n            if (jsonSheet.showGridLines !== null && jsonSheet.showGridLines !== undefined) {\n                sheet.showGridLines = jsonSheet.showGridLines;\n            }\n            //FreezePanes\n            if (jsonSheet.freeze !== null && jsonSheet.freeze !== undefined) {\n                this.parserFreezePanes(jsonSheet.freeze, sheet);\n            }\n            //Print Title\n            if (jsonSheet.printTitle !== null && jsonSheet.printTitle !== undefined) {\n                this.parserPrintTitle(jsonSheet.printTitle, sheet);\n            }\n            if (jsonSheet.pageSetup !== undefined) {\n                if (jsonSheet.pageSetup.isSummaryRowBelow !== undefined) {\n                    sheet.isSummaryRowBelow = jsonSheet.pageSetup.isSummaryRowBelow;\n                }\n            }\n            if (jsonSheet.images !== undefined) {\n                this.parserImages(jsonSheet.images, sheet);\n            }\n            if (jsonSheet.autoFilters !== null && jsonSheet.autoFilters !== undefined) {\n                this.parseFilters(jsonSheet.autoFilters, sheet);\n            }\n            sheet.index = (i + 1);\n            sheet.mergeCells = this.mergeCells;\n            sheet.hyperLinks = this.mHyperLinks;\n            this.worksheets.push(sheet);\n        }\n    }\n    /* tslint:disable:no-any */\n    mergeOptions(fromJson, toJson) {\n        /* tslint:disable:no-any */\n        let result = {};\n        this.applyProperties(fromJson, result);\n        this.applyProperties(toJson, result);\n        return result;\n    }\n    /* tslint:disable:no-any */\n    applyProperties(sourceJson, destJson) {\n        let keys = Object.keys(sourceJson);\n        for (let index = 0; index < keys.length; index++) {\n            if (keys[index] !== 'name') {\n                destJson[keys[index]] = sourceJson[keys[index]];\n            }\n        }\n    }\n    getCellName(row, column) {\n        return this.getColumnName(column) + row.toString();\n    }\n    getColumnName(col) {\n        col--;\n        let strColumnName = '';\n        do {\n            let iCurrentDigit = col % 26;\n            col = col / 26 - 1;\n            strColumnName = String.fromCharCode(65 + iCurrentDigit) + strColumnName;\n        } while (col >= 0);\n        return strColumnName;\n    }\n    /* tslint:disable:no-any */\n    parserPrintTitle(json, sheet) {\n        let printTitleName = '';\n        let titleRowName;\n        if (json.fromRow !== null && json.fromRow !== undefined) {\n            let fromRow = json.fromRow;\n            let toRow;\n            if (json.toRow !== null && json.toRow !== undefined) {\n                toRow = json.toRow;\n            }\n            else {\n                toRow = json.fromRow;\n            }\n            titleRowName = '$' + fromRow + ':$' + toRow;\n        }\n        let titleColName;\n        if (json.fromColumn !== null && json.fromColumn !== undefined) {\n            let fromColumn = json.fromColumn;\n            let toColumn;\n            if (json.toColumn !== null && json.toColumn !== undefined) {\n                toColumn = json.toColumn;\n            }\n            else {\n                toColumn = json.fromColumn;\n            }\n            titleColName = '$' + this.getColumnName(fromColumn) + ':$' + this.getColumnName(toColumn);\n        }\n        if (titleRowName !== undefined) {\n            printTitleName += (sheet.name + '!' + titleRowName);\n        }\n        if (titleColName !== undefined && titleRowName !== undefined) {\n            printTitleName += ',' + (sheet.name + '!' + titleColName);\n        }\n        else if (titleColName !== undefined) {\n            printTitleName += (sheet.name + '!' + titleColName);\n        }\n        if (printTitleName !== '') {\n            this.printTitles.set(sheet.index - 1, printTitleName);\n        }\n    }\n    /* tslint:disable:no-any */\n    parserFreezePanes(json, sheet) {\n        sheet.freezePanes = new FreezePane();\n        if (json.row !== null && json.row !== undefined) {\n            sheet.freezePanes.row = json.row;\n        }\n        else {\n            sheet.freezePanes.row = 0;\n        }\n        if (json.column !== null && json.column !== undefined) {\n            sheet.freezePanes.column = json.column;\n        }\n        else {\n            sheet.freezePanes.column = 0;\n        }\n        sheet.freezePanes.leftCell = this.getCellName(sheet.freezePanes.row + 1, sheet.freezePanes.column + 1);\n    }\n    /* tslint:disable:no-any */\n    parserColumns(json, sheet) {\n        let columnsLength = json.length;\n        sheet.columns = [];\n        for (let column = 0; column < columnsLength; column++) {\n            let col = new Column();\n            if (json[column].index !== null && json[column].index !== undefined) {\n                col.index = json[column].index;\n            }\n            else {\n                throw Error('Column index is missing.');\n            }\n            if (json[column].width !== null && json[column].width !== undefined) {\n                col.width = json[column].width;\n            }\n            sheet.columns.push(col);\n        }\n    }\n    /* tslint:disable:no-any */\n    parserRows(json, sheet) {\n        let rowsLength = json.length;\n        sheet.rows = new Rows();\n        let rowId = 0;\n        for (let r = 0; r < rowsLength; r++) {\n            let row = this.parserRow(json[r], rowId);\n            rowId = row.index;\n            sheet.rows.add(row);\n        }\n        this.insertMergedCellsStyle(sheet);\n    }\n    insertMergedCellsStyle(sheet) {\n        if (this.mergeCells.length > 0) {\n            this.mergedCellsStyle.forEach((value, key) => {\n                let row = sheet.rows.filter((item) => {\n                    return item.index === value.y;\n                })[0];\n                if (!isNullOrUndefined(row)) {\n                    let cell = row.cells.filter((item) => {\n                        return item.index === value.x;\n                    })[0];\n                    if (!isNullOrUndefined(cell)) {\n                        cell.styleIndex = value.styleIndex;\n                    }\n                    else {\n                        let cells = row.cells.filter((item) => {\n                            return item.index <= value.x;\n                        });\n                        let insertIndex = 0;\n                        if (cells.length > 0) {\n                            insertIndex = row.cells.indexOf(cells[cells.length - 1]) + 1;\n                        }\n                        row.cells.splice(insertIndex, 0, this.createCell(value, key));\n                    }\n                }\n                else {\n                    let rows = sheet.rows.filter((item) => {\n                        return item.index <= value.y;\n                    });\n                    let rowToInsert = new Row();\n                    rowToInsert.index = value.y;\n                    rowToInsert.cells = new Cells();\n                    rowToInsert.cells.add(this.createCell(value, key));\n                    let insertIndex = 0;\n                    if (rows.length > 0) {\n                        insertIndex = sheet.rows.indexOf(rows[rows.length - 1]) + 1;\n                    }\n                    sheet.rows.splice(insertIndex, 0, rowToInsert);\n                }\n            });\n        }\n    }\n    createCell(value, key) {\n        let cellToInsert = new Cell();\n        cellToInsert.refName = key;\n        cellToInsert.index = value.x;\n        cellToInsert.cellStyle = new CellStyle();\n        cellToInsert.styleIndex = value.styleIndex;\n        return cellToInsert;\n    }\n    /* tslint:disable:no-any */\n    parserRow(json, rowIndex) {\n        let row = new Row();\n        //Row Height\n        if (json.height !== null && json.height !== undefined) {\n            row.height = json.height;\n        }\n        //Row index\n        if (json.index !== null && json.index !== undefined) {\n            row.index = json.index;\n        }\n        else {\n            throw Error('Row index is missing.');\n        }\n        if (json.grouping !== null && json.grouping !== undefined) {\n            this.parseGrouping(json.grouping, row);\n        }\n        this.parseCells(json.cells, row);\n        return row;\n    }\n    /* tslint:disable:no-any */\n    parseGrouping(json, row) {\n        row.grouping = new Grouping();\n        if (json.outlineLevel !== undefined) {\n            row.grouping.outlineLevel = json.outlineLevel;\n        }\n        if (json.isCollapsed !== undefined) {\n            row.grouping.isCollapsed = json.isCollapsed;\n        }\n        if (json.isHidden !== undefined) {\n            row.grouping.isHidden = json.isHidden;\n        }\n    }\n    /* tslint:disable:no-any */\n    parseCells(json, row) {\n        row.cells = new Cells();\n        let cellsLength = json !== undefined ? json.length : 0;\n        let spanMin = 1;\n        let spanMax = 1;\n        let curCellIndex = 0;\n        for (let cellId = 0; cellId < cellsLength; cellId++) {\n            /* tslint:disable:no-any */\n            let jsonCell = json[cellId];\n            let cell = new Cell();\n            //cell index\n            if (jsonCell.index !== null && jsonCell.index !== undefined) {\n                cell.index = jsonCell.index;\n            }\n            else {\n                throw Error('Cell index is missing.');\n            }\n            if (cell.index < spanMin) {\n                spanMin = cell.index;\n            }\n            else if (cell.index > spanMax) {\n                spanMax = cell.index;\n            }\n            //Update the Cell name\n            cell.refName = this.getCellName(row.index, cell.index);\n            //Row span\n            if (jsonCell.rowSpan !== null && jsonCell.rowSpan !== undefined) {\n                cell.rowSpan = jsonCell.rowSpan - 1;\n            }\n            else {\n                cell.rowSpan = 0;\n            }\n            //Column span\n            if (jsonCell.colSpan !== null && jsonCell.colSpan !== undefined) {\n                cell.colSpan = jsonCell.colSpan - 1;\n            }\n            else {\n                cell.colSpan = 0;\n            }\n            //Hyperlink\n            if (jsonCell.hyperlink !== null && jsonCell.hyperlink !== undefined) {\n                let hyperLink = new HyperLink();\n                if (jsonCell.hyperlink.target !== undefined) {\n                    hyperLink.target = jsonCell.hyperlink.target;\n                    if (jsonCell.hyperlink.displayText !== undefined) {\n                        cell.value = jsonCell.hyperlink.displayText;\n                    }\n                    else {\n                        cell.value = jsonCell.hyperlink.target;\n                    }\n                    cell.type = this.getCellValueType(cell.value);\n                    hyperLink.ref = cell.refName;\n                    hyperLink.rId = (this.mHyperLinks.length + 1);\n                    this.mHyperLinks.push(hyperLink);\n                    cell.cellStyle = new CellStyle();\n                    /* tslint:disable-next-line:max-line-length */\n                    this.parserCellStyle((jsonCell.style !== undefined ? this.mergeOptions(jsonCell.style, this.hyperlinkStyle) : this.hyperlinkStyle), cell.cellStyle, 'string');\n                    cell.styleIndex = cell.cellStyle.index;\n                }\n            }\n            // formulas\n            if (jsonCell.formula !== null && jsonCell.formula !== undefined) {\n                cell.formula = jsonCell.formula;\n                cell.type = 'formula';\n            }\n            //Cell value\n            if (jsonCell.value !== null && jsonCell.value !== undefined) {\n                if (cell.formula !== undefined) {\n                    cell.value = 0;\n                }\n                else {\n                    cell.value = jsonCell.value;\n                    cell.type = this.getCellValueType(cell.value);\n                }\n            }\n            if (jsonCell.style !== null && jsonCell.style !== undefined && cell.styleIndex === undefined) {\n                cell.cellStyle = new CellStyle();\n                if (cell.value instanceof Date) {\n                    this.parserCellStyle(jsonCell.style, cell.cellStyle, cell.type, 14);\n                }\n                else {\n                    this.parserCellStyle(jsonCell.style, cell.cellStyle, cell.type);\n                }\n                cell.styleIndex = cell.cellStyle.index;\n            }\n            else if (cell.value instanceof Date) {\n                cell.cellStyle = new CellStyle();\n                this.parserCellStyle({}, cell.cellStyle, cell.type, 14);\n                cell.styleIndex = cell.cellStyle.index;\n            }\n            this.parseCellType(cell);\n            this.mergeCells = this.processMergeCells(cell, row.index, this.mergeCells);\n            row.cells.add(cell);\n            curCellIndex = (cell.index + 1);\n        }\n        row.spans = (spanMin) + ':' + (spanMax);\n    }\n    GetColors() {\n        let colors;\n        colors = new Map();\n        /* tslint:disable */\n        colors.set('WHITE', 'FFFFFFFF');\n        /* tslint:disable */\n        colors.set('SILVER', 'FFC0C0C0');\n        /* tslint:disable */\n        colors.set('GRAY', 'FF808080');\n        /* tslint:disable */\n        colors.set('BLACK', 'FF000000');\n        /* tslint:disable */\n        colors.set('RED', 'FFFF0000');\n        /* tslint:disable */\n        colors.set('MAROON', 'FF800000');\n        /* tslint:disable */\n        colors.set('YELLOW', 'FFFFFF00');\n        /* tslint:disable */\n        colors.set('OLIVE', 'FF808000');\n        /* tslint:disable */\n        colors.set('LIME', 'FF00FF00');\n        /* tslint:disable */\n        colors.set('GREEN', 'FF008000');\n        /* tslint:disable */\n        colors.set('AQUA', 'FF00FFFF');\n        /* tslint:disable */\n        colors.set('TEAL', 'FF008080');\n        /* tslint:disable */\n        colors.set('BLUE', 'FF0000FF');\n        /* tslint:disable */\n        colors.set('NAVY', 'FF000080');\n        /* tslint:disable */\n        colors.set('FUCHSIA', 'FFFF00FF');\n        /* tslint:disable */\n        colors.set('PURPLE', 'FF800080');\n        return colors;\n    }\n    processColor(colorVal) {\n        if (colorVal.indexOf('#') === 0) {\n            return colorVal.replace('#', 'FF');\n        }\n        colorVal = colorVal.toUpperCase();\n        this.rgbColors = this.GetColors();\n        if (this.rgbColors.has(colorVal)) {\n            colorVal = this.rgbColors.get(colorVal);\n        }\n        else {\n            colorVal = 'FF000000';\n        }\n        return colorVal;\n    }\n    processCellValue(value, cell) {\n        let cellValue = value;\n        if (value.indexOf(\"<font\") !== -1 || value.indexOf(\"<a\") !== -1 || value.indexOf(\"<b>\") !== -1 ||\n            value.indexOf(\"<i>\") !== -1 || value.indexOf(\"<u>\") !== -1) {\n            let processedVal = '';\n            let startindex = value.indexOf('<', 0);\n            let endIndex = value.indexOf('>', startindex + 1);\n            if (startindex >= 0 && endIndex >= 0) {\n                if (startindex !== 0) {\n                    processedVal += '<r><t xml:space=\"preserve\">' + this.processString(value.substring(0, startindex)) + '</t></r>';\n                }\n                while (startindex >= 0 && endIndex >= 0) {\n                    endIndex = value.indexOf('>', startindex + 1);\n                    if (endIndex >= 0) {\n                        let subString = value.substring(startindex + 1, endIndex);\n                        startindex = value.indexOf('<', endIndex + 1);\n                        if (startindex < 0) {\n                            startindex = cellValue.length;\n                        }\n                        let text = cellValue.substring(endIndex + 1, startindex);\n                        if (text.length !== 0) {\n                            let subSplit = subString.split(' ');\n                            if (subSplit.length > 0) {\n                                processedVal += '<r><rPr>';\n                            }\n                            if (subSplit.length > 1) {\n                                for (let element of subSplit) {\n                                    let start = element.trim().substring(0, 5);\n                                    switch (start) {\n                                        case 'size=':\n                                            processedVal += '<sz val=\"' + element.substring(6, element.length - 1) + '\"/>';\n                                            break;\n                                        case 'face=':\n                                            processedVal += '<rFont val=\"' + element.substring(6, element.length - 1) + '\"/>';\n                                            break;\n                                        case 'color':\n                                            processedVal += '<color rgb=\"' + this.processColor(element.substring(7, element.length - 1)) + '\"/>';\n                                            break;\n                                        case 'href=':\n                                            let hyperLink = new HyperLink();\n                                            hyperLink.target = element.substring(6, element.length - 1).trim();\n                                            hyperLink.ref = cell.refName;\n                                            hyperLink.rId = (this.mHyperLinks.length + 1);\n                                            this.mHyperLinks.push(hyperLink);\n                                            processedVal += '<color rgb=\"FF0000FF\"/><u/><b/>';\n                                            break;\n                                    }\n                                }\n                            }\n                            else if (subSplit.length === 1) {\n                                let style = subSplit[0].trim();\n                                switch (style) {\n                                    case 'b':\n                                        processedVal += '<b/>';\n                                        break;\n                                    case 'i':\n                                        processedVal += '<i/>';\n                                        break;\n                                    case 'u':\n                                        processedVal += '<u/>';\n                                        break;\n                                }\n                            }\n                            processedVal += '</rPr><t xml:space=\"preserve\">' + this.processString(text) + '</t></r>';\n                        }\n                    }\n                }\n                if (processedVal === '') {\n                    return cellValue;\n                }\n                return processedVal;\n            }\n            else {\n                return cellValue;\n            }\n        }\n        else {\n            return cellValue;\n        }\n    }\n    applyGlobalStyle(json, cellStyle) {\n        let index = 0;\n        if (this.cellStyles.has(json.name)) {\n            cellStyle.index = this.mStyles.filter((a) => (a.name === json.name))[0].index;\n            cellStyle.name = json.name;\n        }\n    }\n    /* tslint:disable:no-any */\n    parserCellStyle(json, cellStyle, cellType, defStyleIndex) {\n        //name\n        if (json.name !== null && json.name !== undefined) {\n            if (cellStyle.isGlobalStyle) {\n                cellStyle.name = json.name;\n            }\n            else {\n                this.applyGlobalStyle(json, cellStyle);\n                return;\n            }\n        }\n        //background color\n        if (json.backColor !== null && json.backColor !== undefined) {\n            cellStyle.backColor = json.backColor;\n        }\n        //borders\n        //leftBorder\n        cellStyle.borders = new Borders();\n        //AllBorder\n        if (json.borders !== null && json.borders !== undefined) {\n            this.parserBorder(json.borders, cellStyle.borders.all);\n        }\n        //leftborder\n        if (json.leftBorder !== null && json.leftBorder !== undefined) {\n            this.parserBorder(json.leftBorder, cellStyle.borders.left);\n        }\n        //rightBorder\n        if (json.rightBorder !== null && json.rightBorder !== undefined) {\n            this.parserBorder(json.rightBorder, cellStyle.borders.right);\n        }\n        //topBorder\n        if (json.topBorder !== null && json.topBorder !== undefined) {\n            this.parserBorder(json.topBorder, cellStyle.borders.top);\n        }\n        //bottomBorder\n        if (json.bottomBorder !== null && json.bottomBorder !== undefined) {\n            this.parserBorder(json.bottomBorder, cellStyle.borders.bottom);\n        }\n        //fontName\n        if (json.fontName !== null && json.fontName !== undefined) {\n            cellStyle.fontName = json.fontName;\n        }\n        //fontSize\n        if (json.fontSize !== null && json.fontSize !== undefined) {\n            cellStyle.fontSize = json.fontSize;\n        }\n        //fontColor\n        if (json.fontColor !== null && json.fontColor !== undefined) {\n            cellStyle.fontColor = json.fontColor;\n        }\n        //italic\n        if (json.italic !== null && json.italic !== undefined) {\n            cellStyle.italic = json.italic;\n        }\n        //bold\n        if (json.bold !== null && json.bold !== undefined) {\n            cellStyle.bold = json.bold;\n        }\n        //hAlign\n        if (json.hAlign !== null && json.hAlign !== undefined) {\n            cellStyle.hAlign = json.hAlign.toLowerCase();\n        }\n        //indent\n        if (json.indent !== null && json.indent !== undefined) {\n            cellStyle.indent = json.indent;\n            if (!(cellStyle.hAlign === 'left' || cellStyle.hAlign === 'right')) {\n                cellStyle.hAlign = 'left';\n            }\n        }\n        if (json.rotation !== null && json.rotation !== undefined) {\n            cellStyle.rotation = json.rotation;\n        }\n        //vAlign\n        if (json.vAlign !== null && json.vAlign !== undefined) {\n            cellStyle.vAlign = json.vAlign.toLowerCase();\n        }\n        //underline\n        if (json.underline !== null && json.underline !== undefined) {\n            cellStyle.underline = json.underline;\n        }\n        //strikeThrough\n        if (json.strikeThrough !== null && json.strikeThrough !== undefined) {\n            cellStyle.strikeThrough = json.strikeThrough;\n        }\n        //wrapText\n        if (json.wrapText !== null && json.wrapText !== undefined) {\n            cellStyle.wrapText = json.wrapText;\n        }\n        //numberFormat\n        if (json.numberFormat !== null && json.numberFormat !== undefined) {\n            if (json.type !== null && json.type !== undefined) {\n                cellStyle.numberFormat = this.getNumberFormat(json.numberFormat, json.type);\n            }\n            else {\n                cellStyle.numberFormat = this.getNumberFormat(json.numberFormat, cellType);\n            }\n        }\n        else if (defStyleIndex !== undefined) {\n            cellStyle.numFmtId = 14;\n            cellStyle.numberFormat = 'GENERAL';\n        }\n        else {\n            cellStyle.numberFormat = 'GENERAL';\n        }\n        cellStyle.index = this.processCellStyle(cellStyle);\n    }\n    switchNumberFormat(numberFormat, type) {\n        let format = this.getNumberFormat(numberFormat, type);\n        if (format !== numberFormat) {\n            let numFmt = this.mNumFmt.get(numberFormat);\n            if (numFmt !== undefined) {\n                numFmt.formatCode = format;\n                if (this.mNumFmt.has(format)) {\n                    for (let cellStyleXfs of this.mCellStyleXfs) {\n                        if (cellStyleXfs.numFmtId === numFmt.numFmtId) {\n                            cellStyleXfs.numFmtId = this.mNumFmt.get(format).numFmtId;\n                        }\n                    }\n                    for (let cellXfs of this.mCellXfs) {\n                        if (cellXfs.numFmtId === numFmt.numFmtId) {\n                            cellXfs.numFmtId = this.mNumFmt.get(format).numFmtId;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    getNumberFormat(numberFormat, type) {\n        let returnFormat;\n        switch (type) {\n            case 'number':\n                try {\n                    returnFormat = this.intl.getNumberPattern({ format: numberFormat, currency: this.currency, useGrouping: true }, true);\n                }\n                catch (error) {\n                    returnFormat = numberFormat;\n                }\n                break;\n            case 'datetime':\n                try {\n                    returnFormat = this.intl.getDatePattern({ skeleton: numberFormat, type: 'dateTime' }, true);\n                }\n                catch (error) {\n                    try {\n                        returnFormat = this.intl.getDatePattern({ format: numberFormat, type: 'dateTime' }, true);\n                    }\n                    catch (error) {\n                        returnFormat = numberFormat;\n                    }\n                }\n                break;\n            case 'date':\n                try {\n                    returnFormat = this.intl.getDatePattern({ skeleton: numberFormat, type: 'date' }, true);\n                }\n                catch (error) {\n                    try {\n                        returnFormat = this.intl.getDatePattern({ format: numberFormat, type: 'date' }, true);\n                    }\n                    catch (error) {\n                        returnFormat = numberFormat;\n                    }\n                }\n                break;\n            case 'time':\n                try {\n                    returnFormat = this.intl.getDatePattern({ skeleton: numberFormat, type: 'time' }, true);\n                }\n                catch (error) {\n                    try {\n                        returnFormat = this.intl.getDatePattern({ format: numberFormat, type: 'time' }, true);\n                    }\n                    catch (error) {\n                        returnFormat = numberFormat;\n                    }\n                }\n                break;\n            default:\n                returnFormat = numberFormat;\n                break;\n        }\n        return returnFormat;\n    }\n    /* tslint:disable:no-any */\n    parserBorder(json, border) {\n        if (json.color !== null && json.color !== undefined) {\n            border.color = json.color;\n        }\n        else {\n            border.color = '#000000';\n        }\n        if (json.lineStyle !== null && json.lineStyle !== undefined) {\n            border.lineStyle = json.lineStyle;\n        }\n        else {\n            border.lineStyle = 'thin';\n        }\n    }\n    processCellStyle(style) {\n        if (style.isGlobalStyle) {\n            this.processNumFormatId(style);\n            this.mStyles.push(style);\n            return this.mStyles.length;\n        }\n        else {\n            let compareResult = this.compareStyle(style);\n            if (!compareResult.result) {\n                this.processNumFormatId(style);\n                this.mStyles.push(style);\n                return this.mStyles.length;\n            }\n            else {\n                //Return the index of the already existing style.\n                return compareResult.index;\n            }\n        }\n    }\n    processNumFormatId(style) {\n        if (style.numberFormat !== 'GENERAL' && !this.mNumFmt.has(style.numberFormat)) {\n            let id = this.mNumFmt.size + 164;\n            this.mNumFmt.set(style.numberFormat, new NumFmt(id, style.numberFormat));\n        }\n    }\n    isNewFont(toCompareStyle) {\n        let result = false;\n        let index = 0;\n        for (let font of this.mFonts) {\n            index++;\n            let fontColor = undefined;\n            if (toCompareStyle.fontColor !== undefined) {\n                fontColor = ('FF' + toCompareStyle.fontColor.replace('#', ''));\n            }\n            result = font.color === fontColor &&\n                font.b === toCompareStyle.bold &&\n                font.i === toCompareStyle.italic &&\n                font.u === toCompareStyle.underline &&\n                font.strike === toCompareStyle.strikeThrough &&\n                font.name === toCompareStyle.fontName &&\n                font.sz === toCompareStyle.fontSize;\n            if (result) {\n                break;\n            }\n        }\n        index = index - 1;\n        return { index, result };\n    }\n    isNewBorder(toCompareStyle) {\n        let bStyle = new CellStyle();\n        if (this.isAllBorder(toCompareStyle.borders)) {\n            return (bStyle.borders.all.color === toCompareStyle.borders.all.color &&\n                bStyle.borders.all.lineStyle === toCompareStyle.borders.all.lineStyle);\n        }\n        else {\n            return (bStyle.borders.left.color === toCompareStyle.borders.left.color &&\n                bStyle.borders.left.lineStyle === toCompareStyle.borders.left.lineStyle &&\n                bStyle.borders.right.color === toCompareStyle.borders.right.color &&\n                bStyle.borders.right.lineStyle === toCompareStyle.borders.right.lineStyle &&\n                bStyle.borders.top.color === toCompareStyle.borders.top.color &&\n                bStyle.borders.top.lineStyle === toCompareStyle.borders.top.lineStyle &&\n                bStyle.borders.bottom.color === toCompareStyle.borders.bottom.color &&\n                bStyle.borders.bottom.lineStyle === toCompareStyle.borders.bottom.lineStyle);\n        }\n    }\n    isAllBorder(toCompareBorder) {\n        let allBorderStyle = new CellStyle();\n        return allBorderStyle.borders.all.color !== toCompareBorder.all.color &&\n            allBorderStyle.borders.all.lineStyle !== toCompareBorder.all.lineStyle;\n    }\n    compareStyle(toCompareStyle) {\n        let result = true;\n        let index = 0;\n        let globalStyleIndex = 0;\n        for (let baseStyle of this.mStyles) {\n            result = baseStyle.isGlobalStyle ? false : (baseStyle.backColor === toCompareStyle.backColor &&\n                baseStyle.bold === toCompareStyle.bold &&\n                baseStyle.numFmtId === toCompareStyle.numFmtId &&\n                baseStyle.numberFormat === toCompareStyle.numberFormat &&\n                baseStyle.type === toCompareStyle.type &&\n                baseStyle.fontColor === toCompareStyle.fontColor &&\n                baseStyle.fontName === toCompareStyle.fontName &&\n                baseStyle.fontSize === toCompareStyle.fontSize &&\n                baseStyle.hAlign === toCompareStyle.hAlign &&\n                baseStyle.italic === toCompareStyle.italic &&\n                baseStyle.underline === toCompareStyle.underline &&\n                baseStyle.strikeThrough === toCompareStyle.strikeThrough &&\n                baseStyle.vAlign === toCompareStyle.vAlign &&\n                baseStyle.indent === toCompareStyle.indent &&\n                baseStyle.rotation === toCompareStyle.rotation &&\n                baseStyle.wrapText === toCompareStyle.wrapText &&\n                (baseStyle.borders.all.color === toCompareStyle.borders.all.color &&\n                    baseStyle.borders.all.lineStyle === toCompareStyle.borders.all.lineStyle) &&\n                (baseStyle.borders.left.color === toCompareStyle.borders.left.color &&\n                    baseStyle.borders.left.lineStyle === toCompareStyle.borders.left.lineStyle &&\n                    baseStyle.borders.right.color === toCompareStyle.borders.right.color &&\n                    baseStyle.borders.right.lineStyle === toCompareStyle.borders.right.lineStyle &&\n                    baseStyle.borders.top.color === toCompareStyle.borders.top.color &&\n                    baseStyle.borders.top.lineStyle === toCompareStyle.borders.top.lineStyle &&\n                    baseStyle.borders.bottom.color === toCompareStyle.borders.bottom.color &&\n                    baseStyle.borders.bottom.lineStyle === toCompareStyle.borders.bottom.lineStyle));\n            if (result) {\n                index = baseStyle.index;\n                break;\n            }\n        }\n        return { index, result };\n    }\n    contains(array, item) {\n        let index = array.indexOf(item);\n        return index > -1 && index < array.length;\n    }\n    getCellValueType(value) {\n        if (value instanceof Date) {\n            return 'datetime';\n        }\n        else if (typeof (value) === 'boolean') {\n            return 'boolean';\n        }\n        else if (typeof (value) === 'number') {\n            return 'number';\n        }\n        else {\n            return 'string';\n        }\n    }\n    parseCellType(cell) {\n        let type = cell.type;\n        let saveType;\n        let value = cell.value;\n        switch (type) {\n            case 'datetime':\n                value = this.toOADate(value);\n                if (cell.cellStyle !== undefined && cell.cellStyle.name !== undefined) {\n                    if (this.globalStyles.has(cell.cellStyle.name)) {\n                        let value = this.globalStyles.get(cell.cellStyle.name);\n                        this.switchNumberFormat(value.format, value.type);\n                    }\n                }\n                saveType = 'n';\n                break;\n            //TODO: Update the number format index and style\n            case 'boolean':\n                value = value ? 1 : 0;\n                saveType = 'b';\n                break;\n            case 'number':\n                saveType = 'n';\n                if (cell.cellStyle !== undefined && cell.cellStyle.name !== undefined) {\n                    if (this.globalStyles.has(cell.cellStyle.name)) {\n                        this.switchNumberFormat(this.globalStyles.get(cell.cellStyle.name).format, 'number');\n                    }\n                }\n                break;\n            case 'string':\n                this.sharedStringCount++;\n                saveType = 's';\n                let sstvalue = this.processCellValue(value, cell);\n                if (!this.contains(this.sharedString, sstvalue)) {\n                    this.sharedString.push(sstvalue);\n                }\n                value = this.sharedString.indexOf(sstvalue);\n                break;\n            default:\n                break;\n        }\n        cell.saveType = saveType;\n        cell.value = value;\n    }\n    parserImages(json, sheet) {\n        let imagesLength = json.length;\n        sheet.images = [];\n        let imageId = 0;\n        for (let p = 0; p < imagesLength; p++) {\n            let image = this.parserImage(json[p]);\n            sheet.images.push(image);\n        }\n    }\n    parseFilters(json, sheet) {\n        sheet.autoFilters = new AutoFilters();\n        if (json.row !== null && json.row !== undefined)\n            sheet.autoFilters.row = json.row;\n        else\n            throw new Error('Argument Null Exception: row null or empty');\n        if (json.lastRow !== null && json.lastRow !== undefined)\n            sheet.autoFilters.lastRow = json.lastRow;\n        else\n            throw new Error('Argument Null Exception: lastRow cannot be null or empty');\n        if (json.column !== null && json.column !== undefined)\n            sheet.autoFilters.column = json.column;\n        else\n            throw new Error('Argument Null Exception: column cannot be null or empty');\n        if (json.lastColumn !== null && json.row !== undefined)\n            sheet.autoFilters.lastColumn = json.lastColumn;\n        else\n            throw new Error('Argument Null Exception: lastColumn cannot be null or empty');\n    }\n    parserImage(json) {\n        let image = new Image();\n        if (json.image !== null && json.image !== undefined) {\n            image.image = json.image;\n        }\n        if (json.row !== null && json.row !== undefined) {\n            image.row = json.row;\n        }\n        if (json.column !== null && json.column !== undefined) {\n            image.column = json.column;\n        }\n        if (json.lastRow !== null && json.lastRow !== undefined) {\n            image.lastRow = json.lastRow;\n        }\n        if (json.lastColumn !== null && json.lastColumn !== undefined) {\n            image.lastColumn = json.lastColumn;\n        }\n        if (json.width !== null && json.width !== undefined) {\n            image.width = json.width;\n        }\n        if (json.height !== null && json.height !== undefined) {\n            image.height = json.height;\n        }\n        if (json.horizontalFlip !== null && json.horizontalFlip !== undefined) {\n            image.horizontalFlip = json.horizontalFlip;\n        }\n        if (json.verticalFlip !== null && json.verticalFlip !== undefined) {\n            image.verticalFlip = json.verticalFlip;\n        }\n        if (json.rotation !== null && json.rotation !== undefined) {\n            image.rotation = json.rotation;\n        }\n        return image;\n    }\n    saveAsBlob(blobSaveType) {\n        switch (blobSaveType) {\n            case 'text/csv':\n                return new Promise((resolve, reject) => {\n                    let obj = {};\n                    obj.blobData = this.csvHelper.saveAsBlob();\n                    resolve(obj);\n                });\n            default:\n                return new Promise((resolve, reject) => {\n                    this.saveInternal();\n                    this.mArchive.saveAsBlob().then((blob) => {\n                        let obj = {};\n                        obj.blobData = new Blob([blob], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n                        resolve(obj);\n                    });\n                });\n        }\n    }\n    save(fileName, proxyUrl) {\n        if (fileName === null || fileName === undefined || fileName === '') {\n            throw new Error('Argument Null Exception: fileName cannot be null or empty');\n        }\n        let xlsxMatch = fileName.match('.xlsx$');\n        let csvMatch = fileName.match('.csv$');\n        if (xlsxMatch !== null && xlsxMatch[0] === ('.' + this.mSaveType)) {\n            this.saveInternal();\n            this.mArchive.save(fileName).then(() => {\n                this.mArchive.destroy();\n            });\n        }\n        else if (csvMatch !== null && csvMatch[0] === ('.' + this.mSaveType)) {\n            this.csvHelper.save(fileName);\n        }\n        else {\n            throw Error('Save type and file extension is different.');\n        }\n    }\n    saveInternal() {\n        this.saveWorkbook();\n        this.saveWorksheets();\n        this.saveSharedString();\n        this.saveStyles();\n        this.saveApp(this.builtInProperties);\n        this.saveCore(this.builtInProperties);\n        this.saveContentType();\n        this.saveTopLevelRelation();\n        this.saveWorkbookRelation();\n    }\n    saveWorkbook() {\n        /* tslint:disable-next-line:max-line-length */\n        let workbookTemp = '<?xml version=\"1.0\" encoding=\"utf-8\"?><workbook xmlns:r = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" xmlns= \"http://schemas.openxmlformats.org/spreadsheetml/2006/main\"><workbookPr codeName=\"ThisWorkbook\" defaultThemeVersion= \"153222\"/><bookViews><workbookView activeTab=\"0\"/></bookViews>';\n        let sheets = '<sheets>';\n        let length = this.worksheets.length;\n        for (let i = 0; i < length; i++) {\n            /* tslint:disable-next-line:max-line-length */\n            let sheetName = this.worksheets[i].name;\n            sheetName = sheetName.replace(\"&\", \"&amp;\");\n            sheetName = sheetName.replace(\"<\", \"&lt;\");\n            sheetName = sheetName.replace(\">\", \"&gt;\");\n            sheetName = sheetName.replace(\"\\\"\", \"&quot;\");\n            sheets += '<sheet name=\"' + sheetName + '\" sheetId=\"' + (i + 1).toString() + '\" r:id =\"rId' + (i + 1).toString() + '\" />';\n        }\n        sheets += '</sheets>';\n        workbookTemp += sheets;\n        if (this.printTitles.size > 0) {\n            let printTitle = '<definedNames>';\n            this.printTitles.forEach((value, key) => {\n                printTitle += '<definedName name=\"_xlnm.Print_Titles\" localSheetId=\"' + key + '\">' + value + '</definedName>';\n            });\n            printTitle += '</definedNames>';\n            workbookTemp += printTitle;\n        }\n        this.addToArchive(workbookTemp + '</workbook>', 'xl/workbook.xml');\n    }\n    saveWorksheets() {\n        let length = this.worksheets.length;\n        for (let i = 0; i < length; i++) {\n            this.saveWorksheet(this.worksheets[i], i);\n        }\n    }\n    saveWorksheet(sheet, index) {\n        let sheetBlob = new BlobHelper();\n        /* tslint:disable-next-line:max-line-length */\n        let sheetString = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><worksheet xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" xmlns:x14=\"http://schemas.microsoft.com/office/spreadsheetml/2009/9/main\" xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\">';\n        if (!sheet.isSummaryRowBelow) {\n            sheetString += ('<sheetPr>' + '<outlinePr ' + 'summaryBelow=\"0\" >' + '</outlinePr>' + '</sheetPr>');\n        }\n        else {\n            sheetString += ('<sheetPr />');\n        }\n        sheetString += this.saveSheetView(sheet);\n        if (sheet.columns !== undefined) {\n            let colString = '<cols>';\n            for (let column of sheet.columns) {\n                /* tslint:disable-next-line:max-line-length */\n                if (column.width !== undefined) {\n                    colString += '<col min=\"' + (column.index) + '\" max=\"' + (column.index) + '\" width=\"' + this.pixelsToColumnWidth(column.width) + '\" customWidth=\"1\" />';\n                }\n                else {\n                    colString += '<col min=\"' + (column.index) + '\" max=\"' + (column.index) + '\" width=\"' + '8.43' + '\" customWidth=\"1\" />';\n                }\n            }\n            sheetString += (colString + '</cols>');\n        }\n        sheetString += ('<sheetData>');\n        sheetBlob.append(sheetString);\n        sheetString = '';\n        if (sheet.rows !== undefined) {\n            for (let row of sheet.rows) {\n                let rowString = '<row r=\"' + (row.index) + '\" ';\n                if (!isNullOrUndefined(row.spans)) {\n                    rowString += 'spans=\"' + row.spans + '\" ';\n                }\n                if (row.height !== undefined) {\n                    rowString += ('ht=\"' + this.pixelsToRowHeight(row.height) + '\" customHeight=\"1\" ');\n                }\n                if (row.grouping !== undefined) {\n                    if (row.grouping.isHidden) {\n                        rowString += ('hidden=\"1\" ');\n                    }\n                    if (row.grouping.outlineLevel !== undefined) {\n                        rowString += ('outlineLevel=\"' + row.grouping.outlineLevel + '\" ');\n                    }\n                    if (row.grouping.isCollapsed) {\n                        rowString += ('collapsed=\"1\" ');\n                    }\n                }\n                rowString += ('>');\n                for (let cell of row.cells) {\n                    if (cell !== undefined && (cell.value !== undefined || cell.cellStyle !== undefined)) {\n                        rowString += ('<c r=\"' + cell.refName + '\" ');\n                        if (cell.saveType !== undefined) {\n                            rowString += ('t=\"' + cell.saveType + '\" ');\n                        }\n                        if (cell.styleIndex !== undefined) {\n                            rowString += ('s=\"' + cell.styleIndex + '\" ');\n                        }\n                        rowString += (' >');\n                        if (cell.formula !== undefined) {\n                            rowString += ('<f>' + cell.formula + '</f>');\n                        }\n                        if (cell.value !== undefined) {\n                            rowString += ('<v>' + cell.value + '</v></c>');\n                        }\n                        else {\n                            rowString += ('</c>');\n                        }\n                    }\n                }\n                rowString += ('</row>');\n                sheetBlob.append(rowString);\n            }\n        }\n        sheetString += ('</sheetData>');\n        /* tslint:disable-next-line:max-line-length */\n        if (sheet.autoFilters !== null && sheet.autoFilters !== undefined)\n            sheetString += ('<autoFilter ref=\"' + this.getCellName(sheet.autoFilters.row, sheet.autoFilters.column) + ':' + this.getCellName(sheet.autoFilters.lastRow, sheet.autoFilters.lastColumn) + '\"/>');\n        if (sheet.mergeCells.length > 0) {\n            sheetString += ('<mergeCells count=\"' + sheet.mergeCells.length + '\">');\n            for (let mCell of sheet.mergeCells) {\n                sheetString += ('<mergeCell ref=\"' + mCell.ref + '\" />');\n            }\n            sheetString += ('</mergeCells>');\n        }\n        if (sheet.hyperLinks.length > 0) {\n            sheetString += ('<hyperlinks>');\n            for (let hLink of sheet.hyperLinks) {\n                sheetString += ('<hyperlink ref=\"' + hLink.ref + '\" r:id=\"rId' + hLink.rId + '\" />');\n            }\n            sheetString += ('</hyperlinks>');\n        }\n        /* tslint:disable-next-line:max-line-length */\n        sheetString += ('<pageMargins left=\"0.75\" right=\"0.75\" top=\"1\" bottom=\"1\" header=\"0.5\" footer=\"0.5\" /><headerFooter scaleWithDoc=\"1\" alignWithMargins=\"0\" differentFirst=\"0\" differentOddEven=\"0\" />');\n        if (sheet.images != undefined && sheet.images.length > 0) {\n            this.drawingCount++;\n            this.saveDrawings(sheet, sheet.index);\n            sheetString += '<drawing r:id=\"rId' + (sheet.hyperLinks.length + 1) + '\"/>';\n        }\n        this.addToArchive(this.saveSheetRelations(sheet), ('xl/worksheets/_rels/sheet' + sheet.index + '.xml.rels'));\n        sheetBlob.append(sheetString + '</worksheet>');\n        this.addToArchive(sheetBlob.getBlob(), 'xl/worksheets' + '/sheet' + (index + 1) + '.xml');\n    }\n    saveDrawings(sheet, index) {\n        let drawings = new BlobHelper();\n        /* tslint:disable-next-line:max-line-length */\n        let sheetDrawingString = '<xdr:wsDr xmlns:xdr=\"http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing\" xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">';\n        if (sheet.images !== undefined) {\n            let imgId = 0;\n            for (let pic of sheet.images) {\n                if (pic.height !== undefined && pic.width !== undefined) {\n                    this.updatelastRowOffset(sheet, pic);\n                    this.updatelastColumnOffSet(sheet, pic);\n                    pic.lastRow -= 1;\n                    pic.lastColumn -= 1;\n                }\n                else if (pic.lastRow !== undefined && pic.lastColumn !== undefined) {\n                    pic.lastRowOffset = 0;\n                    pic.lastColOffset = 0;\n                }\n                imgId++;\n                sheetDrawingString += '<xdr:twoCellAnchor editAs=\"oneCell\">';\n                sheetDrawingString += '<xdr:from><xdr:col>';\n                //col\n                sheetDrawingString += pic.column - 1;\n                sheetDrawingString += '</xdr:col><xdr:colOff>';\n                //colOff\n                sheetDrawingString += 0;\n                sheetDrawingString += '</xdr:colOff><xdr:row>';\n                //row\n                sheetDrawingString += pic.row - 1;\n                sheetDrawingString += '</xdr:row><xdr:rowOff>';\n                //rowOff\n                sheetDrawingString += 0;\n                sheetDrawingString += '</xdr:rowOff></xdr:from>';\n                sheetDrawingString += '<xdr:to><xdr:col>';\n                //col\n                sheetDrawingString += pic.lastColumn;\n                sheetDrawingString += '</xdr:col><xdr:colOff>';\n                //colOff\n                sheetDrawingString += pic.lastColOffset;\n                sheetDrawingString += '</xdr:colOff><xdr:row>';\n                //row\n                sheetDrawingString += pic.lastRow;\n                sheetDrawingString += '</xdr:row><xdr:rowOff>';\n                //rowOff\n                sheetDrawingString += pic.lastRowOffset;\n                sheetDrawingString += '</xdr:rowOff></xdr:to>';\n                sheetDrawingString += '<xdr:pic>';\n                sheetDrawingString += '<xdr:nvPicPr>';\n                sheetDrawingString += '<xdr:cNvPr id=\"' + imgId + '\" name=\"Picture ' + imgId + '\"> </xdr:cNvPr>';\n                sheetDrawingString += '<xdr:cNvPicPr><a:picLocks noChangeAspect=\"1\"/></xdr:cNvPicPr> </xdr:nvPicPr>';\n                sheetDrawingString += '<xdr:blipFill>';\n                /* tslint:disable-next-line:max-line-length */\n                sheetDrawingString += '<a:blip xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" r:embed=\"rId' + imgId + '\" cstate=\"print\">';\n                sheetDrawingString += '</a:blip><a:stretch><a:fillRect /></a:stretch></xdr:blipFill>';\n                sheetDrawingString += '<xdr:spPr>';\n                sheetDrawingString += '<a:xfrm';\n                if (pic.rotation != undefined && pic.rotation <= 3600 && pic.rotation >= -3600) {\n                    sheetDrawingString += ' rot=\"' + (pic.rotation * 60000) + '\"';\n                }\n                if (pic.verticalFlip != undefined && pic.verticalFlip != false) {\n                    sheetDrawingString += ' flipV=\"1\"';\n                }\n                if (pic.horizontalFlip != undefined && pic.horizontalFlip != false) {\n                    sheetDrawingString += ' flipH=\"1\"';\n                }\n                sheetDrawingString += '/>';\n                sheetDrawingString += '<a:prstGeom prst=\"rect\"><a:avLst /></a:prstGeom></xdr:spPr>';\n                sheetDrawingString += '</xdr:pic><xdr:clientData /></xdr:twoCellAnchor>';\n                let imageFile = new BlobHelper();\n                let imageData = this.convertBase64toImage(pic.image);\n                this.imageCount += 1;\n                this.addToArchive(imageData, 'xl/media/image' + this.imageCount + '.png');\n            }\n            drawings.append(sheetDrawingString);\n            drawings.append('</xdr:wsDr>');\n            this.saveDrawingRelations(sheet);\n            this.addToArchive(drawings.getBlob(), 'xl/drawings/drawing' + this.drawingCount + '.xml');\n        }\n    }\n    updatelastRowOffset(sheet, picture) {\n        let iCurHeight = picture.height;\n        let iCurRow = picture.row;\n        let iCurOffset = 0;\n        while (iCurHeight >= 0) {\n            let iRowHeight = 0;\n            if (sheet.rows !== undefined && sheet.rows[iCurRow - 1] !== undefined)\n                iRowHeight = this.convertToPixels(sheet.rows[iCurRow - 1].height === undefined ? 15 : sheet.rows[iCurRow - 1].height);\n            else\n                iRowHeight = this.convertToPixels(15);\n            let iSpaceInCell = iRowHeight - (iCurOffset * iRowHeight / 256);\n            if (iSpaceInCell > iCurHeight) {\n                picture.lastRow = iCurRow;\n                picture.lastRowOffset = iCurOffset + (iCurHeight * 256 / iRowHeight);\n                let rowHiddenHeight = 0;\n                if (sheet.rows !== undefined && sheet.rows[iCurRow - 1] !== undefined)\n                    rowHiddenHeight = this.convertToPixels(sheet.rows[iCurRow - 1].height === undefined ? 15 : sheet.rows[iCurRow - 1].height);\n                else\n                    rowHiddenHeight = this.convertToPixels(15);\n                picture.lastRowOffset = (rowHiddenHeight * picture.lastRowOffset) / 256;\n                picture.lastRowOffset = Math.round(picture.lastRowOffset / this.unitsProportions[7]);\n                break;\n            }\n            else {\n                iCurHeight -= iSpaceInCell;\n                iCurRow++;\n                iCurOffset = 0;\n            }\n        }\n    }\n    updatelastColumnOffSet(sheet, picture) {\n        let iCurWidth = picture.width;\n        let iCurCol = picture.column;\n        let iCurOffset = 0;\n        while (iCurWidth >= 0) {\n            let iColWidth = 0;\n            if (sheet.columns !== undefined && sheet.columns[iCurCol - 1] !== undefined)\n                iColWidth = this.ColumnWidthToPixels(sheet.columns[iCurCol - 1].width === undefined ? 8.43 : sheet.columns[iCurCol - 1].width);\n            else\n                iColWidth = this.ColumnWidthToPixels(8.43);\n            let iSpaceInCell = iColWidth - (iCurOffset * iColWidth / 1024);\n            if (iSpaceInCell > iCurWidth) {\n                picture.lastColumn = iCurCol;\n                picture.lastColOffset = iCurOffset + (iCurWidth * 1024 / iColWidth);\n                let colHiddenWidth = 0;\n                if (sheet.columns !== undefined && sheet.columns[iCurCol - 1] !== undefined)\n                    colHiddenWidth = this.ColumnWidthToPixels(sheet.columns[iCurCol - 1].width === undefined ? 8.43 : sheet.columns[iCurCol].width);\n                else\n                    colHiddenWidth = this.ColumnWidthToPixels(8.43);\n                picture.lastColOffset = (colHiddenWidth * picture.lastColOffset) / 1024;\n                picture.lastColOffset = Math.round(picture.lastColOffset / this.unitsProportions[7]);\n                break;\n            }\n            else {\n                iCurWidth -= iSpaceInCell;\n                iCurCol++;\n                iCurOffset = 0;\n            }\n        }\n    }\n    convertToPixels(value) {\n        return value * this.unitsProportions[6];\n    }\n    convertBase64toImage(img) {\n        const byteStr = window.atob(img);\n        const buffer = new ArrayBuffer(byteStr.length);\n        const data = new Uint8Array(buffer);\n        for (let i = 0; i < byteStr.length; i++) {\n            data[i] = byteStr.charCodeAt(i);\n        }\n        const blob = new Blob([data], { type: 'image/png' });\n        return blob;\n    }\n    saveDrawingRelations(sheet) {\n        /* tslint:disable-next-line:max-line-length */\n        let drawingRelation = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">';\n        let length = sheet.images.length;\n        let id = this.imageCount - sheet.images.length;\n        for (let i = 1; i <= length; i++) {\n            id++;\n            /* tslint:disable-next-line:max-line-length */\n            drawingRelation += '<Relationship Id=\"rId' + i + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\" Target=\"../media/image' + id + '.png\" />';\n        }\n        this.addToArchive((drawingRelation + '</Relationships>'), 'xl/drawings/_rels/drawing' + this.drawingCount + '.xml.rels');\n    }\n    pixelsToColumnWidth(pixels) {\n        let dDigitWidth = 7;\n        let val = (pixels > dDigitWidth + 5) ?\n            this.trunc((pixels - 5) / dDigitWidth * 100 + 0.5) / 100 :\n            pixels / (dDigitWidth + 5);\n        return (val > 1) ?\n            ((val * dDigitWidth + 5) / dDigitWidth * 256.0) / 256.0 :\n            (val * (dDigitWidth + 5) / dDigitWidth * 256.0) / 256.0;\n    }\n    ColumnWidthToPixels(val) {\n        let dDigitWidth = 7;\n        let fileWidth = (val > 1) ?\n            ((val * dDigitWidth + 5) / dDigitWidth * 256.0) / 256.0 :\n            (val * (dDigitWidth + 5) / dDigitWidth * 256.0) / 256.0;\n        return this.trunc(((256 * fileWidth + this.trunc(128 / dDigitWidth)) / 256) * dDigitWidth);\n    }\n    trunc(x) {\n        let n = x - x % 1;\n        return n === 0 && (x < 0 || (x === 0 && (1 / x !== 1 / 0))) ? -0 : n;\n    }\n    pixelsToRowHeight(pixels) {\n        return (pixels * this.unitsProportions[5] / this.unitsProportions[6]);\n    }\n    saveSheetRelations(sheet) {\n        /* tslint:disable-next-line:max-line-length */\n        let relStr = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">';\n        for (let hLink of sheet.hyperLinks) {\n            /* tslint:disable-next-line:max-line-length */\n            relStr += '<Relationship Id=\"rId' + hLink.rId + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink\" Target=\"' + this.processString(hLink.target) + '\" TargetMode=\"External\" />';\n        }\n        if (sheet.images != undefined && sheet.images.length > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            relStr += '<Relationship Id=\"rId' + (sheet.hyperLinks.length + 1) + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/drawing\" Target=\"../drawings/drawing' + this.drawingCount + '.xml\" />';\n        }\n        relStr += '</Relationships>';\n        return relStr;\n    }\n    saveSheetView(sheet) {\n        let paneString = '<sheetViews><sheetView workbookViewId=\"0\" ';\n        if (sheet.enableRtl === true) {\n            paneString += 'rightToLeft=\"1\"';\n        }\n        if (sheet.showGridLines === false) {\n            paneString += 'showGridLines=\"0\" >';\n        }\n        else {\n            paneString += '>';\n        }\n        if (sheet.freezePanes !== undefined) {\n            paneString += '<pane state=\"frozen\"' +\n                ' topLeftCell=\"' + sheet.freezePanes.leftCell + '\" ';\n            if (sheet.freezePanes.row !== 0) {\n                paneString += 'ySplit=\"' + sheet.freezePanes.row + '\" ';\n            }\n            if (sheet.freezePanes.column !== 0) {\n                paneString += 'xSplit=\"' + sheet.freezePanes.column + '\" ';\n            }\n            paneString += '/>';\n        }\n        paneString += '</sheetView></sheetViews > ';\n        return paneString;\n    }\n    saveSharedString() {\n        let length = this.sharedString.length;\n        if (length > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            let sstStart = '<?xml version=\"1.0\" encoding=\"utf-8\"?><sst uniqueCount=\"' + length + '\" count=\"' + this.sharedStringCount + '\" xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\">';\n            let si = '';\n            for (let i = 0; i < length; i++) {\n                if (this.sharedString[i].indexOf('<r>') !== 0) {\n                    si += '<si><t>';\n                    si += this.processString(this.sharedString[i]);\n                    si += '</t></si>';\n                }\n                else {\n                    si += '<si>';\n                    si += this.sharedString[i];\n                    si += '</si>';\n                }\n            }\n            si += '</sst>';\n            this.addToArchive(sstStart + si, 'xl/sharedStrings.xml');\n        }\n    }\n    processString(value) {\n        if (value.indexOf('&') !== -1) {\n            value = value.replace(/&/g, '&amp;');\n        }\n        if (value.indexOf('<') !== -1) {\n            value = value.replace(/</g, '&lt;');\n        }\n        if (value.indexOf('>') !== -1) {\n            value = value.replace(/>/g, '&gt;');\n        }\n        return value;\n    }\n    saveStyles() {\n        this.updateCellXfsStyleXfs();\n        /* tslint:disable-next-line:max-line-length */\n        let styleTemp = '<?xml version=\"1.0\" encoding=\"utf-8\"?><styleSheet xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" mc:Ignorable=\"x14ac\" xmlns:x14ac=\"http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac\" xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\">';\n        styleTemp += this.saveNumberFormats();\n        styleTemp += this.saveFonts();\n        styleTemp += this.saveFills();\n        styleTemp += this.saveBorders();\n        styleTemp += this.saveCellStyleXfs();\n        styleTemp += this.saveCellXfs();\n        styleTemp += this.saveCellStyles();\n        this.addToArchive(styleTemp + '</styleSheet>', 'xl/styles.xml');\n    }\n    updateCellXfsStyleXfs() {\n        for (let style of this.mStyles) {\n            let cellXfs = undefined;\n            if (style.isGlobalStyle) {\n                cellXfs = new CellStyleXfs();\n                cellXfs.xfId = (style.index - 1);\n            }\n            else {\n                cellXfs = new CellXfs();\n                cellXfs.xfId = 0;\n            }\n            //Add font\n            let compareFontResult = this.isNewFont(style);\n            if (!compareFontResult.result) {\n                let font = new Font();\n                font.b = style.bold;\n                font.i = style.italic;\n                font.name = style.fontName;\n                font.sz = style.fontSize;\n                font.u = style.underline;\n                font.strike = style.strikeThrough;\n                font.color = ('FF' + style.fontColor.replace('#', ''));\n                this.mFonts.push(font);\n                cellXfs.fontId = this.mFonts.length - 1;\n            }\n            else {\n                cellXfs.fontId = compareFontResult.index;\n            }\n            //Add fill\n            if (style.backColor !== 'none') {\n                let backColor = 'FF' + style.backColor.replace('#', '');\n                if (this.mFills.has(backColor)) {\n                    let fillId = this.mFills.get(backColor);\n                    cellXfs.fillId = fillId;\n                }\n                else {\n                    let fillId = this.mFills.size + 2;\n                    this.mFills.set(backColor, fillId);\n                    cellXfs.fillId = (fillId);\n                }\n            }\n            else {\n                cellXfs.fillId = 0;\n            }\n            //Add border            \n            if (!this.isNewBorder(style)) {\n                this.mBorders.push(style.borders);\n                cellXfs.borderId = this.mBorders.length;\n            }\n            else {\n                cellXfs.borderId = 0;\n            }\n            //Add Number Format            \n            if (style.numberFormat !== 'GENERAL') {\n                if (this.mNumFmt.has(style.numberFormat)) {\n                    let numFmt = this.mNumFmt.get(style.numberFormat);\n                    cellXfs.numFmtId = numFmt.numFmtId;\n                }\n                else {\n                    let id = this.mNumFmt.size + 164;\n                    this.mNumFmt.set(style.numberFormat, new NumFmt(id, style.numberFormat));\n                    cellXfs.numFmtId = id;\n                }\n            }\n            else {\n                if (style.numberFormat === 'GENERAL' && style.numFmtId === 14) {\n                    cellXfs.numFmtId = 14;\n                }\n                else {\n                    cellXfs.numFmtId = 0;\n                }\n            }\n            //Add alignment            \n            if (!style.isGlobalStyle) {\n                cellXfs.applyAlignment = 1;\n            }\n            cellXfs.alignment = new Alignment();\n            cellXfs.alignment.indent = style.indent;\n            cellXfs.alignment.horizontal = style.hAlign;\n            cellXfs.alignment.vertical = style.vAlign;\n            cellXfs.alignment.wrapText = style.wrapText ? 1 : 0;\n            cellXfs.alignment.rotation = style.rotation;\n            if (style.isGlobalStyle) {\n                this.mCellStyleXfs.push(cellXfs);\n                this.mCellXfs.push(cellXfs);\n            }\n            else {\n                //Add cellxfs\n                this.mCellXfs.push(cellXfs);\n            }\n        }\n    }\n    saveNumberFormats() {\n        if (this.mNumFmt.size >= 1) {\n            let numFmtStyle = '<numFmts count=\"' + (this.mNumFmt.size) + '\">';\n            this.mNumFmt.forEach((value, key) => {\n                numFmtStyle += '<numFmt numFmtId=\"' + value.numFmtId + '\" formatCode=\"' + value.formatCode.replace(/\"/g, '&quot;') + '\" />';\n            });\n            return (numFmtStyle += '</numFmts>');\n        }\n        else {\n            return '';\n        }\n    }\n    saveFonts() {\n        /* tslint:disable-next-line:max-line-length */\n        let fontStyle = '<fonts count=\"' + (this.mFonts.length) + '\">';\n        if (this.mFonts.length >= 1) {\n            for (let font of this.mFonts) {\n                fontStyle += '<font>';\n                if (font.b) {\n                    fontStyle += '<b />';\n                }\n                if (font.i) {\n                    fontStyle += '<i />';\n                }\n                if (font.u) {\n                    fontStyle += '<u />';\n                }\n                if (font.strike) {\n                    fontStyle += '<strike />';\n                }\n                fontStyle += '<sz val=\"' + font.sz + '\" />';\n                fontStyle += '<color rgb=\"' + font.color + '\" />';\n                fontStyle += '<name val=\"' + font.name + '\" /></font>';\n            }\n        }\n        return fontStyle + '</fonts>';\n    }\n    saveFills() {\n        /* tslint:disable-next-line:max-line-length */\n        let fillsStyle = '<fills count=\"' + (this.mFills.size + 2) + '\"><fill><patternFill patternType=\"none\"></patternFill></fill><fill><patternFill patternType=\"gray125\"></patternFill></fill>';\n        if (this.mFills.size >= 1) {\n            this.mFills.forEach((value, key) => {\n                /* tslint:disable-next-line:max-line-length */\n                fillsStyle += '<fill><patternFill patternType=\"solid\"><fgColor rgb=\"' + key + '\" /><bgColor rgb=\"FFFFFFFF\" /></patternFill></fill>';\n            });\n        }\n        return fillsStyle + '</fills>';\n    }\n    saveBorders() {\n        /* tslint:disable-next-line:max-line-length */\n        let bordersStyle = '<borders count=\"' + (this.mBorders.length + 1) + '\"><border><left /><right /><top /><bottom /><diagonal /></border>';\n        if (this.mBorders.length >= 1) {\n            for (let borders of this.mBorders) {\n                if (this.isAllBorder(borders)) {\n                    let color = borders.all.color.replace('#', '');\n                    let lineStyle = borders.all.lineStyle;\n                    /* tslint:disable-next-line:max-line-length */\n                    bordersStyle += '<border><left style=\"' + lineStyle + '\"><color rgb=\"FF' + color + '\" /></left><right style=\"' + lineStyle + '\"><color rgb=\"FF' + color + '\" /></right><top style=\"' + lineStyle + '\"><color rgb=\"FF' + color + '\" /></top><bottom style=\"' + lineStyle + '\"><color rgb=\"FF' + color + '\" /></bottom></border>';\n                }\n                else {\n                    /* tslint:disable-next-line:max-line-length */\n                    bordersStyle += '<border><left style=\"' + borders.left.lineStyle + '\"><color rgb=\"FF' + borders.left.color.replace('#', '') + '\" /></left><right style=\"' + borders.right.lineStyle + '\"><color rgb=\"FF' + borders.right.color.replace('#', '') + '\" /></right><top style=\"' + borders.top.lineStyle + '\"><color rgb=\"FF' + borders.top.color.replace('#', '') + '\" /></top><bottom style=\"' + borders.bottom.lineStyle + '\"><color rgb=\"FF' + borders.bottom.color.replace('#', '') + '\" /></bottom></border>';\n                }\n            }\n        }\n        return bordersStyle + '</borders>';\n    }\n    saveCellStyles() {\n        let cellStyleString = '<cellStyles  count=\"' + (this.cellStyles.size) + '\">';\n        this.cellStyles.forEach((value, key) => {\n            cellStyleString += '<cellStyle name=\"' + key + '\" xfId=\"' + this.cellStyles.get(key).xfId + '\"';\n            if (key === 'Normal') {\n                cellStyleString += ' builtinId=\"0\"';\n            }\n            cellStyleString += ' />';\n        });\n        return cellStyleString += '</cellStyles>';\n    }\n    saveCellStyleXfs() {\n        /* tslint:disable-next-line:max-line-length */\n        let cellXfsStyle = '<cellStyleXfs count=\"' + (this.mCellStyleXfs.length + 1) + '\"><xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"0\" />';\n        if (this.mCellStyleXfs.length >= 1) {\n            for (let cellStyleXf of this.mCellStyleXfs) {\n                /* tslint:disable-next-line:max-line-length */\n                cellXfsStyle += '<xf numFmtId=\"' + cellStyleXf.numFmtId + '\" fontId=\"' + cellStyleXf.fontId + '\" fillId=\"' + cellStyleXf.fillId + '\" borderId=\"' + cellStyleXf.borderId + '\" ';\n                if (cellStyleXf.alignment !== undefined) {\n                    cellXfsStyle += '>' + this.saveAlignment(cellStyleXf) + '</xf>';\n                }\n                else {\n                    cellXfsStyle += ' />';\n                }\n            }\n        }\n        return cellXfsStyle + '</cellStyleXfs>';\n    }\n    saveCellXfs() {\n        /* tslint:disable-next-line:max-line-length */\n        let cellXfsStyle = '<cellXfs count=\"' + (this.mCellXfs.length + 1) + '\"><xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"0\" xfId=\"0\" />';\n        if (this.mCellXfs.length >= 1) {\n            for (let cellXf of this.mCellXfs) {\n                /* tslint:disable-next-line:max-line-length */\n                cellXfsStyle += '<xf numFmtId=\"' + cellXf.numFmtId + '\" fontId=\"' + cellXf.fontId + '\" fillId=\"' + cellXf.fillId + '\" borderId=\"' + cellXf.borderId + '\" xfId=\"' + cellXf.xfId + '\" ';\n                if (cellXf.applyAlignment === 1) {\n                    cellXfsStyle += 'applyAlignment=\"1\"';\n                }\n                cellXfsStyle += '>' + this.saveAlignment(cellXf) + '</xf>';\n            }\n        }\n        return cellXfsStyle + '</cellXfs>';\n    }\n    saveAlignment(cellXf) {\n        let alignString = '<alignment ';\n        if (cellXf.alignment.horizontal !== undefined) {\n            alignString += 'horizontal=\"' + cellXf.alignment.horizontal + '\" ';\n        }\n        if (cellXf.alignment.indent !== undefined && cellXf.alignment.indent !== 0) {\n            alignString += 'indent=\"' + cellXf.alignment.indent + '\" ';\n        }\n        else if (cellXf.alignment.rotation !== undefined && cellXf.alignment.rotation !== 0) {\n            alignString += 'textRotation=\"' + cellXf.alignment.rotation + '\" ';\n        }\n        if (cellXf.alignment.vertical !== undefined) {\n            alignString += 'vertical=\"' + cellXf.alignment.vertical + '\" ';\n        }\n        alignString += 'wrapText=\"' + cellXf.alignment.wrapText + '\" />';\n        return alignString;\n    }\n    saveApp(builtInProperties) {\n        /* tslint:disable-next-line:max-line-length */\n        let appString = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Properties xmlns=\"http://schemas.openxmlformats.org/officeDocument/2006/extended-properties\"><Application>Essential XlsIO</Application>';\n        if (builtInProperties !== undefined) {\n            if (builtInProperties.manager !== undefined) {\n                appString += '<Manager>' + builtInProperties.manager + '</Manager>';\n            }\n            if (builtInProperties.company !== undefined) {\n                appString += '<Company>' + builtInProperties.company + '</Company>';\n            }\n        }\n        this.addToArchive((appString + '</Properties>'), 'docProps/app.xml');\n    }\n    saveCore(builtInProperties) {\n        let createdDate = new Date();\n        /* tslint:disable-next-line:max-line-length */\n        let coreString = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><cp:coreProperties xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:dcterms=\"http://purl.org/dc/terms/\" xmlns:dcmitype=\"http://purl.org/dc/dcmitype/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:cp=\"http://schemas.openxmlformats.org/package/2006/metadata/core-properties\">';\n        if (this.builtInProperties !== undefined) {\n            if (builtInProperties.author !== undefined) {\n                coreString += '<dc:creator>' + builtInProperties.author + '</dc:creator>';\n            }\n            if (builtInProperties.subject !== undefined) {\n                coreString += '<dc:subject>' + builtInProperties.subject + '</dc:subject>';\n            }\n            if (builtInProperties.category !== undefined) {\n                coreString += '<cp:category>' + builtInProperties.category + '</cp:category>';\n            }\n            if (builtInProperties.comments !== undefined) {\n                coreString += '<dc:description>' + builtInProperties.comments + '</dc:description>';\n            }\n            if (builtInProperties.title !== undefined) {\n                coreString += '<dc:title>' + builtInProperties.title + '</dc:title>';\n            }\n            if (builtInProperties.tags !== undefined) {\n                coreString += '<cp:keywords>' + builtInProperties.tags + '</cp:keywords>';\n            }\n            if (builtInProperties.status !== undefined) {\n                coreString += '<cp:contentStatus>' + builtInProperties.status + '</cp:contentStatus>';\n            }\n            if (builtInProperties.createdDate !== undefined) {\n                /* tslint:disable-next-line:max-line-length */\n                coreString += '<dcterms:created xsi:type=\"dcterms:W3CDTF\">' + builtInProperties.createdDate.toISOString() + '</dcterms:created>';\n            }\n            else {\n                coreString += '<dcterms:created xsi:type=\"dcterms:W3CDTF\">' + createdDate.toISOString() + '</dcterms:created>';\n            }\n            if (builtInProperties.modifiedDate !== undefined) {\n                /* tslint:disable-next-line:max-line-length */\n                coreString += '<dcterms:modified xsi:type=\"dcterms:W3CDTF\">' + builtInProperties.modifiedDate.toISOString() + '</dcterms:modified>';\n            }\n            else {\n                coreString += '<dcterms:modified xsi:type=\"dcterms:W3CDTF\">' + createdDate.toISOString() + '</dcterms:modified>';\n            }\n        }\n        else {\n            coreString += '<dcterms:created xsi:type=\"dcterms:W3CDTF\">' + createdDate.toISOString() + '</dcterms:created>';\n            coreString += '<dcterms:modified xsi:type=\"dcterms:W3CDTF\">' + createdDate.toISOString() + '</dcterms:modified>';\n        }\n        /* tslint:disable-next-line:max-line-length */\n        coreString += '</cp:coreProperties>';\n        this.addToArchive(coreString, 'docProps/core.xml');\n    }\n    saveTopLevelRelation() {\n        /* tslint:disable-next-line:max-line-length */\n        let topRelation = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\"><Relationship Id=\"rId1\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\" Target=\"xl/workbook.xml\" /><Relationship Id=\"rId2\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties\" Target=\"docProps/app.xml\" /><Relationship Id=\"rId3\" Type=\"http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties\" Target=\"docProps/core.xml\" /></Relationships>';\n        this.addToArchive(topRelation, '_rels/.rels');\n    }\n    saveWorkbookRelation() {\n        /* tslint:disable-next-line:max-line-length */\n        let wbRelation = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">';\n        let length = this.worksheets.length;\n        let count = 0;\n        for (let i = 0; i < length; i++, count++) {\n            /* tslint:disable-next-line:max-line-length */\n            wbRelation += '<Relationship Id=\"rId' + (i + 1).toString() + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet\" Target=\"worksheets/sheet' + (i + 1).toString() + '.xml\" />';\n        }\n        /* tslint:disable-next-line:max-line-length */\n        wbRelation += '<Relationship Id=\"rId' + (++count).toString() + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\" Target=\"styles.xml\" />';\n        if (this.sharedStringCount > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            wbRelation += '<Relationship Id=\"rId' + (++count).toString() + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings\" Target=\"sharedStrings.xml\" />';\n        }\n        this.addToArchive((wbRelation + '</Relationships>'), 'xl/_rels/workbook.xml.rels');\n    }\n    saveContentType() {\n        /* tslint:disable-next-line:max-line-length */\n        let contentTypeString = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Types xmlns=\"http://schemas.openxmlformats.org/package/2006/content-types\"><Default Extension=\"xml\" ContentType=\"application/xml\" /><Default Extension=\"rels\" ContentType=\"application/vnd.openxmlformats-package.relationships+xml\" /><Override PartName=\"/xl/styles.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\" /><Override PartName=\"/xl/workbook.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\" /><Override PartName=\"/docProps/app.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.extended-properties+xml\" /><Override PartName=\"/docProps/core.xml\" ContentType=\"application/vnd.openxmlformats-package.core-properties+xml\" />';\n        let sheetsOverride = '';\n        let length = this.worksheets.length;\n        for (let i = 0; i < length; i++) {\n            /* tslint:disable-next-line:max-line-length */\n            sheetsOverride += '<Override PartName=\"/xl/worksheets/sheet' + (i + 1).toString() + '.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\" />';\n            if (this.worksheets[i].images != undefined && this.worksheets[i].images.length > 0) {\n                /* tslint:disable-next-line:max-line-length */\n                sheetsOverride += '<Override PartName=\"/xl/drawings/drawing' + (i + 1).toString() + '.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.drawing+xml\" />';\n            }\n        }\n        if (this.imageCount > 0)\n            sheetsOverride += '<Default Extension=\"png\" ContentType=\"image/png\" />';\n        if (this.sharedStringCount > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            contentTypeString += '<Override PartName=\"/xl/sharedStrings.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml\" />';\n        }\n        this.addToArchive((contentTypeString + sheetsOverride + '</Types>'), '[Content_Types].xml');\n    }\n    addToArchive(xmlString, itemName) {\n        if (typeof (xmlString) === 'string') {\n            let blob = new Blob([xmlString], { type: 'text/plain' });\n            let archiveItem = new ZipArchiveItem(blob, itemName);\n            this.mArchive.addItem(archiveItem);\n        }\n        else {\n            let archiveItem = new ZipArchiveItem(xmlString, itemName);\n            this.mArchive.addItem(archiveItem);\n        }\n    }\n    processMergeCells(cell, rowIndex, mergeCells) {\n        if (cell.rowSpan !== 0 || cell.colSpan !== 0) {\n            let mCell = new MergeCell();\n            mCell.x = cell.index;\n            mCell.width = cell.colSpan;\n            mCell.y = rowIndex;\n            mCell.height = cell.rowSpan;\n            let startCell = this.getCellName(mCell.y, mCell.x);\n            let endCell = this.getCellName(rowIndex + mCell.height, cell.index + mCell.width);\n            mCell.ref = startCell + ':' + endCell;\n            let mergedCell = mergeCells.add(mCell);\n            let start = { x: mCell.x, y: mCell.y };\n            let end = {\n                x: (cell.index + mCell.width), y: (rowIndex + mCell.height)\n            };\n            this.updatedMergedCellStyles(start, end, cell);\n        }\n        return mergeCells;\n    }\n    updatedMergedCellStyles(sCell, eCell, cell) {\n        for (let x = sCell.x; x <= eCell.x; x++) {\n            for (let y = sCell.y; y <= eCell.y; y++) {\n                this.mergedCellsStyle.set(this.getCellName(y, x), { x: x, y: y, styleIndex: cell.styleIndex });\n            }\n        }\n    }\n    /**\n     * Returns the tick count corresponding to the given year, month, and day.\n     * @param year number value of year\n     * @param month number value of month\n     * @param day number value of day\n     */\n    dateToTicks(year, month, day) {\n        let ticksPerDay = 10000 * 1000 * 60 * 60 * 24;\n        let daysToMonth365 = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365];\n        let daysToMonth366 = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335, 366];\n        if (year >= 1 && year <= 9999 && month >= 1 && month <= 12) {\n            let days = this.isLeapYear(year) ? daysToMonth366 : daysToMonth365;\n            let y = year - 1;\n            let n = y * 365 + ((y / 4) | 0) - ((y / 100) | 0) + ((y / 400) | 0) + days[month - 1] + day - 1;\n            return n * ticksPerDay;\n        }\n        throw new Error('Not a valid date');\n    }\n    /**\n     * Return the tick count corresponding to the given hour, minute, second.\n     * @param hour number value of hour\n     * @param minute number value if minute\n     * @param second number value of second\n     */\n    timeToTicks(hour, minute, second) {\n        if (hour >= 0 && hour < 24 && minute >= 0 && minute < 60 && second >= 0 && second < 60) {\n            let totalSeconds = hour * 3600 + minute * 60 + second;\n            return totalSeconds * 10000 * 1000;\n        }\n        throw new Error('Not valid time');\n    }\n    /**\n     * Checks if given year is a leap year.\n     * @param year Year value.\n     */\n    isLeapYear(year) {\n        return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n    }\n    /**\n     * Converts `DateTime` to the equivalent OLE Automation date.\n     */\n    toOADate(date) {\n        let ticks = 0;\n        /* tslint:disable-next-line:max-line-length */\n        ticks = this.dateToTicks(date.getFullYear(), (date.getMonth() + 1), date.getDate()) + this.timeToTicks(date.getHours(), date.getMinutes(), date.getSeconds());\n        if (ticks === 0) {\n            return 0.0;\n        }\n        let ticksPerDay = 10000 * 1000 * 60 * 60 * 24;\n        let daysTo1899 = (((365 * 4 + 1) * 25 - 1) * 4 + 1) * 4 + ((365 * 4 + 1) * 25 - 1) * 3 - 367;\n        let doubleDateOffset = daysTo1899 * ticksPerDay;\n        let oaDateMinAsTicks = (((365 * 4 + 1) * 25 - 1) - 365) * ticksPerDay;\n        if (ticks < oaDateMinAsTicks) {\n            throw new Error('Arg_OleAutDateInvalid');\n        }\n        let millisPerDay = 1000 * 60 * 60 * 24;\n        return ((ticks - doubleDateOffset) / 10000) / millisPerDay;\n    }\n}\n/**\n * BuiltInProperties Class\n * @private\n */\nexport class BuiltInProperties {\n}\n","/**\n * index class\n */\nexport * from './cell-style';\nexport * from './cell';\nexport * from './column';\nexport * from './row';\nexport * from './workbook';\nexport * from './worksheet';\nexport * from './worksheets';\nexport * from './csv-helper';\nexport * from './value-formatter';\nexport * from './blob-helper';\n"],"names":[],"mappings":"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"}